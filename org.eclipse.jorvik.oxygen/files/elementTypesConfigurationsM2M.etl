pre {
	var ePackage = Source!EPackage.all().first;
	var ePackName = ePackage.name;
	var ePackNSUri = ePackage.nsURI;
	var theConfiguration = new Target!ElementTypeSetConfiguration;
	theConfiguration.name = ePackName + " shape element nodes and edges";
	theConfiguration.metamodelNsUri = "http://www.eclipse.org/uml2/5.0.0/UML";
	theConfiguration.identifier = ePackName + ".elementTypes";
}

rule class2Shape 
transform c : Source!EClass 
to stc1 : Target!SpecializationTypeConfiguration, stc2 : Target!SpecializationTypeConfiguration {
guard : c.getEAnnotation("Node").isDefined()
	var base = c.getEAnnotation("Node").details.get("base").firstToUpperCase();
	
	stc1.name = c.name;
	stc1.hint = "UML::Class";
	stc1.identifier = ePackName + "." + c.name;
	stc1.kind = "org.eclipse.gmf.runtime.emf.type.core.IHintedType";
	
	var metamodelTypeConfig = new Target!MetamodelTypeConfiguration;
	metamodelTypeConfig.href = "platform:/plugin/org.eclipse.papyrus.uml.service.types/model/uml.elementtypesconfigurations#org.eclipse.papyrus.uml.Class";
	
	var matcherConfig = new Target!StereotypeApplicationMatcherConfiguration;
	matcherConfig.profileUri = ePackNSUri;
	matcherConfig.stereotypesQualifiedNames.add(ePackName + "::" + c.name);
	
	stc1.specializedTypes.add(metamodelTypeConfig);
	stc1.matcherConfiguration = matcherConfig;
	
	stc2.name = c.name + " shape";
	stc2.hint = "Class_Shape";
	stc2.identifier = ePackName + "." + c.name + ".shape";
	stc2.kind = "org.eclipse.gmf.runtime.emf.type.core.IHintedType";
	
	var specialisationTypeConfig = new Target!SpecializationTypeConfiguration;
	specialisationTypeConfig.href = "platform:/plugin/org.eclipse.papyrus.uml.service.types/model/uml.elementtypesconfigurations#org.eclipse.papyrus.uml.Class";
	
	stc2.specializedTypes.add(specialisationTypeConfig);
	stc2.specializedTypes.add(stc1);
}

rule associationClass2Shape 
transform c : Source!EClass 
to stc1 : Target!SpecializationTypeConfiguration {
guard : c.getEAnnotation("Edge").isDefined()
	var base = c.getEAnnotation("Edge").details.get("base").firstToUpperCase();
	stc1.name = c.name + " edge";
	stc1.hint = base + "_Edge";
	stc1.identifier = ePackName + "." + c.name + "_Edge";
	stc1.specializedTypesId.add(ePackName + "." + c.name);
	stc1.specializedTypesId.add("org.eclipse.papyrus.umldi." + base + "_Edge");
	theConfiguration.elementTypeConfigurations.add(stc1);
}

rule refEdge2Tool
transform ref : Source!EReference 
to stc1 : Target!SpecializationTypeConfiguration {
guard : ref.getEAnnotation("Edge").isDefined()
	var base = ref.getEAnnotation("Edge").details.get("base").firstToUpperCase();
	stc1.name = ref.name + " edge";
	stc1.hint = base + "_Edge";
	stc1.identifier = ePackName + "." + ref.name + "_Edge";
	stc1.specializedTypesId.add(ePackName + "." + ref.name);
	stc1.specializedTypesId.add("org.eclipse.papyrus.umldi." + base + "_Edge");
	theConfiguration.elementTypeConfigurations.add(stc1);
}