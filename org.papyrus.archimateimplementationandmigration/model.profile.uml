<?xml version="1.0" encoding="UTF-8"?>
<uml:Profile xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_36NW4Dc8EemUr5o8kbIRyQ" name="ArchimateImplementationAndMigration" URI="archimate-implementation-migration" metaclassReference="_36cncjc8EemUr5o8kbIRyQ _36lKUTc8EemUr5o8kbIRyQ _36ylsTc8EemUr5o8kbIRyQ _3656cTc8EemUr5o8kbIRyQ _37BPMTc8EemUr5o8kbIRyQ _37kBwTc8EemUr5o8kbIRyQ _37vn8Tc8EemUr5o8kbIRyQ _38cykTc8EemUr5o8kbIRyQ _38mjkTc8EemUr5o8kbIRyQ _384QYTc8EemUr5o8kbIRyQ _39DPgTc8EemUr5o8kbIRyQ _39iXsTc8EemUr5o8kbIRyQ _394V8Tc8EemUr5o8kbIRyQ">
  <eAnnotations xmi:id="_36NW4jc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
    <contents xmi:type="ecore:EPackage" xmi:id="_36NW4Tc8EemUr5o8kbIRyQ" name="ArchimateImplementationAndMigration" nsURI="http:///schemas/ArchimateImplementationAndMigration/something/1" nsPrefix="ArchimateImplementationAndMigration">
      <eAnnotations xmi:id="_36NW4zc8EemUr5o8kbIRyQ" source="PapyrusVersion">
        <details xmi:id="_36NW5Dc8EemUr5o8kbIRyQ" key="Version" value="0.0.1"/>
        <details xmi:id="_36NW5Tc8EemUr5o8kbIRyQ" key="Comment" value=""/>
        <details xmi:id="_36NW5jc8EemUr5o8kbIRyQ" key="Copyright" value=""/>
        <details xmi:id="_36NW5zc8EemUr5o8kbIRyQ" key="Date" value="2017-02-01"/>
        <details xmi:id="_36NW6Dc8EemUr5o8kbIRyQ" key="Author" value=""/>
      </eAnnotations>
      <eAnnotations xmi:id="_38kHUDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_38kHUTc8EemUr5o8kbIRyQ" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_38t4UDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_38t4UTc8EemUr5o8kbIRyQ" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_3810IDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_3810ITc8EemUr5o8kbIRyQ" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_39AzQDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_39AzQTc8EemUr5o8kbIRyQ" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_39MZcDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_39MZcTc8EemUr5o8kbIRyQ" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_39WxgDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_39WxgTc8EemUr5o8kbIRyQ" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_39fUYDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_39fUYTc8EemUr5o8kbIRyQ" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_39rhoDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_39rhoTc8EemUr5o8kbIRyQ" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_391SoDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_391SoTc8EemUr5o8kbIRyQ" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_3-Bf4Dc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_3-Bf4Tc8EemUr5o8kbIRyQ" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36NXBzc8EemUr5o8kbIRyQ" name="NodeElement">
        <eAnnotations xmi:id="_36NXCDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW6Tc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_36hf8Dc8EemUr5o8kbIRyQ" name="base_Class" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Class"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36NXCTc8EemUr5o8kbIRyQ" name="BusinessActor" eSuperTypes="_36NXBzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36N98Dc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW6jc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_36pbwDc8EemUr5o8kbIRyQ" name="base_Actor" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Actor"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36N98Tc8EemUr5o8kbIRyQ" name="BusinessRole" eSuperTypes="_36NXBzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36N98jc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW6zc8EemUr5o8kbIRyQ"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36N98zc8EemUr5o8kbIRyQ" name="BusinessCollaboration" eSuperTypes="_36NXBzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36N99Dc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW7Dc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_362QEDc8EemUr5o8kbIRyQ" name="base_Collaboration" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Collaboration"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36N99Tc8EemUr5o8kbIRyQ" name="BusinessInterface" eSuperTypes="_36NXBzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36N99jc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW7Tc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_369k0Dc8EemUr5o8kbIRyQ" name="base_OpaqueBehavior" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//OpaqueBehavior"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36N99zc8EemUr5o8kbIRyQ" name="Location" eSuperTypes="_36NXBzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36N9-Dc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW7jc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_37FgoDc8EemUr5o8kbIRyQ" name="base_Node" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Node"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36N9-Tc8EemUr5o8kbIRyQ" name="BusinessProcess" eSuperTypes="_36NXBzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36N9-jc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW7zc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_37KZIDc8EemUr5o8kbIRyQ" name="base_OpaqueBehavior" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//OpaqueBehavior"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36N9-zc8EemUr5o8kbIRyQ" name="BusinessFunction" eSuperTypes="_36NXBzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36N9_Dc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW8Dc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_37RG0Dc8EemUr5o8kbIRyQ" name="base_Collaboration" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Collaboration"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36N9_Tc8EemUr5o8kbIRyQ" name="BusinessInteraction" eSuperTypes="_36NXBzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36N9_jc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW8Tc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_37X0gDc8EemUr5o8kbIRyQ" name="base_OpaqueBehavior" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//OpaqueBehavior"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36N9_zc8EemUr5o8kbIRyQ" name="BusinessEvent" eSuperTypes="_36NXBzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36N-ADc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW8jc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_37gXYDc8EemUr5o8kbIRyQ" name="base_OpaqueBehavior" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//OpaqueBehavior"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36N-ATc8EemUr5o8kbIRyQ" name="BusinessService" eSuperTypes="_36NXBzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36OlADc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW8zc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_37nsIDc8EemUr5o8kbIRyQ" name="base_UseCase" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//UseCase"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36OlATc8EemUr5o8kbIRyQ" name="BusinessObject" eSuperTypes="_36NXBzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36OlAjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW9Dc8EemUr5o8kbIRyQ"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36OlAzc8EemUr5o8kbIRyQ" name="Representation" eSuperTypes="_36NXBzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36OlBDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW9Tc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_37zSUDc8EemUr5o8kbIRyQ" name="base_Artifact" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Artifact"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36OlBTc8EemUr5o8kbIRyQ" name="Meaning" eSuperTypes="_36NXBzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36OlBjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW9jc8EemUr5o8kbIRyQ"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36OlBzc8EemUr5o8kbIRyQ" name="Value" eSuperTypes="_36NXBzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36OlCDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW9zc8EemUr5o8kbIRyQ"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36OlCTc8EemUr5o8kbIRyQ" name="Product" eSuperTypes="_36NXBzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36OlCjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW-Dc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_38DxADc8EemUr5o8kbIRyQ" name="base_Artifact" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Artifact"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36OlCzc8EemUr5o8kbIRyQ" name="Contract" eSuperTypes="_36NXBzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36OlDDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW-Tc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_38JQkDc8EemUr5o8kbIRyQ" name="base_Artifact" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Artifact"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36OlDTc8EemUr5o8kbIRyQ" name="Grouping" eSuperTypes="_36NXBzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36PMEDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW-jc8EemUr5o8kbIRyQ"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36PMETc8EemUr5o8kbIRyQ" name="Junction" eSuperTypes="_36PMEzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36PMEjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW-zc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_38TBkDc8EemUr5o8kbIRyQ" name="base_OpaqueBehavior" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//OpaqueBehavior"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36PMEzc8EemUr5o8kbIRyQ" name="Relationship">
        <eAnnotations xmi:id="_36PMFDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW_Dc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_36Wg1Tc8EemUr5o8kbIRyQ" name="source" lowerBound="1" eType="_36NXBzc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_36Wg4Dc8EemUr5o8kbIRyQ" name="target" lowerBound="1" eType="_36NXBzc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_38ZIMDc8EemUr5o8kbIRyQ" name="base_Class" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Class"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36PMFTc8EemUr5o8kbIRyQ" name="Association" eSuperTypes="_36PMEzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36PMFjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW_Tc8EemUr5o8kbIRyQ"/>
        <eOperations xmi:id="_38kHVDc8EemUr5o8kbIRyQ" name="CheckEndTypes">
          <eAnnotations xmi:id="_38lVcTc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_38lVcjc8EemUr5o8kbIRyQ" key="body" value="let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_38kuYTc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_38kuYjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_38kuYzc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_38kuZjc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_38kuZzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_38kuaDc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_38kuaTc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_38kuajc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_38lVcDc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_38lVdTc8EemUr5o8kbIRyQ" name="CheckNavigability">
          <eAnnotations xmi:id="_38l8hTc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_38l8hjc8EemUr5o8kbIRyQ" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_38lVdzc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_38lVeDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_38lVeTc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_38lVfDc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_38l8gDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_38l8gTc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_38l8gjc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_38l8gzc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_38l8hDc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_38hEADc8EemUr5o8kbIRyQ" name="base_Association" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Association"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36PMFzc8EemUr5o8kbIRyQ" name="Access" eSuperTypes="_36PMEzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36PMGDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW_jc8EemUr5o8kbIRyQ"/>
        <eOperations xmi:id="_38t4VDc8EemUr5o8kbIRyQ" name="CheckEndTypes">
          <eAnnotations xmi:id="_38vGcDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_38vGcTc8EemUr5o8kbIRyQ" key="body" value="let source = self.base_Usage.endType->selectByKind(UML::Class), target = self.base_Usage.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_38ufYTc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_38ufYjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_38ufYzc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_38ufZjc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_38ufZzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_38ufaDc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_38ufaTc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_38ufajc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_38ufazc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_38vGdDc8EemUr5o8kbIRyQ" name="CheckNavigability">
          <eAnnotations xmi:id="_38vtgjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_38vtgzc8EemUr5o8kbIRyQ" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_38vGdjc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_38vGdzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_38vGeDc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_38vGezc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_38vGfDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_38vGfTc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_38vGfjc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_38vtgDc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_38vtgTc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_38q1ADc8EemUr5o8kbIRyQ" name="base_Usage" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Usage"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36PMGTc8EemUr5o8kbIRyQ" name="UsedBy" eSuperTypes="_36PMEzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36PzIDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NW_zc8EemUr5o8kbIRyQ"/>
        <eOperations xmi:id="_3810JDc8EemUr5o8kbIRyQ" name="CheckEndTypes">
          <eAnnotations xmi:id="_382bNzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_382bODc8EemUr5o8kbIRyQ" key="body" value="let source = self.base_Usage.endType->selectByKind(UML::Class), target = self.base_Usage.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_3810Jjc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_3810Jzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_3810KDc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_382bMTc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_382bMjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_382bMzc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_382bNDc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_382bNTc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_382bNjc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_383CQjc8EemUr5o8kbIRyQ" name="CheckNavigability">
          <eAnnotations xmi:id="_383pUzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_383pVDc8EemUr5o8kbIRyQ" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_383CRDc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_383CRTc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_383CRjc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_383CSTc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_383CSjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_383CSzc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_383pUDc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_383pUTc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_383pUjc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_38yJwDc8EemUr5o8kbIRyQ" name="base_Usage" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Usage"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36PzITc8EemUr5o8kbIRyQ" name="Realization" eSuperTypes="_36PMEzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36PzIjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NXADc8EemUr5o8kbIRyQ"/>
        <eOperations xmi:id="_39BaUDc8EemUr5o8kbIRyQ" name="CheckEndTypes">
          <eAnnotations xmi:id="_39CBYTc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_39CBYjc8EemUr5o8kbIRyQ" key="body" value="let source = self.base_Realization.endType->selectByKind(UML::Class), target = self.base_Realization.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_39BaUjc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_39BaUzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_39BaVDc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_39BaVzc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_39BaWDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_39BaWTc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_39BaWjc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_39BaWzc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_39CBYDc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_39CBZTc8EemUr5o8kbIRyQ" name="CheckNavigability">
          <eAnnotations xmi:id="_39Codzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_39CoeDc8EemUr5o8kbIRyQ" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_39CBZzc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_39CBaDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_39CBaTc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_39CocTc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_39Cocjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_39Coczc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_39CodDc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_39CodTc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_39Codjc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_389I4Dc8EemUr5o8kbIRyQ" name="base_Realization" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Realization"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36PzIzc8EemUr5o8kbIRyQ" name="Assignment" eSuperTypes="_36PMEzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36PzJDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NXATc8EemUr5o8kbIRyQ"/>
        <eOperations xmi:id="_39NAgDc8EemUr5o8kbIRyQ" name="CheckEndTypes">
          <eAnnotations xmi:id="_39OOoDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_39OOoTc8EemUr5o8kbIRyQ" key="body" value="let source = self.base_Dependency.endType->selectByKind(UML::Class), target = self.base_Dependency.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_39NAgjc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_39NAgzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_39NAhDc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_39NAhzc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_39NAiDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_39NnkDc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_39NnkTc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_39Nnkjc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_39Nnkzc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_39OOpDc8EemUr5o8kbIRyQ" name="CheckNavigability">
          <eAnnotations xmi:id="_39PcwTc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_39Pcwjc8EemUr5o8kbIRyQ" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_39O1sDc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_39O1sTc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_39O1sjc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_39O1tTc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_39O1tjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_39O1tzc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_39O1uDc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_39O1uTc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_39PcwDc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_39IIADc8EemUr5o8kbIRyQ" name="base_Dependency" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Dependency"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36PzJTc8EemUr5o8kbIRyQ" name="Aggregation" eSuperTypes="_36PMEzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36PzJjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NXAjc8EemUr5o8kbIRyQ"/>
        <eOperations xmi:id="_39WxhDc8EemUr5o8kbIRyQ" name="CheckEndTypes">
          <eAnnotations xmi:id="_39X_oDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_39X_oTc8EemUr5o8kbIRyQ" key="body" value="let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_39Wxhjc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_39Wxhzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_39WxiDc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_39XYkTc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_39XYkjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_39XYkzc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_39XYlDc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_39XYlTc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_39XYljc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_39X_pDc8EemUr5o8kbIRyQ" name="CheckNavigability">
          <eAnnotations xmi:id="_39Ymsjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_39Ymszc8EemUr5o8kbIRyQ" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_39X_pjc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_39X_pzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_39X_qDc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_39X_qzc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_39X_rDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_39X_rTc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_39X_rjc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_39YmsDc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_39YmsTc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_39THIDc8EemUr5o8kbIRyQ" name="base_Association" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Association"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36PzJzc8EemUr5o8kbIRyQ" name="Composition" eSuperTypes="_36PMEzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36PzKDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NXAzc8EemUr5o8kbIRyQ"/>
        <eOperations xmi:id="_39f7cDc8EemUr5o8kbIRyQ" name="CheckEndTypes">
          <eAnnotations xmi:id="_39gigTc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_39gigjc8EemUr5o8kbIRyQ" key="body" value="let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_39f7cjc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_39f7czc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_39f7dDc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_39f7dzc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_39f7eDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_39f7eTc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_39f7ejc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_39f7ezc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_39gigDc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_39gihTc8EemUr5o8kbIRyQ" name="CheckNavigability">
          <eAnnotations xmi:id="_39hwoTc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_39hwojc8EemUr5o8kbIRyQ" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_39gihzc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_39giiDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_39hJkDc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_39hJkzc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_39hJlDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_39hJlTc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_39hJljc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_39hJlzc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_39hwoDc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_39bqADc8EemUr5o8kbIRyQ" name="base_Association" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Association"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36PzKTc8EemUr5o8kbIRyQ" name="Flow" eSuperTypes="_36PMEzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36PzKjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NXBDc8EemUr5o8kbIRyQ"/>
        <eOperations xmi:id="_39rhpDc8EemUr5o8kbIRyQ" name="CheckEndTypes">
          <eAnnotations xmi:id="_39sIsjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_39sIszc8EemUr5o8kbIRyQ" key="body" value="let source = self.base_InformationFlow.endType->selectByKind(UML::Class), target = self.base_InformationFlow.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_39rhpjc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_39rhpzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_39rhqDc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_39rhqzc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_39rhrDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_39rhrTc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_39rhrjc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_39sIsDc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_39sIsTc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_39svwDc8EemUr5o8kbIRyQ" name="CheckNavigability">
          <eAnnotations xmi:id="_39tW0Dc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_39tW0Tc8EemUr5o8kbIRyQ" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_39svwjc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_39svwzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_39svxDc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_39svxzc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_39svyDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_39svyTc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_39svyjc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_39svyzc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_39svzDc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_39n3QDc8EemUr5o8kbIRyQ" name="base_InformationFlow" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//InformationFlow"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36PzKzc8EemUr5o8kbIRyQ" name="Triggering" eSuperTypes="_36PMEzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36PzLDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NXBTc8EemUr5o8kbIRyQ"/>
        <eOperations xmi:id="_3915sDc8EemUr5o8kbIRyQ" name="CheckEndTypes">
          <eAnnotations xmi:id="_392gwTc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_392gwjc8EemUr5o8kbIRyQ" key="body" value="let source = self.base_InformationFlow.endType->selectByKind(UML::Class), target = self.base_InformationFlow.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_3915sjc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_3915szc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_3915tDc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_3915tzc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_3915uDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_3915uTc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_3915ujc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_3915uzc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_392gwDc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_392gxTc8EemUr5o8kbIRyQ" name="CheckNavigability">
          <eAnnotations xmi:id="_393u4Dc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_393u4Tc8EemUr5o8kbIRyQ" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_393H0Dc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_393H0Tc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_393H0jc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_393H1Tc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_393H1jc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_393H1zc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_393H2Dc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_393H2Tc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_393H2jc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_39xBMDc8EemUr5o8kbIRyQ" name="base_InformationFlow" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//InformationFlow"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_36QaMDc8EemUr5o8kbIRyQ" name="Specialization" eSuperTypes="_36PMEzc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_36QaMTc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_36NXBjc8EemUr5o8kbIRyQ"/>
        <eOperations xmi:id="_3-CG8Dc8EemUr5o8kbIRyQ" name="CheckEndTypes">
          <eAnnotations xmi:id="_3-CuATc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_3-CuAjc8EemUr5o8kbIRyQ" key="body" value="let source = self.base_Generalization.endType->selectByKind(UML::Class), target = self.base_Generalization.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_3-CG8jc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_3-CG8zc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_3-CG9Dc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_3-CG9zc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_3-CG-Dc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_3-CG-Tc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_3-CG-jc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_3-CG-zc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_3-CuADc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_3-DVEDc8EemUr5o8kbIRyQ" name="CheckNavigability">
          <eAnnotations xmi:id="_3-D8Ijc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_3-D8Izc8EemUr5o8kbIRyQ" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_3-DVEjc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_3-DVEzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_3-DVFDc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_3-DVFzc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_3-DVGDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_3-DVGTc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_3-DVGjc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_3-D8IDc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_3-D8ITc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_399OcDc8EemUr5o8kbIRyQ" name="base_Generalization" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Generalization"/>
        </eStructuralFeatures>
      </eClassifiers>
    </contents>
  </eAnnotations>
  <elementImport xmi:id="_36cncjc8EemUr5o8kbIRyQ" alias="Class">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
  </elementImport>
  <elementImport xmi:id="_36lKUTc8EemUr5o8kbIRyQ" alias="Actor">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Actor"/>
  </elementImport>
  <elementImport xmi:id="_36ylsTc8EemUr5o8kbIRyQ" alias="Collaboration">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Collaboration"/>
  </elementImport>
  <elementImport xmi:id="_3656cTc8EemUr5o8kbIRyQ" alias="OpaqueBehavior">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#OpaqueBehavior"/>
  </elementImport>
  <elementImport xmi:id="_37BPMTc8EemUr5o8kbIRyQ" alias="Node">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Node"/>
  </elementImport>
  <elementImport xmi:id="_37kBwTc8EemUr5o8kbIRyQ" alias="UseCase">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#UseCase"/>
  </elementImport>
  <elementImport xmi:id="_37vn8Tc8EemUr5o8kbIRyQ" alias="Artifact">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
  </elementImport>
  <elementImport xmi:id="_38cykTc8EemUr5o8kbIRyQ" alias="Association">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
  </elementImport>
  <elementImport xmi:id="_38mjkTc8EemUr5o8kbIRyQ" alias="Usage">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
  </elementImport>
  <elementImport xmi:id="_384QYTc8EemUr5o8kbIRyQ" alias="Realization">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Realization"/>
  </elementImport>
  <elementImport xmi:id="_39DPgTc8EemUr5o8kbIRyQ" alias="Dependency">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Dependency"/>
  </elementImport>
  <elementImport xmi:id="_39iXsTc8EemUr5o8kbIRyQ" alias="InformationFlow">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#InformationFlow"/>
  </elementImport>
  <elementImport xmi:id="_394V8Tc8EemUr5o8kbIRyQ" alias="Generalization">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Generalization"/>
  </elementImport>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW6Tc8EemUr5o8kbIRyQ" name="NodeElement">
    <ownedAttribute xmi:id="_36cncTc8EemUr5o8kbIRyQ" name="base_Class" association="_36iuEDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW6jc8EemUr5o8kbIRyQ" name="BusinessActor">
    <generalization xmi:id="_36QaMjc8EemUr5o8kbIRyQ" general="_36NW6Tc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_36lKUDc8EemUr5o8kbIRyQ" name="base_Actor" association="_36qp4Dc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Actor"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW6zc8EemUr5o8kbIRyQ" name="BusinessRole">
    <generalization xmi:id="_36RBQDc8EemUr5o8kbIRyQ" general="_36NW6Tc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_36ttMDc8EemUr5o8kbIRyQ" name="base_Class" association="_36viYDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW7Dc8EemUr5o8kbIRyQ" name="BusinessCollaboration">
    <generalization xmi:id="_36RBQjc8EemUr5o8kbIRyQ" general="_36NW6Tc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_36ylsDc8EemUr5o8kbIRyQ" name="base_Collaboration" association="_363eMDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Collaboration"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW7Tc8EemUr5o8kbIRyQ" name="BusinessInterface">
    <generalization xmi:id="_36RoUDc8EemUr5o8kbIRyQ" general="_36NW6Tc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_3656cDc8EemUr5o8kbIRyQ" name="base_OpaqueBehavior" association="_36-y8Dc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#OpaqueBehavior"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW7jc8EemUr5o8kbIRyQ" name="Location">
    <generalization xmi:id="_36RoUjc8EemUr5o8kbIRyQ" general="_36NW6Tc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_37BPMDc8EemUr5o8kbIRyQ" name="base_Node" association="_37GuwDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Node"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW7zc8EemUr5o8kbIRyQ" name="BusinessProcess">
    <generalization xmi:id="_36RoVDc8EemUr5o8kbIRyQ" general="_36NW6Tc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_37Ij8Dc8EemUr5o8kbIRyQ" name="base_OpaqueBehavior" association="_37LnQDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#OpaqueBehavior"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW8Dc8EemUr5o8kbIRyQ" name="BusinessFunction">
    <generalization xmi:id="_36SPYDc8EemUr5o8kbIRyQ" general="_36NW6Tc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_37OqkDc8EemUr5o8kbIRyQ" name="base_Collaboration" association="_37SU8Dc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Collaboration"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW8Tc8EemUr5o8kbIRyQ" name="BusinessInteraction">
    <generalization xmi:id="_36SPYjc8EemUr5o8kbIRyQ" general="_36NW6Tc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_37UxMDc8EemUr5o8kbIRyQ" name="base_OpaqueBehavior" association="_37ZCoDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#OpaqueBehavior"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW8jc8EemUr5o8kbIRyQ" name="BusinessEvent">
    <generalization xmi:id="_36S2cDc8EemUr5o8kbIRyQ" general="_36NW6Tc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_37d7IDc8EemUr5o8kbIRyQ" name="base_OpaqueBehavior" association="_37hlgDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#OpaqueBehavior"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW8zc8EemUr5o8kbIRyQ" name="BusinessService">
    <generalization xmi:id="_36S2cjc8EemUr5o8kbIRyQ" general="_36NW6Tc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_37kBwDc8EemUr5o8kbIRyQ" name="base_UseCase" association="_37oTMDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#UseCase"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW9Dc8EemUr5o8kbIRyQ" name="BusinessObject">
    <generalization xmi:id="_36TdgDc8EemUr5o8kbIRyQ" general="_36NW6Tc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_37qvcDc8EemUr5o8kbIRyQ" name="base_Class" association="_37tLsDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW9Tc8EemUr5o8kbIRyQ" name="Representation">
    <generalization xmi:id="_36Tdgjc8EemUr5o8kbIRyQ" general="_36NW6Tc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_37vn8Dc8EemUr5o8kbIRyQ" name="base_Artifact" association="_371HgDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW9jc8EemUr5o8kbIRyQ" name="Meaning">
    <generalization xmi:id="_36UEkDc8EemUr5o8kbIRyQ" general="_36NW6Tc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_373jwDc8EemUr5o8kbIRyQ" name="base_Class" association="_376AADc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW9zc8EemUr5o8kbIRyQ" name="Value">
    <generalization xmi:id="_36UEkjc8EemUr5o8kbIRyQ" general="_36NW6Tc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_378cQDc8EemUr5o8kbIRyQ" name="base_Class" association="_37_fkDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW-Dc8EemUr5o8kbIRyQ" name="Product">
    <generalization xmi:id="_36UroDc8EemUr5o8kbIRyQ" general="_36NW6Tc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_38B70Dc8EemUr5o8kbIRyQ" name="base_Artifact" association="_38E_IDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW-Tc8EemUr5o8kbIRyQ" name="Contract">
    <generalization xmi:id="_36VSsDc8EemUr5o8kbIRyQ" general="_36NW6Tc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_38G0UDc8EemUr5o8kbIRyQ" name="base_Artifact" association="_38KesDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW-jc8EemUr5o8kbIRyQ" name="Grouping">
    <generalization xmi:id="_36VSsjc8EemUr5o8kbIRyQ" general="_36NW6Tc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_38M68Dc8EemUr5o8kbIRyQ" name="base_Class" association="_38OwIDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW-zc8EemUr5o8kbIRyQ" name="Junction">
    <generalization xmi:id="_36V5wDc8EemUr5o8kbIRyQ" general="_36NW_Dc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_38QlUDc8EemUr5o8kbIRyQ" name="base_OpaqueBehavior" association="_38UPsDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#OpaqueBehavior"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW_Dc8EemUr5o8kbIRyQ" name="Relationship">
    <ownedAttribute xmi:id="_36V5wjc8EemUr5o8kbIRyQ" name="source" type="_36NW6Tc8EemUr5o8kbIRyQ" association="_36V5xTc8EemUr5o8kbIRyQ">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_36V5wzc8EemUr5o8kbIRyQ" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_36V5xDc8EemUr5o8kbIRyQ" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_36Wg1zc8EemUr5o8kbIRyQ" name="target" type="_36NW6Tc8EemUr5o8kbIRyQ" association="_36Wg2jc8EemUr5o8kbIRyQ">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_36Wg2Dc8EemUr5o8kbIRyQ" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_36Wg2Tc8EemUr5o8kbIRyQ" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_38XTADc8EemUr5o8kbIRyQ" name="base_Class" association="_38aWUDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW_Tc8EemUr5o8kbIRyQ" name="Association">
    <ownedRule xmi:id="_38kHUjc8EemUr5o8kbIRyQ" name="CheckEndTypes" constrainedElement="_36NW_Tc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_38kHUzc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_38lVczc8EemUr5o8kbIRyQ" name="CheckNavigability" constrainedElement="_36NW_Tc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_38lVdDc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_36XH4Dc8EemUr5o8kbIRyQ" general="_36NW_Dc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_38cykDc8EemUr5o8kbIRyQ" name="base_Association" association="_38hEATc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW_jc8EemUr5o8kbIRyQ" name="Access">
    <ownedRule xmi:id="_38t4Ujc8EemUr5o8kbIRyQ" name="CheckEndTypes" constrainedElement="_36NW_jc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_38t4Uzc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let source = self.base_Usage.endType->selectByKind(UML::Class), target = self.base_Usage.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_38vGcjc8EemUr5o8kbIRyQ" name="CheckNavigability" constrainedElement="_36NW_jc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_38vGczc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_36Xu8Dc8EemUr5o8kbIRyQ" general="_36NW_Dc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_38mjkDc8EemUr5o8kbIRyQ" name="base_Usage" association="_38q1ATc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NW_zc8EemUr5o8kbIRyQ" name="UsedBy">
    <ownedRule xmi:id="_3810Ijc8EemUr5o8kbIRyQ" name="CheckEndTypes" constrainedElement="_36NW_zc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_3810Izc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let source = self.base_Usage.endType->selectByKind(UML::Class), target = self.base_Usage.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_383CQDc8EemUr5o8kbIRyQ" name="CheckNavigability" constrainedElement="_36NW_zc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_383CQTc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_36YWADc8EemUr5o8kbIRyQ" general="_36NW_Dc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_38wUkDc8EemUr5o8kbIRyQ" name="base_Usage" association="_38yJwTc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NXADc8EemUr5o8kbIRyQ" name="Realization">
    <ownedRule xmi:id="_39AzQjc8EemUr5o8kbIRyQ" name="CheckEndTypes" constrainedElement="_36NXADc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_39AzQzc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let source = self.base_Realization.endType->selectByKind(UML::Class), target = self.base_Realization.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_39CBYzc8EemUr5o8kbIRyQ" name="CheckNavigability" constrainedElement="_36NXADc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_39CBZDc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_36YWAjc8EemUr5o8kbIRyQ" general="_36NW_Dc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_384QYDc8EemUr5o8kbIRyQ" name="base_Realization" association="_389I4Tc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Realization"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NXATc8EemUr5o8kbIRyQ" name="Assignment">
    <ownedRule xmi:id="_39MZcjc8EemUr5o8kbIRyQ" name="CheckEndTypes" constrainedElement="_36NXATc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_39MZczc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let source = self.base_Dependency.endType->selectByKind(UML::Class), target = self.base_Dependency.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_39OOojc8EemUr5o8kbIRyQ" name="CheckNavigability" constrainedElement="_36NXATc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_39OOozc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_36Y9ETc8EemUr5o8kbIRyQ" general="_36NW_Dc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_39DPgDc8EemUr5o8kbIRyQ" name="base_Dependency" association="_39IvEDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Dependency"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NXAjc8EemUr5o8kbIRyQ" name="Aggregation">
    <ownedRule xmi:id="_39Wxgjc8EemUr5o8kbIRyQ" name="CheckEndTypes" constrainedElement="_36NXAjc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_39Wxgzc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_39X_ojc8EemUr5o8kbIRyQ" name="CheckNavigability" constrainedElement="_36NXAjc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_39X_ozc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_36ZkITc8EemUr5o8kbIRyQ" general="_36NW_Dc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_39QD0Dc8EemUr5o8kbIRyQ" name="base_Association" association="_39THITc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NXAzc8EemUr5o8kbIRyQ" name="Composition">
    <ownedRule xmi:id="_39fUYjc8EemUr5o8kbIRyQ" name="CheckEndTypes" constrainedElement="_36NXAzc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_39fUYzc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_39gigzc8EemUr5o8kbIRyQ" name="CheckNavigability" constrainedElement="_36NXAzc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_39gihDc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_36ayQDc8EemUr5o8kbIRyQ" general="_36NW_Dc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_39ZNwDc8EemUr5o8kbIRyQ" name="base_Association" association="_39bqATc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NXBDc8EemUr5o8kbIRyQ" name="Flow">
    <ownedRule xmi:id="_39rhojc8EemUr5o8kbIRyQ" name="CheckEndTypes" constrainedElement="_36NXBDc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_39rhozc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let source = self.base_InformationFlow.endType->selectByKind(UML::Class), target = self.base_InformationFlow.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_39sItDc8EemUr5o8kbIRyQ" name="CheckNavigability" constrainedElement="_36NXBDc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_39sItTc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_36bZUDc8EemUr5o8kbIRyQ" general="_36NW_Dc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_39iXsDc8EemUr5o8kbIRyQ" name="base_InformationFlow" association="_39n3QTc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#InformationFlow"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NXBTc8EemUr5o8kbIRyQ" name="Triggering">
    <ownedRule xmi:id="_391Sojc8EemUr5o8kbIRyQ" name="CheckEndTypes" constrainedElement="_36NXBTc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_391Sozc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let source = self.base_InformationFlow.endType->selectByKind(UML::Class), target = self.base_InformationFlow.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_392gwzc8EemUr5o8kbIRyQ" name="CheckNavigability" constrainedElement="_36NXBTc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_392gxDc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_36cAYDc8EemUr5o8kbIRyQ" general="_36NW_Dc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_39t94Dc8EemUr5o8kbIRyQ" name="base_InformationFlow" association="_39xBMTc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#InformationFlow"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_36NXBjc8EemUr5o8kbIRyQ" name="Specialization">
    <ownedRule xmi:id="_3-Bf4jc8EemUr5o8kbIRyQ" name="CheckEndTypes" constrainedElement="_36NXBjc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_3-Bf4zc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let source = self.base_Generalization.endType->selectByKind(UML::Class), target = self.base_Generalization.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_3-CuAzc8EemUr5o8kbIRyQ" name="CheckNavigability" constrainedElement="_36NXBjc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_3-CuBDc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_36cAYjc8EemUr5o8kbIRyQ" general="_36NW_Dc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_394V8Dc8EemUr5o8kbIRyQ" name="base_Generalization" association="_399OcTc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Generalization"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_36V5xTc8EemUr5o8kbIRyQ" memberEnd="_36Wg0Dc8EemUr5o8kbIRyQ _36V5wjc8EemUr5o8kbIRyQ">
    <eAnnotations xmi:id="_36Wg0zc8EemUr5o8kbIRyQ" source="org.eclipse.papyrus">
      <details xmi:id="_36Wg1Dc8EemUr5o8kbIRyQ" key="nature" value="UML_Nature"/>
    </eAnnotations>
    <ownedEnd xmi:id="_36Wg0Dc8EemUr5o8kbIRyQ" name="RelationshipEnd" type="_36NW_Dc8EemUr5o8kbIRyQ" association="_36V5xTc8EemUr5o8kbIRyQ">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_36Wg0Tc8EemUr5o8kbIRyQ" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_36Wg0jc8EemUr5o8kbIRyQ" value="1"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_36Wg2jc8EemUr5o8kbIRyQ" memberEnd="_36Wg2zc8EemUr5o8kbIRyQ _36Wg1zc8EemUr5o8kbIRyQ">
    <eAnnotations xmi:id="_36Wg3jc8EemUr5o8kbIRyQ" source="org.eclipse.papyrus">
      <details xmi:id="_36Wg3zc8EemUr5o8kbIRyQ" key="nature" value="UML_Nature"/>
    </eAnnotations>
    <ownedEnd xmi:id="_36Wg2zc8EemUr5o8kbIRyQ" name="RelationshipEnd" type="_36NW_Dc8EemUr5o8kbIRyQ" association="_36Wg2jc8EemUr5o8kbIRyQ">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_36Wg3Dc8EemUr5o8kbIRyQ" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_36Wg3Tc8EemUr5o8kbIRyQ" value="1"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_36iuEDc8EemUr5o8kbIRyQ" name="E_NodeElement_Class1" memberEnd="_36iuETc8EemUr5o8kbIRyQ _36cncTc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_36iuETc8EemUr5o8kbIRyQ" name="extension_NodeElement" type="_36NW6Tc8EemUr5o8kbIRyQ" aggregation="composite" association="_36iuEDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_36qp4Dc8EemUr5o8kbIRyQ" name="E_BusinessActor_Actor1" memberEnd="_36qp4Tc8EemUr5o8kbIRyQ _36lKUDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_36qp4Tc8EemUr5o8kbIRyQ" name="extension_BusinessActor" type="_36NW6jc8EemUr5o8kbIRyQ" aggregation="composite" association="_36qp4Dc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_36viYDc8EemUr5o8kbIRyQ" name="E_BusinessRole_Class1" memberEnd="_36wJcDc8EemUr5o8kbIRyQ _36ttMDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_36wJcDc8EemUr5o8kbIRyQ" name="extension_BusinessRole" type="_36NW6zc8EemUr5o8kbIRyQ" aggregation="composite" association="_36viYDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_363eMDc8EemUr5o8kbIRyQ" name="E_BusinessCollaboration_Collaboration1" memberEnd="_363eMTc8EemUr5o8kbIRyQ _36ylsDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_363eMTc8EemUr5o8kbIRyQ" name="extension_BusinessCollaboration" type="_36NW7Dc8EemUr5o8kbIRyQ" aggregation="composite" association="_363eMDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_36-y8Dc8EemUr5o8kbIRyQ" name="E_BusinessInterface_OpaqueBehavior1" memberEnd="_36-y8Tc8EemUr5o8kbIRyQ _3656cDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_36-y8Tc8EemUr5o8kbIRyQ" name="extension_BusinessInterface" type="_36NW7Tc8EemUr5o8kbIRyQ" aggregation="composite" association="_36-y8Dc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_37GuwDc8EemUr5o8kbIRyQ" name="E_Location_Node1" memberEnd="_37GuwTc8EemUr5o8kbIRyQ _37BPMDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_37GuwTc8EemUr5o8kbIRyQ" name="extension_Location" type="_36NW7jc8EemUr5o8kbIRyQ" aggregation="composite" association="_37GuwDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_37LnQDc8EemUr5o8kbIRyQ" name="E_BusinessProcess_OpaqueBehavior1" memberEnd="_37LnQTc8EemUr5o8kbIRyQ _37Ij8Dc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_37LnQTc8EemUr5o8kbIRyQ" name="extension_BusinessProcess" type="_36NW7zc8EemUr5o8kbIRyQ" aggregation="composite" association="_37LnQDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_37SU8Dc8EemUr5o8kbIRyQ" name="E_BusinessFunction_Collaboration1" memberEnd="_37SU8Tc8EemUr5o8kbIRyQ _37OqkDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_37SU8Tc8EemUr5o8kbIRyQ" name="extension_BusinessFunction" type="_36NW8Dc8EemUr5o8kbIRyQ" aggregation="composite" association="_37SU8Dc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_37ZCoDc8EemUr5o8kbIRyQ" name="E_BusinessInteraction_OpaqueBehavior1" memberEnd="_37ZCoTc8EemUr5o8kbIRyQ _37UxMDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_37ZCoTc8EemUr5o8kbIRyQ" name="extension_BusinessInteraction" type="_36NW8Tc8EemUr5o8kbIRyQ" aggregation="composite" association="_37ZCoDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_37hlgDc8EemUr5o8kbIRyQ" name="E_BusinessEvent_OpaqueBehavior1" memberEnd="_37hlgTc8EemUr5o8kbIRyQ _37d7IDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_37hlgTc8EemUr5o8kbIRyQ" name="extension_BusinessEvent" type="_36NW8jc8EemUr5o8kbIRyQ" aggregation="composite" association="_37hlgDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_37oTMDc8EemUr5o8kbIRyQ" name="E_BusinessService_UseCase1" memberEnd="_37o6QDc8EemUr5o8kbIRyQ _37kBwDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_37o6QDc8EemUr5o8kbIRyQ" name="extension_BusinessService" type="_36NW8zc8EemUr5o8kbIRyQ" aggregation="composite" association="_37oTMDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_37tLsDc8EemUr5o8kbIRyQ" name="E_BusinessObject_Class1" memberEnd="_37tLsTc8EemUr5o8kbIRyQ _37qvcDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_37tLsTc8EemUr5o8kbIRyQ" name="extension_BusinessObject" type="_36NW9Dc8EemUr5o8kbIRyQ" aggregation="composite" association="_37tLsDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_371HgDc8EemUr5o8kbIRyQ" name="E_Representation_Artifact1" memberEnd="_371HgTc8EemUr5o8kbIRyQ _37vn8Dc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_371HgTc8EemUr5o8kbIRyQ" name="extension_Representation" type="_36NW9Tc8EemUr5o8kbIRyQ" aggregation="composite" association="_371HgDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_376AADc8EemUr5o8kbIRyQ" name="E_Meaning_Class1" memberEnd="_376AATc8EemUr5o8kbIRyQ _373jwDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_376AATc8EemUr5o8kbIRyQ" name="extension_Meaning" type="_36NW9jc8EemUr5o8kbIRyQ" aggregation="composite" association="_376AADc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_37_fkDc8EemUr5o8kbIRyQ" name="E_Value_Class1" memberEnd="_37_fkTc8EemUr5o8kbIRyQ _378cQDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_37_fkTc8EemUr5o8kbIRyQ" name="extension_Value" type="_36NW9zc8EemUr5o8kbIRyQ" aggregation="composite" association="_37_fkDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_38E_IDc8EemUr5o8kbIRyQ" name="E_Product_Artifact1" memberEnd="_38E_ITc8EemUr5o8kbIRyQ _38B70Dc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_38E_ITc8EemUr5o8kbIRyQ" name="extension_Product" type="_36NW-Dc8EemUr5o8kbIRyQ" aggregation="composite" association="_38E_IDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_38KesDc8EemUr5o8kbIRyQ" name="E_Contract_Artifact1" memberEnd="_38KesTc8EemUr5o8kbIRyQ _38G0UDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_38KesTc8EemUr5o8kbIRyQ" name="extension_Contract" type="_36NW-Tc8EemUr5o8kbIRyQ" aggregation="composite" association="_38KesDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_38OwIDc8EemUr5o8kbIRyQ" name="E_Grouping_Class1" memberEnd="_38OwITc8EemUr5o8kbIRyQ _38M68Dc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_38OwITc8EemUr5o8kbIRyQ" name="extension_Grouping" type="_36NW-jc8EemUr5o8kbIRyQ" aggregation="composite" association="_38OwIDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_38UPsDc8EemUr5o8kbIRyQ" name="E_Junction_OpaqueBehavior1" memberEnd="_38UPsTc8EemUr5o8kbIRyQ _38QlUDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_38UPsTc8EemUr5o8kbIRyQ" name="extension_Junction" type="_36NW-zc8EemUr5o8kbIRyQ" aggregation="composite" association="_38UPsDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_38aWUDc8EemUr5o8kbIRyQ" name="E_Relationship_Class1" memberEnd="_38aWUTc8EemUr5o8kbIRyQ _38XTADc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_38aWUTc8EemUr5o8kbIRyQ" name="extension_Relationship" type="_36NW_Dc8EemUr5o8kbIRyQ" aggregation="composite" association="_38aWUDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_38hEATc8EemUr5o8kbIRyQ" name="E_Association_Association1" memberEnd="_38hEAjc8EemUr5o8kbIRyQ _38cykDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_38hEAjc8EemUr5o8kbIRyQ" name="extension_Association" type="_36NW_Tc8EemUr5o8kbIRyQ" aggregation="composite" association="_38hEATc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_38q1ATc8EemUr5o8kbIRyQ" name="E_Access_Usage1" memberEnd="_38q1Ajc8EemUr5o8kbIRyQ _38mjkDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_38q1Ajc8EemUr5o8kbIRyQ" name="extension_Access" type="_36NW_jc8EemUr5o8kbIRyQ" aggregation="composite" association="_38q1ATc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_38yJwTc8EemUr5o8kbIRyQ" name="E_UsedBy_Usage1" memberEnd="_38yJwjc8EemUr5o8kbIRyQ _38wUkDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_38yJwjc8EemUr5o8kbIRyQ" name="extension_UsedBy" type="_36NW_zc8EemUr5o8kbIRyQ" aggregation="composite" association="_38yJwTc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_389I4Tc8EemUr5o8kbIRyQ" name="E_Realization_Realization1" memberEnd="_389I4jc8EemUr5o8kbIRyQ _384QYDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_389I4jc8EemUr5o8kbIRyQ" name="extension_Realization" type="_36NXADc8EemUr5o8kbIRyQ" aggregation="composite" association="_389I4Tc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_39IvEDc8EemUr5o8kbIRyQ" name="E_Assignment_Dependency1" memberEnd="_39IvETc8EemUr5o8kbIRyQ _39DPgDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_39IvETc8EemUr5o8kbIRyQ" name="extension_Assignment" type="_36NXATc8EemUr5o8kbIRyQ" aggregation="composite" association="_39IvEDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_39THITc8EemUr5o8kbIRyQ" name="E_Aggregation_Association1" memberEnd="_39THIjc8EemUr5o8kbIRyQ _39QD0Dc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_39THIjc8EemUr5o8kbIRyQ" name="extension_Aggregation" type="_36NXAjc8EemUr5o8kbIRyQ" aggregation="composite" association="_39THITc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_39bqATc8EemUr5o8kbIRyQ" name="E_Composition_Association1" memberEnd="_39bqAjc8EemUr5o8kbIRyQ _39ZNwDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_39bqAjc8EemUr5o8kbIRyQ" name="extension_Composition" type="_36NXAzc8EemUr5o8kbIRyQ" aggregation="composite" association="_39bqATc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_39n3QTc8EemUr5o8kbIRyQ" name="E_Flow_InformationFlow1" memberEnd="_39n3Qjc8EemUr5o8kbIRyQ _39iXsDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_39n3Qjc8EemUr5o8kbIRyQ" name="extension_Flow" type="_36NXBDc8EemUr5o8kbIRyQ" aggregation="composite" association="_39n3QTc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_39xBMTc8EemUr5o8kbIRyQ" name="E_Triggering_InformationFlow1" memberEnd="_39xBMjc8EemUr5o8kbIRyQ _39t94Dc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_39xBMjc8EemUr5o8kbIRyQ" name="extension_Triggering" type="_36NXBTc8EemUr5o8kbIRyQ" aggregation="composite" association="_39xBMTc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_399OcTc8EemUr5o8kbIRyQ" name="E_Specialization_Generalization1" memberEnd="_399Ocjc8EemUr5o8kbIRyQ _394V8Dc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_399Ocjc8EemUr5o8kbIRyQ" name="extension_Specialization" type="_36NXBjc8EemUr5o8kbIRyQ" aggregation="composite" association="_399OcTc8EemUr5o8kbIRyQ"/>
  </packagedElement>
</uml:Profile>
