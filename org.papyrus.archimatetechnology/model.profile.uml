<?xml version="1.0" encoding="UTF-8"?>
<uml:Profile xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_6Q13EDc8EemUr5o8kbIRyQ" name="ArchimateTechnology" URI="archimate-technology" metaclassReference="_6RCrYjc8EemUr5o8kbIRyQ _6RNDcTc8EemUr5o8kbIRyQ _6RXbgDc8EemUr5o8kbIRyQ _6RhMgTc8EemUr5o8kbIRyQ _6RxrMTc8EemUr5o8kbIRyQ _6R8DQTc8EemUr5o8kbIRyQ _6SKswTc8EemUr5o8kbIRyQ _6STPoTc8EemUr5o8kbIRyQ _6SeOwDc8EemUr5o8kbIRyQ _6SqcADc8EemUr5o8kbIRyQ _6Szl8Dc8EemUr5o8kbIRyQ _6TC2gzc8EemUr5o8kbIRyQ _6TMAczc8EemUr5o8kbIRyQ _6TjM0Tc8EemUr5o8kbIRyQ _6TydYzc8EemUr5o8kbIRyQ">
  <eAnnotations xmi:id="_6Q13Ejc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
    <contents xmi:type="ecore:EPackage" xmi:id="_6Q13ETc8EemUr5o8kbIRyQ" name="ArchimateTechnology" nsURI="http:///schemas/ArchimateTechnology/something/1" nsPrefix="ArchimateTechnology">
      <eAnnotations xmi:id="_6Q13Ezc8EemUr5o8kbIRyQ" source="PapyrusVersion">
        <details xmi:id="_6Q13FDc8EemUr5o8kbIRyQ" key="Version" value="0.0.1"/>
        <details xmi:id="_6Q13FTc8EemUr5o8kbIRyQ" key="Comment" value=""/>
        <details xmi:id="_6Q13Fjc8EemUr5o8kbIRyQ" key="Copyright" value=""/>
        <details xmi:id="_6Q2eIDc8EemUr5o8kbIRyQ" key="Date" value="2017-02-01"/>
        <details xmi:id="_6Q2eITc8EemUr5o8kbIRyQ" key="Author" value=""/>
      </eAnnotations>
      <eAnnotations xmi:id="_6SxJsDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_6SxJsTc8EemUr5o8kbIRyQ" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_6S5skDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_6S5skTc8EemUr5o8kbIRyQ" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_6TBBUDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_6TBBUTc8EemUr5o8kbIRyQ" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_6TKLQDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_6TKLQTc8EemUr5o8kbIRyQ" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_6TSHEDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_6TSuIDc8EemUr5o8kbIRyQ" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_6TZb0Dc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_6TZb0Tc8EemUr5o8kbIRyQ" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_6TgwkDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_6TgwkTc8EemUr5o8kbIRyQ" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_6Tp6gDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_6Tp6gTc8EemUr5o8kbIRyQ" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_6TwoMDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_6TwoMTc8EemUr5o8kbIRyQ" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_6T5LEDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_6T5LETc8EemUr5o8kbIRyQ" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q2eOTc8EemUr5o8kbIRyQ" name="NodeElement">
        <eAnnotations xmi:id="_6Q2eOjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eIjc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6RIK8Dc8EemUr5o8kbIRyQ" name="base_Class" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Class"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q2eOzc8EemUr5o8kbIRyQ" name="Node" eSuperTypes="_6Q2eOTc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_6Q2ePDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eIzc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6RSjADc8EemUr5o8kbIRyQ" name="base_Node" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Node"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q2ePTc8EemUr5o8kbIRyQ" name="Device" eSuperTypes="_6Q2eOTc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_6Q3FMDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eJDc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6Rc7EDc8EemUr5o8kbIRyQ" name="base_Device" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Device"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q3FMTc8EemUr5o8kbIRyQ" name="Network" eSuperTypes="_6Q2eOTc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_6Q3FMjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eJTc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6Rld8Dc8EemUr5o8kbIRyQ" name="base_CommunicationPath" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//CommunicationPath"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q3FMzc8EemUr5o8kbIRyQ" name="CommunicationPath" eSuperTypes="_6Q2eOTc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_6Q3FNDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eJjc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6RsysDc8EemUr5o8kbIRyQ" name="base_CommunicationPath" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//CommunicationPath"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q3FNTc8EemUr5o8kbIRyQ" name="InfrastructureInterface" eSuperTypes="_6Q2eOTc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_6Q3FNjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eJzc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6R3KwDc8EemUr5o8kbIRyQ" name="base_Interface" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Interface"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q3FNzc8EemUr5o8kbIRyQ" name="SystemSoftware" eSuperTypes="_6Q2eOTc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_6Q3FODc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eKDc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6SCw8Dc8EemUr5o8kbIRyQ" name="base_ExecutionEnvironment" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//ExecutionEnvironment"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q3FOTc8EemUr5o8kbIRyQ" name="InfrastructureFunction" eSuperTypes="_6Q2eOTc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_6Q3FOjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eKTc8EemUr5o8kbIRyQ"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q3FOzc8EemUr5o8kbIRyQ" name="InfrastructureService" eSuperTypes="_6Q2eOTc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_6Q3FPDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eKjc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6SOXIDc8EemUr5o8kbIRyQ" name="base_Collaboration" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Collaboration"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q3sQDc8EemUr5o8kbIRyQ" name="Artifact" eSuperTypes="_6Q2eOTc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_6Q3sQTc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eKzc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6SW6ADc8EemUr5o8kbIRyQ" name="base_Artifact" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Artifact"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q3sQjc8EemUr5o8kbIRyQ" name="Grouping" eSuperTypes="_6Q2eOTc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_6Q3sQzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eLDc8EemUr5o8kbIRyQ"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q3sRDc8EemUr5o8kbIRyQ" name="Junction" eSuperTypes="_6Q3sRjc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_6Q3sRTc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eLTc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6Sh5IDc8EemUr5o8kbIRyQ" name="base_OpaqueBehavior" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//OpaqueBehavior"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q3sRjc8EemUr5o8kbIRyQ" name="Relationship">
        <eAnnotations xmi:id="_6Q3sRzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eLjc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6Q8kyTc8EemUr5o8kbIRyQ" name="source" lowerBound="1" eType="_6Q2eOTc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6Q9L2jc8EemUr5o8kbIRyQ" name="target" lowerBound="1" eType="_6Q2eOTc8EemUr5o8kbIRyQ"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6SmxoDc8EemUr5o8kbIRyQ" name="base_Class" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Class"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q3sSDc8EemUr5o8kbIRyQ" name="Association" eSuperTypes="_6Q3sRjc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_6Q3sSTc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eLzc8EemUr5o8kbIRyQ"/>
        <eOperations xmi:id="_6SxJtDc8EemUr5o8kbIRyQ" name="CheckEndTypes">
          <eAnnotations xmi:id="_6SyX0Dc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_6SyX0Tc8EemUr5o8kbIRyQ" key="body" value="let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_6SxwwDc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_6SxwwTc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6Sxwwjc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_6SxwxTc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_6Sxwxjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6Sxwxzc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_6SxwyDc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_6SxwyTc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_6Sxwyjc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_6SyX1Dc8EemUr5o8kbIRyQ" name="CheckNavigability">
          <eAnnotations xmi:id="_6Sy-4Tc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_6Sy-4jc8EemUr5o8kbIRyQ" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_6SyX1jc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_6SyX1zc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6SyX2Dc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_6SyX2zc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_6SyX3Dc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6SyX3Tc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_6SyX3jc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_6SyX3zc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_6Sy-4Dc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6SuGYDc8EemUr5o8kbIRyQ" name="base_Association" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Association"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q3sSjc8EemUr5o8kbIRyQ" name="Access" eSuperTypes="_6Q3sRjc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_6Q3sSzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eMDc8EemUr5o8kbIRyQ"/>
        <eOperations xmi:id="_6S5slDc8EemUr5o8kbIRyQ" name="CheckEndTypes">
          <eAnnotations xmi:id="_6S66sTc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_6S66sjc8EemUr5o8kbIRyQ" key="body" value="let source = self.base_Usage.endType->selectByKind(UML::Class), target = self.base_Usage.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_6S6ToTc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_6S6Tojc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6S6Tozc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_6S6Tpjc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_6S6Tpzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6S6TqDc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_6S6TqTc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_6S6Tqjc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_6S66sDc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_6S66tTc8EemUr5o8kbIRyQ" name="CheckNavigability">
          <eAnnotations xmi:id="_6S7hwjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_6S7hwzc8EemUr5o8kbIRyQ" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_6S66tzc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_6S66uDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6S66uTc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_6S66vDc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_6S66vTc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6S66vjc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_6S66vzc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_6S7hwDc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_6S7hwTc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6S2CMDc8EemUr5o8kbIRyQ" name="base_Usage" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Usage"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q3sTDc8EemUr5o8kbIRyQ" name="UsedBy" eSuperTypes="_6Q3sRjc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_6Q3sTTc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eMTc8EemUr5o8kbIRyQ"/>
        <eOperations xmi:id="_6TBBVDc8EemUr5o8kbIRyQ" name="CheckEndTypes">
          <eAnnotations xmi:id="_6TBoYjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_6TBoYzc8EemUr5o8kbIRyQ" key="body" value="let source = self.base_Usage.endType->selectByKind(UML::Class), target = self.base_Usage.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_6TBBVjc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_6TBBVzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6TBBWDc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_6TBBWzc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_6TBBXDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6TBBXTc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_6TBBXjc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_6TBoYDc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_6TBoYTc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_6TBoZjc8EemUr5o8kbIRyQ" name="CheckNavigability">
          <eAnnotations xmi:id="_6TC2gDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_6TC2gTc8EemUr5o8kbIRyQ" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_6TCPcTc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_6TCPcjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6TCPczc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_6TCPdjc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_6TCPdzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6TCPeDc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_6TCPeTc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_6TCPejc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_6TCPezc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6S9-ADc8EemUr5o8kbIRyQ" name="base_Usage" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Usage"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q3sTjc8EemUr5o8kbIRyQ" name="Realization" eSuperTypes="_6Q3sRjc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_6Q3sTzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eMjc8EemUr5o8kbIRyQ"/>
        <eOperations xmi:id="_6TKLRDc8EemUr5o8kbIRyQ" name="CheckEndTypes">
          <eAnnotations xmi:id="_6TKyUjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_6TKyUzc8EemUr5o8kbIRyQ" key="body" value="let source = self.base_Realization.endType->selectByKind(UML::Class), target = self.base_Realization.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_6TKLRjc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_6TKLRzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6TKLSDc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_6TKLSzc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_6TKLTDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6TKLTTc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_6TKLTjc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_6TKyUDc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_6TKyUTc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_6TLZYDc8EemUr5o8kbIRyQ" name="CheckNavigability">
          <eAnnotations xmi:id="_6TMAcDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_6TMAcTc8EemUr5o8kbIRyQ" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_6TLZYjc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_6TLZYzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6TLZZDc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_6TLZZzc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_6TLZaDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6TLZaTc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_6TLZajc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_6TLZazc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_6TLZbDc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6THH8Dc8EemUr5o8kbIRyQ" name="base_Realization" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Realization"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q3sUDc8EemUr5o8kbIRyQ" name="Assignment" eSuperTypes="_6Q3sRjc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_6Q3sUTc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eMzc8EemUr5o8kbIRyQ"/>
        <eOperations xmi:id="_6TSuIzc8EemUr5o8kbIRyQ" name="CheckEndTypes">
          <eAnnotations xmi:id="_6TTVMjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_6TTVMzc8EemUr5o8kbIRyQ" key="body" value="let source = self.base_Dependency.endType->selectByKind(UML::Class), target = self.base_Dependency.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_6TSuJTc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_6TSuJjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6TSuJzc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_6TSuKjc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_6TSuKzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6TSuLDc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_6TSuLTc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_6TTVMDc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_6TTVMTc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_6TTVNjc8EemUr5o8kbIRyQ" name="CheckNavigability">
          <eAnnotations xmi:id="_6TUjUDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_6TUjUTc8EemUr5o8kbIRyQ" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_6TT8QTc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_6TT8Qjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6TT8Qzc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_6TT8Rjc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_6TT8Rzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6TT8SDc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_6TT8STc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_6TT8Sjc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_6TT8Szc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6TPq0Dc8EemUr5o8kbIRyQ" name="base_Dependency" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Dependency"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q4TUDc8EemUr5o8kbIRyQ" name="Aggregation" eSuperTypes="_6Q3sRjc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_6Q4TUTc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eNDc8EemUr5o8kbIRyQ"/>
        <eOperations xmi:id="_6TZb1Dc8EemUr5o8kbIRyQ" name="CheckEndTypes">
          <eAnnotations xmi:id="_6TaC5zc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_6TaC6Dc8EemUr5o8kbIRyQ" key="body" value="let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_6TZb1jc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_6TZb1zc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6TZb2Dc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_6TaC4Tc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_6TaC4jc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6TaC4zc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_6TaC5Dc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_6TaC5Tc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_6TaC5jc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_6Tap8Dc8EemUr5o8kbIRyQ" name="CheckNavigability">
          <eAnnotations xmi:id="_6TbRATc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_6TbRAjc8EemUr5o8kbIRyQ" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_6Tap8jc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_6Tap8zc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6Tap9Dc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_6Tap9zc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_6Tap-Dc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6Tap-Tc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_6Tap-jc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_6Tap-zc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_6TbRADc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6TWYgDc8EemUr5o8kbIRyQ" name="base_Association" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Association"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q4TUjc8EemUr5o8kbIRyQ" name="Composition" eSuperTypes="_6Q3sRjc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_6Q4TUzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eNTc8EemUr5o8kbIRyQ"/>
        <eOperations xmi:id="_6TgwlDc8EemUr5o8kbIRyQ" name="CheckEndTypes">
          <eAnnotations xmi:id="_6Th-sDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_6Th-sTc8EemUr5o8kbIRyQ" key="body" value="let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_6ThXoTc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_6ThXojc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6ThXozc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_6ThXpjc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_6ThXpzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6ThXqDc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_6ThXqTc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_6ThXqjc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_6ThXqzc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_6Th-tDc8EemUr5o8kbIRyQ" name="CheckNavigability">
          <eAnnotations xmi:id="_6Tilwjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_6Tilwzc8EemUr5o8kbIRyQ" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_6Th-tjc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_6Th-tzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6Th-uDc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_6Th-uzc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_6Th-vDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6Th-vTc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_6Th-vjc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_6TilwDc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_6TilwTc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6TdtQDc8EemUr5o8kbIRyQ" name="base_Association" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Association"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q4TVDc8EemUr5o8kbIRyQ" name="Flow" eSuperTypes="_6Q3sRjc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_6Q4TVTc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eNjc8EemUr5o8kbIRyQ"/>
        <eOperations xmi:id="_6Tp6hDc8EemUr5o8kbIRyQ" name="CheckEndTypes">
          <eAnnotations xmi:id="_6TrIoDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_6TrIoTc8EemUr5o8kbIRyQ" key="body" value="let source = self.base_InformationFlow.endType->selectByKind(UML::Class), target = self.base_InformationFlow.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_6TqhkTc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_6Tqhkjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6Tqhkzc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_6Tqhljc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_6Tqhlzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6TqhmDc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_6TqhmTc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_6Tqhmjc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_6Tqhmzc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_6TrIpDc8EemUr5o8kbIRyQ" name="CheckNavigability">
          <eAnnotations xmi:id="_6Trvsjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_6Trvszc8EemUr5o8kbIRyQ" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_6TrIpjc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_6TrIpzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6TrIqDc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_6TrIqzc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_6TrIrDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6TrIrTc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_6TrIrjc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_6TrvsDc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_6TrvsTc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6Tm3MDc8EemUr5o8kbIRyQ" name="base_InformationFlow" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//InformationFlow"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q4TVjc8EemUr5o8kbIRyQ" name="Triggering" eSuperTypes="_6Q3sRjc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_6Q4TVzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eNzc8EemUr5o8kbIRyQ"/>
        <eOperations xmi:id="_6TwoNDc8EemUr5o8kbIRyQ" name="CheckEndTypes">
          <eAnnotations xmi:id="_6Tx2Ujc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_6Tx2Uzc8EemUr5o8kbIRyQ" key="body" value="let source = self.base_InformationFlow.endType->selectByKind(UML::Class), target = self.base_InformationFlow.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_6TwoNjc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_6TwoNzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6TwoODc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_6TwoOzc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_6TwoPDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6TwoPTc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_6TwoPjc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_6Tx2UDc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_6Tx2UTc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_6Tx2Vjc8EemUr5o8kbIRyQ" name="CheckNavigability">
          <eAnnotations xmi:id="_6TydYDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_6TydYTc8EemUr5o8kbIRyQ" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_6Tx2WDc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_6Tx2WTc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6Tx2Wjc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_6Tx2XTc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_6Tx2Xjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6Tx2Xzc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_6Tx2YDc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_6Tx2YTc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_6Tx2Yjc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6Ttk4Dc8EemUr5o8kbIRyQ" name="base_InformationFlow" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//InformationFlow"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_6Q4TWDc8EemUr5o8kbIRyQ" name="Specialization" eSuperTypes="_6Q3sRjc8EemUr5o8kbIRyQ">
        <eAnnotations xmi:id="_6Q4TWTc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_6Q2eODc8EemUr5o8kbIRyQ"/>
        <eOperations xmi:id="_6T5LFDc8EemUr5o8kbIRyQ" name="CheckEndTypes">
          <eAnnotations xmi:id="_6T5yIjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_6T5yIzc8EemUr5o8kbIRyQ" key="body" value="let source = self.base_Generalization.endType->selectByKind(UML::Class), target = self.base_Generalization.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_6T5LFjc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_6T5LFzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6T5LGDc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_6T5LGzc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_6T5LHDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6T5LHTc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_6T5LHjc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_6T5yIDc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_6T5yITc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_6T5yJjc8EemUr5o8kbIRyQ" name="CheckNavigability">
          <eAnnotations xmi:id="_6T7AQDc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_6T7AQTc8EemUr5o8kbIRyQ" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_6T6ZMTc8EemUr5o8kbIRyQ" name="diagnostics">
            <eAnnotations xmi:id="_6T6ZMjc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6T6ZMzc8EemUr5o8kbIRyQ" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_6T6ZNjc8EemUr5o8kbIRyQ" name="context">
            <eAnnotations xmi:id="_6T6ZNzc8EemUr5o8kbIRyQ" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_6T6ZODc8EemUr5o8kbIRyQ" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_6T6ZOTc8EemUr5o8kbIRyQ">
              <eTypeArguments xmi:id="_6T6ZOjc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_6T6ZOzc8EemUr5o8kbIRyQ">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_6T2HwDc8EemUr5o8kbIRyQ" name="base_Generalization" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Generalization"/>
        </eStructuralFeatures>
      </eClassifiers>
    </contents>
  </eAnnotations>
  <elementImport xmi:id="_6RCrYjc8EemUr5o8kbIRyQ" alias="Class">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
  </elementImport>
  <elementImport xmi:id="_6RNDcTc8EemUr5o8kbIRyQ" alias="Node">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Node"/>
  </elementImport>
  <elementImport xmi:id="_6RXbgDc8EemUr5o8kbIRyQ" alias="Device">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Device"/>
  </elementImport>
  <elementImport xmi:id="_6RhMgTc8EemUr5o8kbIRyQ" alias="CommunicationPath">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#CommunicationPath"/>
  </elementImport>
  <elementImport xmi:id="_6RxrMTc8EemUr5o8kbIRyQ" alias="Interface">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Interface"/>
  </elementImport>
  <elementImport xmi:id="_6R8DQTc8EemUr5o8kbIRyQ" alias="ExecutionEnvironment">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#ExecutionEnvironment"/>
  </elementImport>
  <elementImport xmi:id="_6SKswTc8EemUr5o8kbIRyQ" alias="Collaboration">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Collaboration"/>
  </elementImport>
  <elementImport xmi:id="_6STPoTc8EemUr5o8kbIRyQ" alias="Artifact">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
  </elementImport>
  <elementImport xmi:id="_6SeOwDc8EemUr5o8kbIRyQ" alias="OpaqueBehavior">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#OpaqueBehavior"/>
  </elementImport>
  <elementImport xmi:id="_6SqcADc8EemUr5o8kbIRyQ" alias="Association">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
  </elementImport>
  <elementImport xmi:id="_6Szl8Dc8EemUr5o8kbIRyQ" alias="Usage">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
  </elementImport>
  <elementImport xmi:id="_6TC2gzc8EemUr5o8kbIRyQ" alias="Realization">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Realization"/>
  </elementImport>
  <elementImport xmi:id="_6TMAczc8EemUr5o8kbIRyQ" alias="Dependency">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Dependency"/>
  </elementImport>
  <elementImport xmi:id="_6TjM0Tc8EemUr5o8kbIRyQ" alias="InformationFlow">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#InformationFlow"/>
  </elementImport>
  <elementImport xmi:id="_6TydYzc8EemUr5o8kbIRyQ" alias="Generalization">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Generalization"/>
  </elementImport>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eIjc8EemUr5o8kbIRyQ" name="NodeElement">
    <ownedAttribute xmi:id="_6RCrYTc8EemUr5o8kbIRyQ" name="base_Class" association="_6RKAIDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eIzc8EemUr5o8kbIRyQ" name="Node">
    <generalization xmi:id="_6Q46YDc8EemUr5o8kbIRyQ" general="_6Q2eIjc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_6RNDcDc8EemUr5o8kbIRyQ" name="base_Node" association="_6RUYMDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Node"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eJDc8EemUr5o8kbIRyQ" name="Device">
    <generalization xmi:id="_6Q46Yjc8EemUr5o8kbIRyQ" general="_6Q2eIjc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_6RW0cDc8EemUr5o8kbIRyQ" name="base_Device" association="_6RewQDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Device"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eJTc8EemUr5o8kbIRyQ" name="Network">
    <generalization xmi:id="_6Q5hcTc8EemUr5o8kbIRyQ" general="_6Q2eIjc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_6RhMgDc8EemUr5o8kbIRyQ" name="base_CommunicationPath" association="_6RmsEDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#CommunicationPath"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eJjc8EemUr5o8kbIRyQ" name="CommunicationPath">
    <generalization xmi:id="_6Q5hczc8EemUr5o8kbIRyQ" general="_6Q2eIjc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_6RpIUDc8EemUr5o8kbIRyQ" name="base_CommunicationPath" association="_6Run4Dc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#CommunicationPath"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eJzc8EemUr5o8kbIRyQ" name="InfrastructureInterface">
    <generalization xmi:id="_6Q6IgTc8EemUr5o8kbIRyQ" general="_6Q2eIjc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_6RxrMDc8EemUr5o8kbIRyQ" name="base_Interface" association="_6R4Y4Dc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Interface"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eKDc8EemUr5o8kbIRyQ" name="SystemSoftware">
    <generalization xmi:id="_6Q6Igzc8EemUr5o8kbIRyQ" general="_6Q2eIjc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_6R8DQDc8EemUr5o8kbIRyQ" name="base_ExecutionEnvironment" association="_6SD_EDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#ExecutionEnvironment"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eKTc8EemUr5o8kbIRyQ" name="InfrastructureFunction">
    <generalization xmi:id="_6Q6vkDc8EemUr5o8kbIRyQ" general="_6Q2eIjc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_6SGbUDc8EemUr5o8kbIRyQ" name="base_Class" association="_6SIQgDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eKjc8EemUr5o8kbIRyQ" name="InfrastructureService">
    <generalization xmi:id="_6Q6vkjc8EemUr5o8kbIRyQ" general="_6Q2eIjc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_6SKswDc8EemUr5o8kbIRyQ" name="base_Collaboration" association="_6SQMUDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Collaboration"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eKzc8EemUr5o8kbIRyQ" name="Artifact">
    <generalization xmi:id="_6Q7WoDc8EemUr5o8kbIRyQ" general="_6Q2eIjc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_6STPoDc8EemUr5o8kbIRyQ" name="base_Artifact" association="_6SYIIDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eLDc8EemUr5o8kbIRyQ" name="Grouping">
    <generalization xmi:id="_6Q7Wojc8EemUr5o8kbIRyQ" general="_6Q2eIjc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_6SZ9UDc8EemUr5o8kbIRyQ" name="base_Class" association="_6SbygDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eLTc8EemUr5o8kbIRyQ" name="Junction">
    <generalization xmi:id="_6Q79sTc8EemUr5o8kbIRyQ" general="_6Q2eLjc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_6SdnsDc8EemUr5o8kbIRyQ" name="base_OpaqueBehavior" association="_6SjHQDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#OpaqueBehavior"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eLjc8EemUr5o8kbIRyQ" name="Relationship">
    <ownedAttribute xmi:id="_6Q8kwDc8EemUr5o8kbIRyQ" name="source" type="_6Q2eIjc8EemUr5o8kbIRyQ" association="_6Q8kwzc8EemUr5o8kbIRyQ">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_6Q8kwTc8EemUr5o8kbIRyQ" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6Q8kwjc8EemUr5o8kbIRyQ" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_6Q9L0Tc8EemUr5o8kbIRyQ" name="target" type="_6Q2eIjc8EemUr5o8kbIRyQ" association="_6Q9L1Dc8EemUr5o8kbIRyQ">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_6Q9L0jc8EemUr5o8kbIRyQ" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6Q9L0zc8EemUr5o8kbIRyQ" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_6Sk8cDc8EemUr5o8kbIRyQ" name="base_Class" association="_6Sn_wDc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eLzc8EemUr5o8kbIRyQ" name="Association">
    <ownedRule xmi:id="_6SxJsjc8EemUr5o8kbIRyQ" name="CheckEndTypes" constrainedElement="_6Q2eLzc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_6SxJszc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_6SyX0jc8EemUr5o8kbIRyQ" name="CheckNavigability" constrainedElement="_6Q2eLzc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_6SyX0zc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_6Q9y4Dc8EemUr5o8kbIRyQ" general="_6Q2eLjc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_6Sp08Dc8EemUr5o8kbIRyQ" name="base_Association" association="_6SuGYTc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eMDc8EemUr5o8kbIRyQ" name="Access">
    <ownedRule xmi:id="_6S5skjc8EemUr5o8kbIRyQ" name="CheckEndTypes" constrainedElement="_6Q2eMDc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_6S5skzc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let source = self.base_Usage.endType->selectByKind(UML::Class), target = self.base_Usage.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_6S66szc8EemUr5o8kbIRyQ" name="CheckNavigability" constrainedElement="_6Q2eMDc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_6S66tDc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_6Q-Z8Dc8EemUr5o8kbIRyQ" general="_6Q2eLjc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_6Sy-4zc8EemUr5o8kbIRyQ" name="base_Usage" association="_6S2CMTc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eMTc8EemUr5o8kbIRyQ" name="UsedBy">
    <ownedRule xmi:id="_6TBBUjc8EemUr5o8kbIRyQ" name="CheckEndTypes" constrainedElement="_6Q2eMTc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_6TBBUzc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let source = self.base_Usage.endType->selectByKind(UML::Class), target = self.base_Usage.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_6TBoZDc8EemUr5o8kbIRyQ" name="CheckNavigability" constrainedElement="_6Q2eMTc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_6TBoZTc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_6Q-Z8jc8EemUr5o8kbIRyQ" general="_6Q2eLjc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_6S8I0Dc8EemUr5o8kbIRyQ" name="base_Usage" association="_6S9-ATc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eMjc8EemUr5o8kbIRyQ" name="Realization">
    <ownedRule xmi:id="_6TKLQjc8EemUr5o8kbIRyQ" name="CheckEndTypes" constrainedElement="_6Q2eMjc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_6TKLQzc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let source = self.base_Realization.endType->selectByKind(UML::Class), target = self.base_Realization.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_6TKyVDc8EemUr5o8kbIRyQ" name="CheckNavigability" constrainedElement="_6Q2eMjc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_6TKyVTc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_6Q_BATc8EemUr5o8kbIRyQ" general="_6Q2eLjc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_6TC2gjc8EemUr5o8kbIRyQ" name="base_Realization" association="_6THH8Tc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Realization"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eMzc8EemUr5o8kbIRyQ" name="Assignment">
    <ownedRule xmi:id="_6TSuITc8EemUr5o8kbIRyQ" name="CheckEndTypes" constrainedElement="_6Q2eMzc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_6TSuIjc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let source = self.base_Dependency.endType->selectByKind(UML::Class), target = self.base_Dependency.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_6TTVNDc8EemUr5o8kbIRyQ" name="CheckNavigability" constrainedElement="_6Q2eMzc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_6TTVNTc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_6Q_oETc8EemUr5o8kbIRyQ" general="_6Q2eLjc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_6TMAcjc8EemUr5o8kbIRyQ" name="base_Dependency" association="_6TPq0Tc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Dependency"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eNDc8EemUr5o8kbIRyQ" name="Aggregation">
    <ownedRule xmi:id="_6TZb0jc8EemUr5o8kbIRyQ" name="CheckEndTypes" constrainedElement="_6Q2eNDc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_6TZb0zc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_6TaC6Tc8EemUr5o8kbIRyQ" name="CheckNavigability" constrainedElement="_6Q2eNDc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_6TaC6jc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_6RAPIDc8EemUr5o8kbIRyQ" general="_6Q2eLjc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_6TUjUjc8EemUr5o8kbIRyQ" name="base_Association" association="_6TWYgTc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eNTc8EemUr5o8kbIRyQ" name="Composition">
    <ownedRule xmi:id="_6Tgwkjc8EemUr5o8kbIRyQ" name="CheckEndTypes" constrainedElement="_6Q2eNTc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_6Tgwkzc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_6Th-sjc8EemUr5o8kbIRyQ" name="CheckNavigability" constrainedElement="_6Q2eNTc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_6Th-szc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_6RA2MDc8EemUr5o8kbIRyQ" general="_6Q2eLjc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_6TbRAzc8EemUr5o8kbIRyQ" name="base_Association" association="_6TdtQTc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eNjc8EemUr5o8kbIRyQ" name="Flow">
    <ownedRule xmi:id="_6Tp6gjc8EemUr5o8kbIRyQ" name="CheckEndTypes" constrainedElement="_6Q2eNjc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_6Tp6gzc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let source = self.base_InformationFlow.endType->selectByKind(UML::Class), target = self.base_InformationFlow.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_6TrIojc8EemUr5o8kbIRyQ" name="CheckNavigability" constrainedElement="_6Q2eNjc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_6TrIozc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_6RA2Mjc8EemUr5o8kbIRyQ" general="_6Q2eLjc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_6TjM0Dc8EemUr5o8kbIRyQ" name="base_InformationFlow" association="_6Tm3MTc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#InformationFlow"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eNzc8EemUr5o8kbIRyQ" name="Triggering">
    <ownedRule xmi:id="_6TwoMjc8EemUr5o8kbIRyQ" name="CheckEndTypes" constrainedElement="_6Q2eNzc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_6TwoMzc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let source = self.base_InformationFlow.endType->selectByKind(UML::Class), target = self.base_InformationFlow.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_6Tx2VDc8EemUr5o8kbIRyQ" name="CheckNavigability" constrainedElement="_6Q2eNzc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_6Tx2VTc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_6RBdQTc8EemUr5o8kbIRyQ" general="_6Q2eLjc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_6TrvtDc8EemUr5o8kbIRyQ" name="base_InformationFlow" association="_6Ttk4Tc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#InformationFlow"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_6Q2eODc8EemUr5o8kbIRyQ" name="Specialization">
    <ownedRule xmi:id="_6T5LEjc8EemUr5o8kbIRyQ" name="CheckEndTypes" constrainedElement="_6Q2eODc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_6T5LEzc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let source = self.base_Generalization.endType->selectByKind(UML::Class), target = self.base_Generalization.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_6T5yJDc8EemUr5o8kbIRyQ" name="CheckNavigability" constrainedElement="_6Q2eODc8EemUr5o8kbIRyQ">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_6T5yJTc8EemUr5o8kbIRyQ">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_6RCEUTc8EemUr5o8kbIRyQ" general="_6Q2eLjc8EemUr5o8kbIRyQ"/>
    <ownedAttribute xmi:id="_6TydYjc8EemUr5o8kbIRyQ" name="base_Generalization" association="_6T2HwTc8EemUr5o8kbIRyQ">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Generalization"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_6Q8kwzc8EemUr5o8kbIRyQ" memberEnd="_6Q8kxDc8EemUr5o8kbIRyQ _6Q8kwDc8EemUr5o8kbIRyQ">
    <eAnnotations xmi:id="_6Q8kxzc8EemUr5o8kbIRyQ" source="org.eclipse.papyrus">
      <details xmi:id="_6Q8kyDc8EemUr5o8kbIRyQ" key="nature" value="UML_Nature"/>
    </eAnnotations>
    <ownedEnd xmi:id="_6Q8kxDc8EemUr5o8kbIRyQ" name="RelationshipEnd" type="_6Q2eLjc8EemUr5o8kbIRyQ" association="_6Q8kwzc8EemUr5o8kbIRyQ">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_6Q8kxTc8EemUr5o8kbIRyQ" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6Q8kxjc8EemUr5o8kbIRyQ" value="1"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_6Q9L1Dc8EemUr5o8kbIRyQ" memberEnd="_6Q9L1Tc8EemUr5o8kbIRyQ _6Q9L0Tc8EemUr5o8kbIRyQ">
    <eAnnotations xmi:id="_6Q9L2Dc8EemUr5o8kbIRyQ" source="org.eclipse.papyrus">
      <details xmi:id="_6Q9L2Tc8EemUr5o8kbIRyQ" key="nature" value="UML_Nature"/>
    </eAnnotations>
    <ownedEnd xmi:id="_6Q9L1Tc8EemUr5o8kbIRyQ" name="RelationshipEnd" type="_6Q2eLjc8EemUr5o8kbIRyQ" association="_6Q9L1Dc8EemUr5o8kbIRyQ">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_6Q9L1jc8EemUr5o8kbIRyQ" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6Q9L1zc8EemUr5o8kbIRyQ" value="1"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6RKAIDc8EemUr5o8kbIRyQ" name="E_NodeElement_Class1" memberEnd="_6RKAITc8EemUr5o8kbIRyQ _6RCrYTc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6RKAITc8EemUr5o8kbIRyQ" name="extension_NodeElement" type="_6Q2eIjc8EemUr5o8kbIRyQ" aggregation="composite" association="_6RKAIDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6RUYMDc8EemUr5o8kbIRyQ" name="E_Node_Node1" memberEnd="_6RUYMTc8EemUr5o8kbIRyQ _6RNDcDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6RUYMTc8EemUr5o8kbIRyQ" name="extension_Node" type="_6Q2eIzc8EemUr5o8kbIRyQ" aggregation="composite" association="_6RUYMDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6RewQDc8EemUr5o8kbIRyQ" name="E_Device_Device1" memberEnd="_6RewQTc8EemUr5o8kbIRyQ _6RW0cDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6RewQTc8EemUr5o8kbIRyQ" name="extension_Device" type="_6Q2eJDc8EemUr5o8kbIRyQ" aggregation="composite" association="_6RewQDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6RmsEDc8EemUr5o8kbIRyQ" name="E_Network_CommunicationPath1" memberEnd="_6RmsETc8EemUr5o8kbIRyQ _6RhMgDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6RmsETc8EemUr5o8kbIRyQ" name="extension_Network" type="_6Q2eJTc8EemUr5o8kbIRyQ" aggregation="composite" association="_6RmsEDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6Run4Dc8EemUr5o8kbIRyQ" name="E_CommunicationPath_CommunicationPath1" memberEnd="_6Run4Tc8EemUr5o8kbIRyQ _6RpIUDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6Run4Tc8EemUr5o8kbIRyQ" name="extension_CommunicationPath" type="_6Q2eJjc8EemUr5o8kbIRyQ" aggregation="composite" association="_6Run4Dc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6R4Y4Dc8EemUr5o8kbIRyQ" name="E_InfrastructureInterface_Interface1" memberEnd="_6R4_8Dc8EemUr5o8kbIRyQ _6RxrMDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6R4_8Dc8EemUr5o8kbIRyQ" name="extension_InfrastructureInterface" type="_6Q2eJzc8EemUr5o8kbIRyQ" aggregation="composite" association="_6R4Y4Dc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6SD_EDc8EemUr5o8kbIRyQ" name="E_SystemSoftware_ExecutionEnvironment1" memberEnd="_6SD_ETc8EemUr5o8kbIRyQ _6R8DQDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6SD_ETc8EemUr5o8kbIRyQ" name="extension_SystemSoftware" type="_6Q2eKDc8EemUr5o8kbIRyQ" aggregation="composite" association="_6SD_EDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6SIQgDc8EemUr5o8kbIRyQ" name="E_InfrastructureFunction_Class1" memberEnd="_6SIQgTc8EemUr5o8kbIRyQ _6SGbUDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6SIQgTc8EemUr5o8kbIRyQ" name="extension_InfrastructureFunction" type="_6Q2eKTc8EemUr5o8kbIRyQ" aggregation="composite" association="_6SIQgDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6SQMUDc8EemUr5o8kbIRyQ" name="E_InfrastructureService_Collaboration1" memberEnd="_6SQMUTc8EemUr5o8kbIRyQ _6SKswDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6SQMUTc8EemUr5o8kbIRyQ" name="extension_InfrastructureService" type="_6Q2eKjc8EemUr5o8kbIRyQ" aggregation="composite" association="_6SQMUDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6SYIIDc8EemUr5o8kbIRyQ" name="E_Artifact_Artifact1" memberEnd="_6SYIITc8EemUr5o8kbIRyQ _6STPoDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6SYIITc8EemUr5o8kbIRyQ" name="extension_Artifact" type="_6Q2eKzc8EemUr5o8kbIRyQ" aggregation="composite" association="_6SYIIDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6SbygDc8EemUr5o8kbIRyQ" name="E_Grouping_Class1" memberEnd="_6SbygTc8EemUr5o8kbIRyQ _6SZ9UDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6SbygTc8EemUr5o8kbIRyQ" name="extension_Grouping" type="_6Q2eLDc8EemUr5o8kbIRyQ" aggregation="composite" association="_6SbygDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6SjHQDc8EemUr5o8kbIRyQ" name="E_Junction_OpaqueBehavior1" memberEnd="_6SjHQTc8EemUr5o8kbIRyQ _6SdnsDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6SjHQTc8EemUr5o8kbIRyQ" name="extension_Junction" type="_6Q2eLTc8EemUr5o8kbIRyQ" aggregation="composite" association="_6SjHQDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6Sn_wDc8EemUr5o8kbIRyQ" name="E_Relationship_Class1" memberEnd="_6Sn_wTc8EemUr5o8kbIRyQ _6Sk8cDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6Sn_wTc8EemUr5o8kbIRyQ" name="extension_Relationship" type="_6Q2eLjc8EemUr5o8kbIRyQ" aggregation="composite" association="_6Sn_wDc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6SuGYTc8EemUr5o8kbIRyQ" name="E_Association_Association1" memberEnd="_6SuGYjc8EemUr5o8kbIRyQ _6Sp08Dc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6SuGYjc8EemUr5o8kbIRyQ" name="extension_Association" type="_6Q2eLzc8EemUr5o8kbIRyQ" aggregation="composite" association="_6SuGYTc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6S2CMTc8EemUr5o8kbIRyQ" name="E_Access_Usage1" memberEnd="_6S2CMjc8EemUr5o8kbIRyQ _6Sy-4zc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6S2CMjc8EemUr5o8kbIRyQ" name="extension_Access" type="_6Q2eMDc8EemUr5o8kbIRyQ" aggregation="composite" association="_6S2CMTc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6S9-ATc8EemUr5o8kbIRyQ" name="E_UsedBy_Usage1" memberEnd="_6S9-Ajc8EemUr5o8kbIRyQ _6S8I0Dc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6S9-Ajc8EemUr5o8kbIRyQ" name="extension_UsedBy" type="_6Q2eMTc8EemUr5o8kbIRyQ" aggregation="composite" association="_6S9-ATc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6THH8Tc8EemUr5o8kbIRyQ" name="E_Realization_Realization1" memberEnd="_6THH8jc8EemUr5o8kbIRyQ _6TC2gjc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6THH8jc8EemUr5o8kbIRyQ" name="extension_Realization" type="_6Q2eMjc8EemUr5o8kbIRyQ" aggregation="composite" association="_6THH8Tc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6TPq0Tc8EemUr5o8kbIRyQ" name="E_Assignment_Dependency1" memberEnd="_6TPq0jc8EemUr5o8kbIRyQ _6TMAcjc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6TPq0jc8EemUr5o8kbIRyQ" name="extension_Assignment" type="_6Q2eMzc8EemUr5o8kbIRyQ" aggregation="composite" association="_6TPq0Tc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6TWYgTc8EemUr5o8kbIRyQ" name="E_Aggregation_Association1" memberEnd="_6TWYgjc8EemUr5o8kbIRyQ _6TUjUjc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6TWYgjc8EemUr5o8kbIRyQ" name="extension_Aggregation" type="_6Q2eNDc8EemUr5o8kbIRyQ" aggregation="composite" association="_6TWYgTc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6TdtQTc8EemUr5o8kbIRyQ" name="E_Composition_Association1" memberEnd="_6TdtQjc8EemUr5o8kbIRyQ _6TbRAzc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6TdtQjc8EemUr5o8kbIRyQ" name="extension_Composition" type="_6Q2eNTc8EemUr5o8kbIRyQ" aggregation="composite" association="_6TdtQTc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6Tm3MTc8EemUr5o8kbIRyQ" name="E_Flow_InformationFlow1" memberEnd="_6Tm3Mjc8EemUr5o8kbIRyQ _6TjM0Dc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6Tm3Mjc8EemUr5o8kbIRyQ" name="extension_Flow" type="_6Q2eNjc8EemUr5o8kbIRyQ" aggregation="composite" association="_6Tm3MTc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6Ttk4Tc8EemUr5o8kbIRyQ" name="E_Triggering_InformationFlow1" memberEnd="_6Ttk4jc8EemUr5o8kbIRyQ _6TrvtDc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6Ttk4jc8EemUr5o8kbIRyQ" name="extension_Triggering" type="_6Q2eNzc8EemUr5o8kbIRyQ" aggregation="composite" association="_6Ttk4Tc8EemUr5o8kbIRyQ"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_6T2HwTc8EemUr5o8kbIRyQ" name="E_Specialization_Generalization1" memberEnd="_6T2Hwjc8EemUr5o8kbIRyQ _6TydYjc8EemUr5o8kbIRyQ">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6T2Hwjc8EemUr5o8kbIRyQ" name="extension_Specialization" type="_6Q2eODc8EemUr5o8kbIRyQ" aggregation="composite" association="_6T2HwTc8EemUr5o8kbIRyQ"/>
  </packagedElement>
</uml:Profile>
