<?xml version="1.0" encoding="UTF-8"?>
<uml:Profile xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_qw0AgDa0EemNRqQIo_cpGw" name="ArchimateTechnology" URI="archimate-technology" metaclassReference="_qxDRETa0EemNRqQIo_cpGw _qxPeUTa0EemNRqQIo_cpGw _qxc5sDa0EemNRqQIo_cpGw _qxpuATa0EemNRqQIo_cpGw _qx_sQTa0EemNRqQIo_cpGw _qyLScTa0EemNRqQIo_cpGw _qyeNYTa0EemNRqQIo_cpGw _qyrowTa0EemNRqQIo_cpGw _qzCOETa0EemNRqQIo_cpGw _qzZacTa0EemNRqQIo_cpGw _qzp5Iza0EemNRqQIo_cpGw _q0GlETa0EemNRqQIo_cpGw _q0Xq0Ta0EemNRqQIo_cpGw _q0-u0Ta0EemNRqQIo_cpGw _q1bawTa0EemNRqQIo_cpGw">
  <eAnnotations xmi:id="_qw0Agja0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML">
    <contents xmi:type="ecore:EPackage" xmi:id="_qw0AgTa0EemNRqQIo_cpGw" name="ArchimateTechnology" nsURI="http:///schemas/ArchimateTechnology/something/1" nsPrefix="ArchimateTechnology">
      <eAnnotations xmi:id="_qw0Agza0EemNRqQIo_cpGw" source="PapyrusVersion">
        <details xmi:id="_qw0AhDa0EemNRqQIo_cpGw" key="Version" value="0.0.1"/>
        <details xmi:id="_qw0AhTa0EemNRqQIo_cpGw" key="Comment" value=""/>
        <details xmi:id="_qw0Ahja0EemNRqQIo_cpGw" key="Copyright" value=""/>
        <details xmi:id="_qw0Ahza0EemNRqQIo_cpGw" key="Date" value="2017-02-01"/>
        <details xmi:id="_qw0AiDa0EemNRqQIo_cpGw" key="Author" value=""/>
      </eAnnotations>
      <eAnnotations xmi:id="_qzlAoDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_qzlAoTa0EemNRqQIo_cpGw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_qz2GYDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_qz2GYTa0EemNRqQIo_cpGw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_q0C6sDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_q0C6sTa0EemNRqQIo_cpGw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_q0TZYDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_q0TZYTa0EemNRqQIo_cpGw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_q0ip8Da0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_q0ip8Ta0EemNRqQIo_cpGw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_q0u3MDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_q0u3MTa0EemNRqQIo_cpGw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_q07EcDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_q07EcTa0EemNRqQIo_cpGw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_q1K8EDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_q1K8ETa0EemNRqQIo_cpGw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_q1XJUDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_q1XJUTa0EemNRqQIo_cpGw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_q1mZ4Da0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_q1mZ4Ta0EemNRqQIo_cpGw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw0npza0EemNRqQIo_cpGw" name="NodeElement">
        <eAnnotations xmi:id="_qw0nqDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0nkDa0EemNRqQIo_cpGw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_qxJ-wDa0EemNRqQIo_cpGw" name="base_Class" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Class"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw0nqTa0EemNRqQIo_cpGw" name="Node" eSuperTypes="_qw0npza0EemNRqQIo_cpGw">
        <eAnnotations xmi:id="_qw0nqja0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0nkTa0EemNRqQIo_cpGw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_qxWMADa0EemNRqQIo_cpGw" name="base_Node" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Node"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw0nqza0EemNRqQIo_cpGw" name="Device" eSuperTypes="_qw0npza0EemNRqQIo_cpGw">
        <eAnnotations xmi:id="_qw0nrDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0nkja0EemNRqQIo_cpGw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_qxjnYDa0EemNRqQIo_cpGw" name="base_Device" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Device"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw1OoDa0EemNRqQIo_cpGw" name="Network" eSuperTypes="_qw0npza0EemNRqQIo_cpGw">
        <eAnnotations xmi:id="_qw1OoTa0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0nkza0EemNRqQIo_cpGw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_qxxCwDa0EemNRqQIo_cpGw" name="base_CommunicationPath" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//CommunicationPath"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw1Ooja0EemNRqQIo_cpGw" name="CommunicationPath" eSuperTypes="_qw0npza0EemNRqQIo_cpGw">
        <eAnnotations xmi:id="_qw1Ooza0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0nlDa0EemNRqQIo_cpGw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_qx6MsDa0EemNRqQIo_cpGw" name="base_CommunicationPath" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//CommunicationPath"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw1OpDa0EemNRqQIo_cpGw" name="InfrastructureInterface" eSuperTypes="_qw0npza0EemNRqQIo_cpGw">
        <eAnnotations xmi:id="_qw1OpTa0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0nlTa0EemNRqQIo_cpGw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_qyFy4Da0EemNRqQIo_cpGw" name="base_Interface" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Interface"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw1Opja0EemNRqQIo_cpGw" name="SystemSoftware" eSuperTypes="_qw0npza0EemNRqQIo_cpGw">
        <eAnnotations xmi:id="_qw1Opza0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0nlja0EemNRqQIo_cpGw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_qySAIDa0EemNRqQIo_cpGw" name="base_ExecutionEnvironment" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//ExecutionEnvironment"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw1OqDa0EemNRqQIo_cpGw" name="InfrastructureFunction" eSuperTypes="_qw0npza0EemNRqQIo_cpGw">
        <eAnnotations xmi:id="_qw1OqTa0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0nlza0EemNRqQIo_cpGw"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw11sDa0EemNRqQIo_cpGw" name="InfrastructureService" eSuperTypes="_qw0npza0EemNRqQIo_cpGw">
        <eAnnotations xmi:id="_qw11sTa0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0nmDa0EemNRqQIo_cpGw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_qyliIDa0EemNRqQIo_cpGw" name="base_Collaboration" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Collaboration"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw11sja0EemNRqQIo_cpGw" name="Artifact" eSuperTypes="_qw0npza0EemNRqQIo_cpGw">
        <eAnnotations xmi:id="_qw11sza0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0nmTa0EemNRqQIo_cpGw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_qyy9gDa0EemNRqQIo_cpGw" name="base_Artifact" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Artifact"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw11tDa0EemNRqQIo_cpGw" name="Grouping" eSuperTypes="_qw0npza0EemNRqQIo_cpGw">
        <eAnnotations xmi:id="_qw11tTa0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0nmja0EemNRqQIo_cpGw"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw11tja0EemNRqQIo_cpGw" name="Junction" eSuperTypes="_qw11uDa0EemNRqQIo_cpGw">
        <eAnnotations xmi:id="_qw11tza0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0nmza0EemNRqQIo_cpGw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_qzI7wDa0EemNRqQIo_cpGw" name="base_OpaqueBehavior" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//OpaqueBehavior"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw11uDa0EemNRqQIo_cpGw" name="Relationship">
        <eAnnotations xmi:id="_qw11uTa0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0nnDa0EemNRqQIo_cpGw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_qw78Vza0EemNRqQIo_cpGw" name="source" lowerBound="1" eType="_qw0npza0EemNRqQIo_cpGw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_qw8jaTa0EemNRqQIo_cpGw" name="target" lowerBound="1" eType="_qw0npza0EemNRqQIo_cpGw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_qzTT0Da0EemNRqQIo_cpGw" name="base_Class" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Class"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw11uja0EemNRqQIo_cpGw" name="Association" eSuperTypes="_qw11uDa0EemNRqQIo_cpGw">
        <eAnnotations xmi:id="_qw11uza0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0nnTa0EemNRqQIo_cpGw"/>
        <eOperations xmi:id="_qzlnsTa0EemNRqQIo_cpGw" name="CheckEndTypes">
          <eAnnotations xmi:id="_qzoD8Da0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_qzoD8Ta0EemNRqQIo_cpGw" key="body" value="let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_qzmOwTa0EemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_qzmOwja0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_qzmOwza0EemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_qzmOxja0EemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_qzmOxza0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_qzmOyDa0EemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_qzmOyTa0EemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_qzm10Da0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_qznc4Da0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_qzoD9Da0EemNRqQIo_cpGw" name="CheckNavigability">
          <eAnnotations xmi:id="_qzp5IDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_qzp5ITa0EemNRqQIo_cpGw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_qzorATa0EemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_qzorAja0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_qzorAza0EemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_qzorBja0EemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_qzorBza0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_qzorCDa0EemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_qzorCTa0EemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_qzpSEDa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_qzpSETa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_qzgIIDa0EemNRqQIo_cpGw" name="base_Association" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Association"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw2cwDa0EemNRqQIo_cpGw" name="Access" eSuperTypes="_qw11uDa0EemNRqQIo_cpGw">
        <eAnnotations xmi:id="_qw2cwTa0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0nnja0EemNRqQIo_cpGw"/>
        <eOperations xmi:id="_qz2tcDa0EemNRqQIo_cpGw" name="CheckEndTypes">
          <eAnnotations xmi:id="_qz37kDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_qz37kTa0EemNRqQIo_cpGw" key="body" value="let source = self.base_Usage.endType->selectByKind(UML::Class), target = self.base_Usage.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_qz2tcja0EemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_qz2tcza0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_qz2tdDa0EemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_qz2tdza0EemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_qz2teDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_qz2teTa0EemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_qz2teja0EemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_qz3UgDa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_qz3UgTa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_qz37lDa0EemNRqQIo_cpGw" name="CheckNavigability">
          <eAnnotations xmi:id="_qz5JsTa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_qz5Jsja0EemNRqQIo_cpGw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_qz37lja0EemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_qz37lza0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_qz37mDa0EemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_qz4ioTa0EemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_qz4ioja0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_qz4ioza0EemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_qz4ipDa0EemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_qz4ipTa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_qz5JsDa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_qzwm0Da0EemNRqQIo_cpGw" name="base_Usage" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Usage"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw2cwja0EemNRqQIo_cpGw" name="UsedBy" eSuperTypes="_qw11uDa0EemNRqQIo_cpGw">
        <eAnnotations xmi:id="_qw2cwza0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0nnza0EemNRqQIo_cpGw"/>
        <eOperations xmi:id="_q0DhwDa0EemNRqQIo_cpGw" name="CheckEndTypes">
          <eAnnotations xmi:id="_q0Ev4Da0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_q0Ev4Ta0EemNRqQIo_cpGw" key="body" value="let source = self.base_Usage.endType->selectByKind(UML::Class), target = self.base_Usage.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_q0Dhwja0EemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_q0Dhwza0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q0DhxDa0EemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_q0Dhxza0EemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_q0DhyDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q0DhyTa0EemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_q0Dhyja0EemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_q0EI0Da0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_q0EI0Ta0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_q0Ev5Da0EemNRqQIo_cpGw" name="CheckNavigability">
          <eAnnotations xmi:id="_q0F-ATa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_q0F-Aja0EemNRqQIo_cpGw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_q0Ev5ja0EemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_q0Ev5za0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q0FW8Da0EemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_q0FW8za0EemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_q0FW9Da0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q0FW9Ta0EemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_q0FW9ja0EemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_q0FW9za0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_q0F-ADa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_qz9bIDa0EemNRqQIo_cpGw" name="base_Usage" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Usage"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw2cxDa0EemNRqQIo_cpGw" name="Realization" eSuperTypes="_qw11uDa0EemNRqQIo_cpGw">
        <eAnnotations xmi:id="_qw2cxTa0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0noDa0EemNRqQIo_cpGw"/>
        <eOperations xmi:id="_q0UAcDa0EemNRqQIo_cpGw" name="CheckEndTypes">
          <eAnnotations xmi:id="_q0VOkTa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_q0VOkja0EemNRqQIo_cpGw" key="body" value="let source = self.base_Realization.endType->selectByKind(UML::Class), target = self.base_Realization.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_q0UAcja0EemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_q0UAcza0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q0UAdDa0EemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_q0UngTa0EemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_q0Ungja0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q0Ungza0EemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_q0UnhDa0EemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_q0UnhTa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_q0VOkDa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_q0V1oDa0EemNRqQIo_cpGw" name="CheckNavigability">
          <eAnnotations xmi:id="_q0XDwTa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_q0XDwja0EemNRqQIo_cpGw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_q0V1oja0EemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_q0V1oza0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q0V1pDa0EemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_q0WcsTa0EemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_q0Wcsja0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q0Wcsza0EemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_q0WctDa0EemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_q0WctTa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_q0XDwDa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_q0NSwDa0EemNRqQIo_cpGw" name="base_Realization" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Realization"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw2cxja0EemNRqQIo_cpGw" name="Assignment" eSuperTypes="_qw11uDa0EemNRqQIo_cpGw">
        <eAnnotations xmi:id="_qw2cxza0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0noTa0EemNRqQIo_cpGw"/>
        <eOperations xmi:id="_q0jRADa0EemNRqQIo_cpGw" name="CheckEndTypes">
          <eAnnotations xmi:id="_q0kfITa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_q0kfIja0EemNRqQIo_cpGw" key="body" value="let source = self.base_Dependency.endType->selectByKind(UML::Class), target = self.base_Dependency.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_q0jRAja0EemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_q0jRAza0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q0jRBDa0EemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_q0j4ETa0EemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_q0j4Eja0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q0j4Eza0EemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_q0j4FDa0EemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_q0j4FTa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_q0kfIDa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_q0lGMDa0EemNRqQIo_cpGw" name="CheckNavigability">
          <eAnnotations xmi:id="_q0mUUDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_q0mUUTa0EemNRqQIo_cpGw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_q0lGMja0EemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_q0lGMza0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q0lGNDa0EemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_q0lGNza0EemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_q0lGODa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q0lGOTa0EemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_q0ltQDa0EemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_q0ltQTa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_q0ltQja0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_q0dxcDa0EemNRqQIo_cpGw" name="base_Dependency" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Dependency"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw2cyDa0EemNRqQIo_cpGw" name="Aggregation" eSuperTypes="_qw11uDa0EemNRqQIo_cpGw">
        <eAnnotations xmi:id="_qw2cyTa0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0noja0EemNRqQIo_cpGw"/>
        <eOperations xmi:id="_q0veQDa0EemNRqQIo_cpGw" name="CheckEndTypes">
          <eAnnotations xmi:id="_q0wsYDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_q0wsYTa0EemNRqQIo_cpGw" key="body" value="let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_q0veQja0EemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_q0veQza0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q0veRDa0EemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_q0veRza0EemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_q0veSDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q0veSTa0EemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_q0wFUDa0EemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_q0wFUTa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_q0wFUja0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_q0wsZDa0EemNRqQIo_cpGw" name="CheckNavigability">
          <eAnnotations xmi:id="_q0x6gja0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_q0x6gza0EemNRqQIo_cpGw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_q0xTcTa0EemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_q0xTcja0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q0xTcza0EemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_q0xTdja0EemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_q0xTdza0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q0xTeDa0EemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_q0xTeTa0EemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_q0x6gDa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_q0x6gTa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_q0p-sDa0EemNRqQIo_cpGw" name="base_Association" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Association"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw2cyja0EemNRqQIo_cpGw" name="Composition" eSuperTypes="_qw11uDa0EemNRqQIo_cpGw">
        <eAnnotations xmi:id="_qw2cyza0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0noza0EemNRqQIo_cpGw"/>
        <eOperations xmi:id="_q07rgDa0EemNRqQIo_cpGw" name="CheckEndTypes">
          <eAnnotations xmi:id="_q085oDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_q085oTa0EemNRqQIo_cpGw" key="body" value="let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_q07rgja0EemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_q07rgza0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q07rhDa0EemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_q07rhza0EemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_q07riDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q07riTa0EemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_q07rija0EemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_q08SkDa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_q08SkTa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_q085pDa0EemNRqQIo_cpGw" name="CheckNavigability">
          <eAnnotations xmi:id="_q0-Hwja0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_q0-Hwza0EemNRqQIo_cpGw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_q09gsTa0EemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_q09gsja0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q09gsza0EemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_q09gtja0EemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_q09gtza0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q09guDa0EemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_q09guTa0EemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_q0-HwDa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_q0-HwTa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_q01k4Da0EemNRqQIo_cpGw" name="base_Association" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Association"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw3D0Da0EemNRqQIo_cpGw" name="Flow" eSuperTypes="_qw11uDa0EemNRqQIo_cpGw">
        <eAnnotations xmi:id="_qw3D0Ta0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0npDa0EemNRqQIo_cpGw"/>
        <eOperations xmi:id="_q1LjIja0EemNRqQIo_cpGw" name="CheckEndTypes">
          <eAnnotations xmi:id="_q1MxQTa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_q1MxQja0EemNRqQIo_cpGw" key="body" value="let source = self.base_InformationFlow.endType->selectByKind(UML::Class), target = self.base_InformationFlow.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_q1LjJDa0EemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_q1LjJTa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q1LjJja0EemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_q1MKMja0EemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_q1MKMza0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q1MKNDa0EemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_q1MKNTa0EemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_q1MKNja0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_q1MxQDa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_q1NYUDa0EemNRqQIo_cpGw" name="CheckNavigability">
          <eAnnotations xmi:id="_q1OmcDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_q1OmcTa0EemNRqQIo_cpGw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_q1NYUja0EemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_q1NYUza0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q1NYVDa0EemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_q1NYVza0EemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_q1NYWDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q1NYWTa0EemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_q1NYWja0EemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_q1N_YDa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_q1N_YTa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_q1GDkDa0EemNRqQIo_cpGw" name="base_InformationFlow" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//InformationFlow"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw3D0ja0EemNRqQIo_cpGw" name="Triggering" eSuperTypes="_qw11uDa0EemNRqQIo_cpGw">
        <eAnnotations xmi:id="_qw3D0za0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0npTa0EemNRqQIo_cpGw"/>
        <eOperations xmi:id="_q1XwYDa0EemNRqQIo_cpGw" name="CheckEndTypes">
          <eAnnotations xmi:id="_q1Y-gDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_q1Y-gTa0EemNRqQIo_cpGw" key="body" value="let source = self.base_InformationFlow.endType->selectByKind(UML::Class), target = self.base_InformationFlow.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_q1XwYja0EemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_q1XwYza0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q1XwZDa0EemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_q1XwZza0EemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_q1YXcDa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q1YXcTa0EemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_q1YXcja0EemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_q1YXcza0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_q1YXdDa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_q1Y-hDa0EemNRqQIo_cpGw" name="CheckNavigability">
          <eAnnotations xmi:id="_q1aMoja0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_q1aMoza0EemNRqQIo_cpGw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_q1ZlkTa0EemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_q1Zlkja0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q1Zlkza0EemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_q1Zllja0EemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_q1Zllza0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q1ZlmDa0EemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_q1ZlmTa0EemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_q1aMoDa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_q1aMoTa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_q1SQ0Da0EemNRqQIo_cpGw" name="base_InformationFlow" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//InformationFlow"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_qw3D1Da0EemNRqQIo_cpGw" name="Specialization" eSuperTypes="_qw11uDa0EemNRqQIo_cpGw">
        <eAnnotations xmi:id="_qw3D1Ta0EemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_qw0npja0EemNRqQIo_cpGw"/>
        <eOperations xmi:id="_q1mZ5Da0EemNRqQIo_cpGw" name="CheckEndTypes">
          <eAnnotations xmi:id="_q1noAja0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_q1oPEDa0EemNRqQIo_cpGw" key="body" value="let source = self.base_Generalization.endType->selectByKind(UML::Class), target = self.base_Generalization.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_q1nA8Ta0EemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_q1nA8ja0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q1nA8za0EemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_q1nA9ja0EemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_q1nA9za0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q1nA-Da0EemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_q1nA-Ta0EemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_q1noADa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_q1noATa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_q1oPEza0EemNRqQIo_cpGw" name="CheckNavigability">
          <eAnnotations xmi:id="_q1pdMTa0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_q1pdMja0EemNRqQIo_cpGw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_q1oPFTa0EemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_q1oPFja0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q1oPFza0EemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_q1o2ITa0EemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_q1o2Ija0EemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_q1o2Iza0EemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_q1o2JDa0EemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_q1o2JTa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_q1pdMDa0EemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_q1g6UDa0EemNRqQIo_cpGw" name="base_Generalization" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Generalization"/>
        </eStructuralFeatures>
      </eClassifiers>
    </contents>
  </eAnnotations>
  <elementImport xmi:id="_qxDRETa0EemNRqQIo_cpGw" alias="Class">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
  </elementImport>
  <elementImport xmi:id="_qxPeUTa0EemNRqQIo_cpGw" alias="Node">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Node"/>
  </elementImport>
  <elementImport xmi:id="_qxc5sDa0EemNRqQIo_cpGw" alias="Device">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Device"/>
  </elementImport>
  <elementImport xmi:id="_qxpuATa0EemNRqQIo_cpGw" alias="CommunicationPath">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#CommunicationPath"/>
  </elementImport>
  <elementImport xmi:id="_qx_sQTa0EemNRqQIo_cpGw" alias="Interface">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Interface"/>
  </elementImport>
  <elementImport xmi:id="_qyLScTa0EemNRqQIo_cpGw" alias="ExecutionEnvironment">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#ExecutionEnvironment"/>
  </elementImport>
  <elementImport xmi:id="_qyeNYTa0EemNRqQIo_cpGw" alias="Collaboration">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Collaboration"/>
  </elementImport>
  <elementImport xmi:id="_qyrowTa0EemNRqQIo_cpGw" alias="Artifact">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
  </elementImport>
  <elementImport xmi:id="_qzCOETa0EemNRqQIo_cpGw" alias="OpaqueBehavior">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#OpaqueBehavior"/>
  </elementImport>
  <elementImport xmi:id="_qzZacTa0EemNRqQIo_cpGw" alias="Association">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
  </elementImport>
  <elementImport xmi:id="_qzp5Iza0EemNRqQIo_cpGw" alias="Usage">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
  </elementImport>
  <elementImport xmi:id="_q0GlETa0EemNRqQIo_cpGw" alias="Realization">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Realization"/>
  </elementImport>
  <elementImport xmi:id="_q0Xq0Ta0EemNRqQIo_cpGw" alias="Dependency">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Dependency"/>
  </elementImport>
  <elementImport xmi:id="_q0-u0Ta0EemNRqQIo_cpGw" alias="InformationFlow">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#InformationFlow"/>
  </elementImport>
  <elementImport xmi:id="_q1bawTa0EemNRqQIo_cpGw" alias="Generalization">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Generalization"/>
  </elementImport>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0nkDa0EemNRqQIo_cpGw" name="NodeElement">
    <ownedAttribute xmi:id="_qxDREDa0EemNRqQIo_cpGw" name="base_Class" association="_qxLz8Da0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0nkTa0EemNRqQIo_cpGw" name="Node">
    <generalization xmi:id="_qw3q4Da0EemNRqQIo_cpGw" general="_qw0nkDa0EemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_qxPeUDa0EemNRqQIo_cpGw" name="base_Node" association="_qxYoQDa0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Node"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0nkja0EemNRqQIo_cpGw" name="Device">
    <generalization xmi:id="_qw3q4ja0EemNRqQIo_cpGw" general="_qw0nkDa0EemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_qxcSoDa0EemNRqQIo_cpGw" name="base_Device" association="_qxlckDa0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Device"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0nkza0EemNRqQIo_cpGw" name="Network">
    <generalization xmi:id="_qw4R8Ta0EemNRqQIo_cpGw" general="_qw0nkDa0EemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_qxpuADa0EemNRqQIo_cpGw" name="base_CommunicationPath" association="_qxy38Da0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#CommunicationPath"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0nlDa0EemNRqQIo_cpGw" name="CommunicationPath">
    <generalization xmi:id="_qw4R8za0EemNRqQIo_cpGw" general="_qw0nkDa0EemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_qx2iUDa0EemNRqQIo_cpGw" name="base_CommunicationPath" association="_qx8B4Da0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#CommunicationPath"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0nlTa0EemNRqQIo_cpGw" name="InfrastructureInterface">
    <generalization xmi:id="_qw45ATa0EemNRqQIo_cpGw" general="_qw0nkDa0EemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_qx_sQDa0EemNRqQIo_cpGw" name="base_Interface" association="_qyHoEDa0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Interface"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0nlja0EemNRqQIo_cpGw" name="SystemSoftware">
    <generalization xmi:id="_qw5gEDa0EemNRqQIo_cpGw" general="_qw0nkDa0EemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_qyLScDa0EemNRqQIo_cpGw" name="base_ExecutionEnvironment" association="_qyT1UDa0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#ExecutionEnvironment"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0nlza0EemNRqQIo_cpGw" name="InfrastructureFunction">
    <generalization xmi:id="_qw5gEja0EemNRqQIo_cpGw" general="_qw0nkDa0EemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_qyXfsDa0EemNRqQIo_cpGw" name="base_Class" association="_qybKEDa0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0nmDa0EemNRqQIo_cpGw" name="InfrastructureService">
    <generalization xmi:id="_qw6HIDa0EemNRqQIo_cpGw" general="_qw0nkDa0EemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_qyeNYDa0EemNRqQIo_cpGw" name="base_Collaboration" association="_qynXUDa0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Collaboration"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0nmTa0EemNRqQIo_cpGw" name="Artifact">
    <generalization xmi:id="_qw6HIja0EemNRqQIo_cpGw" general="_qw0nkDa0EemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_qyrowDa0EemNRqQIo_cpGw" name="base_Artifact" association="_qy1ZwDa0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0nmja0EemNRqQIo_cpGw" name="Grouping">
    <generalization xmi:id="_qw6uMDa0EemNRqQIo_cpGw" general="_qw0nkDa0EemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_qy5rMDa0EemNRqQIo_cpGw" name="base_Class" association="_qy98oDa0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0nmza0EemNRqQIo_cpGw" name="Junction">
    <generalization xmi:id="_qw6uMja0EemNRqQIo_cpGw" general="_qw0nnDa0EemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_qzCOEDa0EemNRqQIo_cpGw" name="base_OpaqueBehavior" association="_qzLYADa0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#OpaqueBehavior"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0nnDa0EemNRqQIo_cpGw" name="Relationship">
    <ownedAttribute xmi:id="_qw7VQTa0EemNRqQIo_cpGw" name="source" type="_qw0nkDa0EemNRqQIo_cpGw" association="_qw78UTa0EemNRqQIo_cpGw">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qw7VQja0EemNRqQIo_cpGw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qw78UDa0EemNRqQIo_cpGw" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_qw8jYDa0EemNRqQIo_cpGw" name="target" type="_qw0nkDa0EemNRqQIo_cpGw" association="_qw8jYza0EemNRqQIo_cpGw">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qw8jYTa0EemNRqQIo_cpGw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qw8jYja0EemNRqQIo_cpGw" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_qzPpcDa0EemNRqQIo_cpGw" name="base_Class" association="_qzVwEDa0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0nnTa0EemNRqQIo_cpGw" name="Association">
    <ownedRule xmi:id="_qzlAoja0EemNRqQIo_cpGw" name="CheckEndTypes" constrainedElement="_qw0nnTa0EemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_qzlnsDa0EemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_qzoD8ja0EemNRqQIo_cpGw" name="CheckNavigability" constrainedElement="_qw0nnTa0EemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_qzoD8za0EemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_qw9KcDa0EemNRqQIo_cpGw" general="_qw0nnDa0EemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_qzZacDa0EemNRqQIo_cpGw" name="base_Association" association="_qzgIITa0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0nnja0EemNRqQIo_cpGw" name="Access">
    <ownedRule xmi:id="_qz2GYja0EemNRqQIo_cpGw" name="CheckEndTypes" constrainedElement="_qw0nnja0EemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_qz2GYza0EemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let source = self.base_Usage.endType->selectByKind(UML::Class), target = self.base_Usage.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_qz37kja0EemNRqQIo_cpGw" name="CheckNavigability" constrainedElement="_qw0nnja0EemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_qz37kza0EemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_qw9xgDa0EemNRqQIo_cpGw" general="_qw0nnDa0EemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_qzp5Ija0EemNRqQIo_cpGw" name="base_Usage" association="_qzwm0Ta0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0nnza0EemNRqQIo_cpGw" name="UsedBy">
    <ownedRule xmi:id="_q0C6sja0EemNRqQIo_cpGw" name="CheckEndTypes" constrainedElement="_qw0nnza0EemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_q0C6sza0EemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let source = self.base_Usage.endType->selectByKind(UML::Class), target = self.base_Usage.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_q0Ev4ja0EemNRqQIo_cpGw" name="CheckNavigability" constrainedElement="_qw0nnza0EemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_q0Ev4za0EemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_qw-YkDa0EemNRqQIo_cpGw" general="_qw0nnDa0EemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_qz5wwDa0EemNRqQIo_cpGw" name="base_Usage" association="_qz9bITa0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0noDa0EemNRqQIo_cpGw" name="Realization">
    <ownedRule xmi:id="_q0TZYja0EemNRqQIo_cpGw" name="CheckEndTypes" constrainedElement="_qw0noDa0EemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_q0TZYza0EemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let source = self.base_Realization.endType->selectByKind(UML::Class), target = self.base_Realization.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_q0VOkza0EemNRqQIo_cpGw" name="CheckNavigability" constrainedElement="_qw0noDa0EemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_q0VOlDa0EemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_qw-_oDa0EemNRqQIo_cpGw" general="_qw0nnDa0EemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_q0GlEDa0EemNRqQIo_cpGw" name="base_Realization" association="_q0NSwTa0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Realization"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0noTa0EemNRqQIo_cpGw" name="Assignment">
    <ownedRule xmi:id="_q0ip8ja0EemNRqQIo_cpGw" name="CheckEndTypes" constrainedElement="_qw0noTa0EemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_q0ip8za0EemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let source = self.base_Dependency.endType->selectByKind(UML::Class), target = self.base_Dependency.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_q0kfIza0EemNRqQIo_cpGw" name="CheckNavigability" constrainedElement="_qw0noTa0EemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_q0kfJDa0EemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_qw_msDa0EemNRqQIo_cpGw" general="_qw0nnDa0EemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_q0Xq0Da0EemNRqQIo_cpGw" name="base_Dependency" association="_q0dxcTa0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Dependency"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0noja0EemNRqQIo_cpGw" name="Aggregation">
    <ownedRule xmi:id="_q0u3Mja0EemNRqQIo_cpGw" name="CheckEndTypes" constrainedElement="_qw0noja0EemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_q0u3Mza0EemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_q0wsYja0EemNRqQIo_cpGw" name="CheckNavigability" constrainedElement="_qw0noja0EemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_q0wsYza0EemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_qxANwDa0EemNRqQIo_cpGw" general="_qw0nnDa0EemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_q0m7YDa0EemNRqQIo_cpGw" name="base_Association" association="_q0p-sTa0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0noza0EemNRqQIo_cpGw" name="Composition">
    <ownedRule xmi:id="_q07Ecja0EemNRqQIo_cpGw" name="CheckEndTypes" constrainedElement="_qw0noza0EemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_q07Ecza0EemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_q085oja0EemNRqQIo_cpGw" name="CheckNavigability" constrainedElement="_qw0noza0EemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_q085oza0EemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_qxA00Da0EemNRqQIo_cpGw" general="_qw0nnDa0EemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_q0yhkDa0EemNRqQIo_cpGw" name="base_Association" association="_q01k4Ta0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0npDa0EemNRqQIo_cpGw" name="Flow">
    <ownedRule xmi:id="_q1LjIDa0EemNRqQIo_cpGw" name="CheckEndTypes" constrainedElement="_qw0npDa0EemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_q1LjITa0EemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let source = self.base_InformationFlow.endType->selectByKind(UML::Class), target = self.base_InformationFlow.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_q1MxQza0EemNRqQIo_cpGw" name="CheckNavigability" constrainedElement="_qw0npDa0EemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_q1MxRDa0EemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_qxBb4Da0EemNRqQIo_cpGw" general="_qw0nnDa0EemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_q0-u0Da0EemNRqQIo_cpGw" name="base_InformationFlow" association="_q1GDkTa0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#InformationFlow"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0npTa0EemNRqQIo_cpGw" name="Triggering">
    <ownedRule xmi:id="_q1XJUja0EemNRqQIo_cpGw" name="CheckEndTypes" constrainedElement="_qw0npTa0EemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_q1XJUza0EemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let source = self.base_InformationFlow.endType->selectByKind(UML::Class), target = self.base_InformationFlow.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_q1Y-gja0EemNRqQIo_cpGw" name="CheckNavigability" constrainedElement="_qw0npTa0EemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_q1Y-gza0EemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_qxCC8Da0EemNRqQIo_cpGw" general="_qw0nnDa0EemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_q1Omcja0EemNRqQIo_cpGw" name="base_InformationFlow" association="_q1SQ0Ta0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#InformationFlow"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_qw0npja0EemNRqQIo_cpGw" name="Specialization">
    <ownedRule xmi:id="_q1mZ4ja0EemNRqQIo_cpGw" name="CheckEndTypes" constrainedElement="_qw0npja0EemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_q1mZ4za0EemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let source = self.base_Generalization.endType->selectByKind(UML::Class), target = self.base_Generalization.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_q1oPETa0EemNRqQIo_cpGw" name="CheckNavigability" constrainedElement="_qw0npja0EemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_q1oPEja0EemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_qxCqADa0EemNRqQIo_cpGw" general="_qw0nnDa0EemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_q1bawDa0EemNRqQIo_cpGw" name="base_Generalization" association="_q1g6UTa0EemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Generalization"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_qw78UTa0EemNRqQIo_cpGw" memberEnd="_qw78Uja0EemNRqQIo_cpGw _qw7VQTa0EemNRqQIo_cpGw">
    <eAnnotations xmi:id="_qw78VTa0EemNRqQIo_cpGw" source="org.eclipse.papyrus">
      <details xmi:id="_qw78Vja0EemNRqQIo_cpGw" key="nature" value="UML_Nature"/>
    </eAnnotations>
    <ownedEnd xmi:id="_qw78Uja0EemNRqQIo_cpGw" name="RelationshipEnd" type="_qw0nnDa0EemNRqQIo_cpGw" association="_qw78UTa0EemNRqQIo_cpGw">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qw78Uza0EemNRqQIo_cpGw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qw78VDa0EemNRqQIo_cpGw" value="1"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_qw8jYza0EemNRqQIo_cpGw" memberEnd="_qw8jZDa0EemNRqQIo_cpGw _qw8jYDa0EemNRqQIo_cpGw">
    <eAnnotations xmi:id="_qw8jZza0EemNRqQIo_cpGw" source="org.eclipse.papyrus">
      <details xmi:id="_qw8jaDa0EemNRqQIo_cpGw" key="nature" value="UML_Nature"/>
    </eAnnotations>
    <ownedEnd xmi:id="_qw8jZDa0EemNRqQIo_cpGw" name="RelationshipEnd" type="_qw0nnDa0EemNRqQIo_cpGw" association="_qw8jYza0EemNRqQIo_cpGw">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_qw8jZTa0EemNRqQIo_cpGw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qw8jZja0EemNRqQIo_cpGw" value="1"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_qxLz8Da0EemNRqQIo_cpGw" name="E_NodeElement_Class1" memberEnd="_qxMbADa0EemNRqQIo_cpGw _qxDREDa0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qxMbADa0EemNRqQIo_cpGw" name="extension_NodeElement" type="_qw0nkDa0EemNRqQIo_cpGw" aggregation="composite" association="_qxLz8Da0EemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_qxYoQDa0EemNRqQIo_cpGw" name="E_Node_Node1" memberEnd="_qxYoQTa0EemNRqQIo_cpGw _qxPeUDa0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qxYoQTa0EemNRqQIo_cpGw" name="extension_Node" type="_qw0nkTa0EemNRqQIo_cpGw" aggregation="composite" association="_qxYoQDa0EemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_qxlckDa0EemNRqQIo_cpGw" name="E_Device_Device1" memberEnd="_qxlckTa0EemNRqQIo_cpGw _qxcSoDa0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qxlckTa0EemNRqQIo_cpGw" name="extension_Device" type="_qw0nkja0EemNRqQIo_cpGw" aggregation="composite" association="_qxlckDa0EemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_qxy38Da0EemNRqQIo_cpGw" name="E_Network_CommunicationPath1" memberEnd="_qxy38Ta0EemNRqQIo_cpGw _qxpuADa0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qxy38Ta0EemNRqQIo_cpGw" name="extension_Network" type="_qw0nkza0EemNRqQIo_cpGw" aggregation="composite" association="_qxy38Da0EemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_qx8B4Da0EemNRqQIo_cpGw" name="E_CommunicationPath_CommunicationPath1" memberEnd="_qx8B4Ta0EemNRqQIo_cpGw _qx2iUDa0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qx8B4Ta0EemNRqQIo_cpGw" name="extension_CommunicationPath" type="_qw0nlDa0EemNRqQIo_cpGw" aggregation="composite" association="_qx8B4Da0EemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_qyHoEDa0EemNRqQIo_cpGw" name="E_InfrastructureInterface_Interface1" memberEnd="_qyIPIDa0EemNRqQIo_cpGw _qx_sQDa0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qyIPIDa0EemNRqQIo_cpGw" name="extension_InfrastructureInterface" type="_qw0nlTa0EemNRqQIo_cpGw" aggregation="composite" association="_qyHoEDa0EemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_qyT1UDa0EemNRqQIo_cpGw" name="E_SystemSoftware_ExecutionEnvironment1" memberEnd="_qyT1UTa0EemNRqQIo_cpGw _qyLScDa0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qyT1UTa0EemNRqQIo_cpGw" name="extension_SystemSoftware" type="_qw0nlja0EemNRqQIo_cpGw" aggregation="composite" association="_qyT1UDa0EemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_qybKEDa0EemNRqQIo_cpGw" name="E_InfrastructureFunction_Class1" memberEnd="_qybKETa0EemNRqQIo_cpGw _qyXfsDa0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qybKETa0EemNRqQIo_cpGw" name="extension_InfrastructureFunction" type="_qw0nlza0EemNRqQIo_cpGw" aggregation="composite" association="_qybKEDa0EemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_qynXUDa0EemNRqQIo_cpGw" name="E_InfrastructureService_Collaboration1" memberEnd="_qynXUTa0EemNRqQIo_cpGw _qyeNYDa0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qynXUTa0EemNRqQIo_cpGw" name="extension_InfrastructureService" type="_qw0nmDa0EemNRqQIo_cpGw" aggregation="composite" association="_qynXUDa0EemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_qy1ZwDa0EemNRqQIo_cpGw" name="E_Artifact_Artifact1" memberEnd="_qy1ZwTa0EemNRqQIo_cpGw _qyrowDa0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qy1ZwTa0EemNRqQIo_cpGw" name="extension_Artifact" type="_qw0nmTa0EemNRqQIo_cpGw" aggregation="composite" association="_qy1ZwDa0EemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_qy98oDa0EemNRqQIo_cpGw" name="E_Grouping_Class1" memberEnd="_qy98oTa0EemNRqQIo_cpGw _qy5rMDa0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qy98oTa0EemNRqQIo_cpGw" name="extension_Grouping" type="_qw0nmja0EemNRqQIo_cpGw" aggregation="composite" association="_qy98oDa0EemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_qzLYADa0EemNRqQIo_cpGw" name="E_Junction_OpaqueBehavior1" memberEnd="_qzLYATa0EemNRqQIo_cpGw _qzCOEDa0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qzLYATa0EemNRqQIo_cpGw" name="extension_Junction" type="_qw0nmza0EemNRqQIo_cpGw" aggregation="composite" association="_qzLYADa0EemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_qzVwEDa0EemNRqQIo_cpGw" name="E_Relationship_Class1" memberEnd="_qzVwETa0EemNRqQIo_cpGw _qzPpcDa0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qzVwETa0EemNRqQIo_cpGw" name="extension_Relationship" type="_qw0nnDa0EemNRqQIo_cpGw" aggregation="composite" association="_qzVwEDa0EemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_qzgIITa0EemNRqQIo_cpGw" name="E_Association_Association1" memberEnd="_qzgIIja0EemNRqQIo_cpGw _qzZacDa0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qzgIIja0EemNRqQIo_cpGw" name="extension_Association" type="_qw0nnTa0EemNRqQIo_cpGw" aggregation="composite" association="_qzgIITa0EemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_qzwm0Ta0EemNRqQIo_cpGw" name="E_Access_Usage1" memberEnd="_qzwm0ja0EemNRqQIo_cpGw _qzp5Ija0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qzwm0ja0EemNRqQIo_cpGw" name="extension_Access" type="_qw0nnja0EemNRqQIo_cpGw" aggregation="composite" association="_qzwm0Ta0EemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_qz9bITa0EemNRqQIo_cpGw" name="E_UsedBy_Usage1" memberEnd="_qz9bIja0EemNRqQIo_cpGw _qz5wwDa0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_qz9bIja0EemNRqQIo_cpGw" name="extension_UsedBy" type="_qw0nnza0EemNRqQIo_cpGw" aggregation="composite" association="_qz9bITa0EemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_q0NSwTa0EemNRqQIo_cpGw" name="E_Realization_Realization1" memberEnd="_q0NSwja0EemNRqQIo_cpGw _q0GlEDa0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_q0NSwja0EemNRqQIo_cpGw" name="extension_Realization" type="_qw0noDa0EemNRqQIo_cpGw" aggregation="composite" association="_q0NSwTa0EemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_q0dxcTa0EemNRqQIo_cpGw" name="E_Assignment_Dependency1" memberEnd="_q0dxcja0EemNRqQIo_cpGw _q0Xq0Da0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_q0dxcja0EemNRqQIo_cpGw" name="extension_Assignment" type="_qw0noTa0EemNRqQIo_cpGw" aggregation="composite" association="_q0dxcTa0EemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_q0p-sTa0EemNRqQIo_cpGw" name="E_Aggregation_Association1" memberEnd="_q0p-sja0EemNRqQIo_cpGw _q0m7YDa0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_q0p-sja0EemNRqQIo_cpGw" name="extension_Aggregation" type="_qw0noja0EemNRqQIo_cpGw" aggregation="composite" association="_q0p-sTa0EemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_q01k4Ta0EemNRqQIo_cpGw" name="E_Composition_Association1" memberEnd="_q02L8Da0EemNRqQIo_cpGw _q0yhkDa0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_q02L8Da0EemNRqQIo_cpGw" name="extension_Composition" type="_qw0noza0EemNRqQIo_cpGw" aggregation="composite" association="_q01k4Ta0EemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_q1GDkTa0EemNRqQIo_cpGw" name="E_Flow_InformationFlow1" memberEnd="_q1GDkja0EemNRqQIo_cpGw _q0-u0Da0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_q1GDkja0EemNRqQIo_cpGw" name="extension_Flow" type="_qw0npDa0EemNRqQIo_cpGw" aggregation="composite" association="_q1GDkTa0EemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_q1SQ0Ta0EemNRqQIo_cpGw" name="E_Triggering_InformationFlow1" memberEnd="_q1SQ0ja0EemNRqQIo_cpGw _q1Omcja0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_q1SQ0ja0EemNRqQIo_cpGw" name="extension_Triggering" type="_qw0npTa0EemNRqQIo_cpGw" aggregation="composite" association="_q1SQ0Ta0EemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_q1g6UTa0EemNRqQIo_cpGw" name="E_Specialization_Generalization1" memberEnd="_q1g6Uja0EemNRqQIo_cpGw _q1bawDa0EemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_q1g6Uja0EemNRqQIo_cpGw" name="extension_Specialization" type="_qw0npja0EemNRqQIo_cpGw" aggregation="composite" association="_q1g6UTa0EemNRqQIo_cpGw"/>
  </packagedElement>
</uml:Profile>
