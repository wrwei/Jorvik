<?xml version="1.0" encoding="UTF-8"?>
<uml:Profile xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_LBGDEDttEemVvrziPwI6Kw" name="ArchimateTechnology" URI="archimate-technology" metaclassReference="_LDMU0TttEemVvrziPwI6Kw _LDhE8TttEemVvrziPwI6Kw _LD1OATttEemVvrziPwI6Kw _LELMQTttEemVvrziPwI6Kw _LEsJoTttEemVvrziPwI6Kw _LFA5wTttEemVvrziPwI6Kw _LFeMwTttEemVvrziPwI6Kw _LFyV0TttEemVvrziPwI6Kw _LGYLsTttEemVvrziPwI6Kw _LHHLgTttEemVvrziPwI6Kw _LHqlIDttEemVvrziPwI6Kw _LIedcTttEemVvrziPwI6Kw _LI2Q4DttEemVvrziPwI6Kw _LJ1vYDttEemVvrziPwI6Kw _LKi6ATttEemVvrziPwI6Kw">
  <eAnnotations xmi:id="_LBGDEjttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML">
    <contents xmi:type="ecore:EPackage" xmi:id="_LBGDETttEemVvrziPwI6Kw" name="ArchimateTechnology" nsURI="http:///schemas/ArchimateTechnology/something/1" nsPrefix="ArchimateTechnology">
      <eAnnotations xmi:id="_LBGDEzttEemVvrziPwI6Kw" source="PapyrusVersion">
        <details xmi:id="_LBGDFDttEemVvrziPwI6Kw" key="Version" value="0.0.1"/>
        <details xmi:id="_LBGDFTttEemVvrziPwI6Kw" key="Comment" value=""/>
        <details xmi:id="_LBGDFjttEemVvrziPwI6Kw" key="Copyright" value=""/>
        <details xmi:id="_LBGDFzttEemVvrziPwI6Kw" key="Date" value="2017-02-01"/>
        <details xmi:id="_LBGDGDttEemVvrziPwI6Kw" key="Author" value=""/>
      </eAnnotations>
      <eAnnotations xmi:id="_LHe-8DttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_LHe-8TttEemVvrziPwI6Kw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_LICYkDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_LICYkTttEemVvrziPwI6Kw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_LIWhoDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_LIWhoTttEemVvrziPwI6Kw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_LIu8IDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_LIu8ITttEemVvrziPwI6Kw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_LJHWoDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_LJH9sDttEemVvrziPwI6Kw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_LJa4oDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_LJa4oTttEemVvrziPwI6Kw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_LJtMgDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_LJtzkDttEemVvrziPwI6Kw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_LKG1IDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_LKG1ITttEemVvrziPwI6Kw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_LKaXIDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_LKa-MDttEemVvrziPwI6Kw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_LKzYsDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_LKz_wDttEemVvrziPwI6Kw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBGqNzttEemVvrziPwI6Kw" name="NodeElement">
        <eAnnotations xmi:id="_LBGqODttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqIDttEemVvrziPwI6Kw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LDXT8DttEemVvrziPwI6Kw" name="base_Class" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Class"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBHRMDttEemVvrziPwI6Kw" name="Node" eSuperTypes="_LBGqNzttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_LBHRMTttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqITttEemVvrziPwI6Kw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LDrdADttEemVvrziPwI6Kw" name="base_Node" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Node"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBHRMjttEemVvrziPwI6Kw" name="Device" eSuperTypes="_LBGqNzttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_LBHRMzttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqIjttEemVvrziPwI6Kw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LEA0MDttEemVvrziPwI6Kw" name="base_Device" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Device"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBHRNDttEemVvrziPwI6Kw" name="Network" eSuperTypes="_LBGqNzttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_LBHRNTttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqIzttEemVvrziPwI6Kw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LEVkUDttEemVvrziPwI6Kw" name="base_CommunicationPath" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//CommunicationPath"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBH4QDttEemVvrziPwI6Kw" name="CommunicationPath" eSuperTypes="_LBGqNzttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_LBH4QTttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqJDttEemVvrziPwI6Kw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LEjmwDttEemVvrziPwI6Kw" name="base_CommunicationPath" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//CommunicationPath"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBH4QjttEemVvrziPwI6Kw" name="InfrastructureInterface" eSuperTypes="_LBGqNzttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_LBH4QzttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqJTttEemVvrziPwI6Kw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LE3v0DttEemVvrziPwI6Kw" name="base_Interface" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Interface"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBH4RDttEemVvrziPwI6Kw" name="SystemSoftware" eSuperTypes="_LBGqNzttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_LBH4RTttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqJjttEemVvrziPwI6Kw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LFKDsDttEemVvrziPwI6Kw" name="base_ExecutionEnvironment" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//ExecutionEnvironment"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBIfUDttEemVvrziPwI6Kw" name="InfrastructureFunction" eSuperTypes="_LBGqNzttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_LBIfUTttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqJzttEemVvrziPwI6Kw"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBIfUjttEemVvrziPwI6Kw" name="InfrastructureService" eSuperTypes="_LBGqNzttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_LBIfUzttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqKDttEemVvrziPwI6Kw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LFnWsDttEemVvrziPwI6Kw" name="base_Collaboration" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Collaboration"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBIfVDttEemVvrziPwI6Kw" name="Artifact" eSuperTypes="_LBGqNzttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_LBIfVTttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqKTttEemVvrziPwI6Kw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LF9U8DttEemVvrziPwI6Kw" name="base_Artifact" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Artifact"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBIfVjttEemVvrziPwI6Kw" name="Grouping" eSuperTypes="_LBGqNzttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_LBIfVzttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqKjttEemVvrziPwI6Kw"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBIfWDttEemVvrziPwI6Kw" name="Junction" eSuperTypes="_LBJGYTttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_LBJGYDttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqKzttEemVvrziPwI6Kw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LGlAADttEemVvrziPwI6Kw" name="base_OpaqueBehavior" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//OpaqueBehavior"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBJGYTttEemVvrziPwI6Kw" name="Relationship">
        <eAnnotations xmi:id="_LBJGYjttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqLDttEemVvrziPwI6Kw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LC9EQDttEemVvrziPwI6Kw" name="source" lowerBound="1" eType="_LBGqNzttEemVvrziPwI6Kw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LC9rUjttEemVvrziPwI6Kw" name="target" lowerBound="1" eType="_LBGqNzttEemVvrziPwI6Kw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LG6-QDttEemVvrziPwI6Kw" name="base_Class" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Class"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBJGYzttEemVvrziPwI6Kw" name="Association" eSuperTypes="_LBJGYTttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_LBJGZDttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqLTttEemVvrziPwI6Kw"/>
        <eOperations xmi:id="_LHfmADttEemVvrziPwI6Kw" name="CheckEndTypes">
          <eAnnotations xmi:id="_LHjQYDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_LHjQYTttEemVvrziPwI6Kw" key="body" value="let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_LHgNETttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_LHgNEjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LHgNEzttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_LHg0ITttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_LHg0IjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LHg0IzttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_LHhbMDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_LHiCQDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_LHipUDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_LHkegDttEemVvrziPwI6Kw" name="CheckNavigability">
          <eAnnotations xmi:id="_LHov8DttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_LHov8TttEemVvrziPwI6Kw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_LHlFkDttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_LHlFkTttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LHlFkjttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_LHlsoTttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_LHlsojttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LHlsozttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_LHlspDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_LHm6wDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_LHnh0DttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LHUm4DttEemVvrziPwI6Kw" name="base_Association" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Association"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBJGZTttEemVvrziPwI6Kw" name="Access" eSuperTypes="_LBJGYTttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_LBJGZjttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqLjttEemVvrziPwI6Kw"/>
        <eOperations xmi:id="_LIC_oDttEemVvrziPwI6Kw" name="CheckEndTypes">
          <eAnnotations xmi:id="_LIFb4TttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_LIFb4jttEemVvrziPwI6Kw" key="body" value="let source = self.base_Usage.endType->selectByKind(UML::Class), target = self.base_Usage.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_LIDmsTttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_LIDmsjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LIDmszttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_LIENwTttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_LIENwjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LIENwzttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_LIENxDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_LIE00DttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_LIFb4DttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_LIGC8jttEemVvrziPwI6Kw" name="CheckNavigability">
          <eAnnotations xmi:id="_LIIfMDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_LIIfMTttEemVvrziPwI6Kw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_LIGqATttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_LIGqAjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LIGqAzttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_LIHREDttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_LIHRETttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LIHREjttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_LIHREzttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_LIH4IDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_LIH4ITttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LH51sDttEemVvrziPwI6Kw" name="base_Usage" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Usage"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBJtcDttEemVvrziPwI6Kw" name="UsedBy" eSuperTypes="_LBJGYTttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_LBJtcTttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqLzttEemVvrziPwI6Kw"/>
        <eOperations xmi:id="_LIXvwDttEemVvrziPwI6Kw" name="CheckEndTypes">
          <eAnnotations xmi:id="_LIazEDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_LIazETttEemVvrziPwI6Kw" key="body" value="let source = self.base_Usage.endType->selectByKind(UML::Class), target = self.base_Usage.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_LIYW0TttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_LIYW0jttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LIYW0zttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_LIY94TttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_LIY94jttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LIY94zttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_LIZk8DttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_LIaMADttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_LIaMATttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_LIbaIDttEemVvrziPwI6Kw" name="CheckNavigability">
          <eAnnotations xmi:id="_LIdPUDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_LIdPUTttEemVvrziPwI6Kw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_LIbaIjttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_LIbaIzttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LIbaJDttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_LIcBMTttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_LIcBMjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LIcBMzttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_LIcBNDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_LIcBNTttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_LIcoQDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LIOl0DttEemVvrziPwI6Kw" name="base_Usage" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Usage"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBJtcjttEemVvrziPwI6Kw" name="Realization" eSuperTypes="_LBJGYTttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_LBJtczttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqMDttEemVvrziPwI6Kw"/>
        <eOperations xmi:id="_LIwKQDttEemVvrziPwI6Kw" name="CheckEndTypes">
          <eAnnotations xmi:id="_LIx_cDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_LIx_cTttEemVvrziPwI6Kw" key="body" value="let source = self.base_Realization.endType->selectByKind(UML::Class), target = self.base_Realization.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_LIwKQjttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_LIwKQzttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LIwKRDttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_LIwxUTttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_LIwxUjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LIwxUzttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_LIwxVDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_LIxYYDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_LIxYYTttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_LIymgDttEemVvrziPwI6Kw" name="CheckNavigability">
          <eAnnotations xmi:id="_LI1CwDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_LI1CwTttEemVvrziPwI6Kw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_LIymgjttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_LIymgzttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LIymhDttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_LIzNkTttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_LIzNkjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LIzNkzttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_LIzNlDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_LIz0oDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_LI0bsDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LInAUDttEemVvrziPwI6Kw" name="base_Realization" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Realization"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBJtdDttEemVvrziPwI6Kw" name="Assignment" eSuperTypes="_LBJGYTttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_LBJtdTttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqMTttEemVvrziPwI6Kw"/>
        <eOperations xmi:id="_LJIkwDttEemVvrziPwI6Kw" name="CheckEndTypes">
          <eAnnotations xmi:id="_LJLBADttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_LJLBATttEemVvrziPwI6Kw" key="body" value="let source = self.base_Dependency.endType->selectByKind(UML::Class), target = self.base_Dependency.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_LJIkwjttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_LJIkwzttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LJIkxDttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_LJJL0TttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_LJJL0jttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LJJL0zttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_LJJL1DttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_LJJy4DttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_LJKZ8DttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_LJLoEDttEemVvrziPwI6Kw" name="CheckNavigability">
          <eAnnotations xmi:id="_LJNdQDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_LJNdQTttEemVvrziPwI6Kw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_LJLoEjttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_LJLoEzttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LJLoFDttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_LJMPITttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_LJMPIjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LJMPIzttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_LJMPJDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_LJM2MDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_LJM2MTttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LI_a0DttEemVvrziPwI6Kw" name="base_Dependency" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Dependency"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBKUgDttEemVvrziPwI6Kw" name="Aggregation" eSuperTypes="_LBJGYTttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_LBKUgTttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqMjttEemVvrziPwI6Kw"/>
        <eOperations xmi:id="_LJbfsDttEemVvrziPwI6Kw" name="CheckEndTypes">
          <eAnnotations xmi:id="_LJd78DttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_LJd78TttEemVvrziPwI6Kw" key="body" value="let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_LJcGwDttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_LJcGwTttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LJcGwjttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_LJcGxTttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_LJcGxjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LJcGxzttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_LJct0DttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_LJct0TttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_LJdU4DttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_LJejADttEemVvrziPwI6Kw" name="CheckNavigability">
          <eAnnotations xmi:id="_LJgYMDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_LJgYMTttEemVvrziPwI6Kw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_LJejAjttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_LJejAzttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LJejBDttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_LJfKETttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_LJfKEjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LJfKEzttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_LJfKFDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_LJfxIDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_LJfxITttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LJTj4DttEemVvrziPwI6Kw" name="base_Association" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Association"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBKUgjttEemVvrziPwI6Kw" name="Composition" eSuperTypes="_LBJGYTttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_LBKUgzttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqMzttEemVvrziPwI6Kw"/>
        <eOperations xmi:id="_LJtzkzttEemVvrziPwI6Kw" name="CheckEndTypes">
          <eAnnotations xmi:id="_LJw24DttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_LJw24TttEemVvrziPwI6Kw" key="body" value="let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_LJuaoTttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_LJuaojttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LJuaozttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_LJvBsTttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_LJvBsjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LJvBszttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_LJvBtDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_LJvowDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_LJwP0DttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_LJxd8DttEemVvrziPwI6Kw" name="CheckNavigability">
          <eAnnotations xmi:id="_LJ0hQDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_LJ0hQTttEemVvrziPwI6Kw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_LJyFATttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_LJyFAjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LJyFAzttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_LJyFBjttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_LJyFBzttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LJysEDttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_LJysETttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_LJysEjttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_LJzTIDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LJl3wDttEemVvrziPwI6Kw" name="base_Association" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Association"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBKUhDttEemVvrziPwI6Kw" name="Flow" eSuperTypes="_LBJGYTttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_LBKUhTttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqNDttEemVvrziPwI6Kw"/>
        <eOperations xmi:id="_LKHcMDttEemVvrziPwI6Kw" name="CheckEndTypes">
          <eAnnotations xmi:id="_LKJRYTttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_LKJRYjttEemVvrziPwI6Kw" key="body" value="let source = self.base_InformationFlow.endType->selectByKind(UML::Class), target = self.base_InformationFlow.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_LKHcMjttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_LKHcMzttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LKHcNDttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_LKIDQjttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_LKIDQzttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LKIDRDttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_LKIDRTttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_LKIqUDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_LKJRYDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_LKJ4cTttEemVvrziPwI6Kw" name="CheckNavigability">
          <eAnnotations xmi:id="_LKMUsDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_LKMUsTttEemVvrziPwI6Kw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_LKKfgTttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_LKKfgjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LKKfgzttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_LKKfhjttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_LKKfhzttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LKLGkDttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_LKLGkTttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_LKLGkjttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_LKLtoDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LKAHcDttEemVvrziPwI6Kw" name="base_InformationFlow" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//InformationFlow"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBKUhjttEemVvrziPwI6Kw" name="Triggering" eSuperTypes="_LBJGYTttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_LBKUhzttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqNTttEemVvrziPwI6Kw"/>
        <eOperations xmi:id="_LKblQDttEemVvrziPwI6Kw" name="CheckEndTypes">
          <eAnnotations xmi:id="_LKeokDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_LKeokTttEemVvrziPwI6Kw" key="body" value="let source = self.base_InformationFlow.endType->selectByKind(UML::Class), target = self.base_InformationFlow.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_LKblQjttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_LKcMUDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LKcMUTttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_LKczYDttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_LKczYTttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LKczYjttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_LKczYzttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_LKdacDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_LKdacTttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_LKfPoDttEemVvrziPwI6Kw" name="CheckNavigability">
          <eAnnotations xmi:id="_LKhr4DttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_LKhr4TttEemVvrziPwI6Kw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_LKfPojttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_LKfPozttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LKfPpDttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_LKf2sTttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_LKf2sjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LKf2szttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_LKf2tDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_LKgdwDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_LKhE0DttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LKSbUDttEemVvrziPwI6Kw" name="base_InformationFlow" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//InformationFlow"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_LBK7kDttEemVvrziPwI6Kw" name="Specialization" eSuperTypes="_LBJGYTttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_LBK7kTttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_LBGqNjttEemVvrziPwI6Kw"/>
        <eOperations xmi:id="_LK0m0DttEemVvrziPwI6Kw" name="CheckEndTypes">
          <eAnnotations xmi:id="_LK3DETttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_LK3qIDttEemVvrziPwI6Kw" key="body" value="let source = self.base_Generalization.endType->selectByKind(UML::Class), target = self.base_Generalization.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_LK1N4TttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_LK1N4jttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LK1N4zttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_LK108TttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_LK108jttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LK108zttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_LK109DttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_LK2cADttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_LK3DEDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_LK4RMDttEemVvrziPwI6Kw" name="CheckNavigability">
          <eAnnotations xmi:id="_LK6tcDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_LK6tcTttEemVvrziPwI6Kw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_LK4RMjttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_LK4RMzttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LK4RNDttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_LK44QTttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_LK44QjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_LK44QzttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_LK44RDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_LK5fUDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_LK6GYDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_LKsD8DttEemVvrziPwI6Kw" name="base_Generalization" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Generalization"/>
        </eStructuralFeatures>
      </eClassifiers>
    </contents>
  </eAnnotations>
  <elementImport xmi:id="_LDMU0TttEemVvrziPwI6Kw" alias="Class">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
  </elementImport>
  <elementImport xmi:id="_LDhE8TttEemVvrziPwI6Kw" alias="Node">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Node"/>
  </elementImport>
  <elementImport xmi:id="_LD1OATttEemVvrziPwI6Kw" alias="Device">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Device"/>
  </elementImport>
  <elementImport xmi:id="_LELMQTttEemVvrziPwI6Kw" alias="CommunicationPath">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#CommunicationPath"/>
  </elementImport>
  <elementImport xmi:id="_LEsJoTttEemVvrziPwI6Kw" alias="Interface">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Interface"/>
  </elementImport>
  <elementImport xmi:id="_LFA5wTttEemVvrziPwI6Kw" alias="ExecutionEnvironment">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#ExecutionEnvironment"/>
  </elementImport>
  <elementImport xmi:id="_LFeMwTttEemVvrziPwI6Kw" alias="Collaboration">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Collaboration"/>
  </elementImport>
  <elementImport xmi:id="_LFyV0TttEemVvrziPwI6Kw" alias="Artifact">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
  </elementImport>
  <elementImport xmi:id="_LGYLsTttEemVvrziPwI6Kw" alias="OpaqueBehavior">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#OpaqueBehavior"/>
  </elementImport>
  <elementImport xmi:id="_LHHLgTttEemVvrziPwI6Kw" alias="Association">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
  </elementImport>
  <elementImport xmi:id="_LHqlIDttEemVvrziPwI6Kw" alias="Usage">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
  </elementImport>
  <elementImport xmi:id="_LIedcTttEemVvrziPwI6Kw" alias="Realization">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Realization"/>
  </elementImport>
  <elementImport xmi:id="_LI2Q4DttEemVvrziPwI6Kw" alias="Dependency">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Dependency"/>
  </elementImport>
  <elementImport xmi:id="_LJ1vYDttEemVvrziPwI6Kw" alias="InformationFlow">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#InformationFlow"/>
  </elementImport>
  <elementImport xmi:id="_LKi6ATttEemVvrziPwI6Kw" alias="Generalization">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Generalization"/>
  </elementImport>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqIDttEemVvrziPwI6Kw" name="NodeElement" isAbstract="true">
    <ownedAttribute xmi:id="_LDMU0DttEemVvrziPwI6Kw" name="base_Class" association="_LDblYDttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqITttEemVvrziPwI6Kw" name="Node">
    <generalization xmi:id="_LBLioDttEemVvrziPwI6Kw" general="_LBGqIDttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_LDhE8DttEemVvrziPwI6Kw" name="base_Node" association="_LDvHYDttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Node"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqIjttEemVvrziPwI6Kw" name="Device">
    <generalization xmi:id="_LBMJsDttEemVvrziPwI6Kw" general="_LBGqIDttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_LD1OADttEemVvrziPwI6Kw" name="base_Device" association="_LEEekDttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Device"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqIzttEemVvrziPwI6Kw" name="Network">
    <generalization xmi:id="_LBMwwDttEemVvrziPwI6Kw" general="_LBGqIDttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_LELMQDttEemVvrziPwI6Kw" name="base_CommunicationPath" association="_LEZOsDttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#CommunicationPath"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqJDttEemVvrziPwI6Kw" name="CommunicationPath">
    <generalization xmi:id="_LBNX0DttEemVvrziPwI6Kw" general="_LBGqIDttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_LEeHMDttEemVvrziPwI6Kw" name="base_CommunicationPath" association="_LEmDADttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#CommunicationPath"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqJTttEemVvrziPwI6Kw" name="InfrastructureInterface">
    <generalization xmi:id="_LBOl8DttEemVvrziPwI6Kw" general="_LBGqIDttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_LEsJoDttEemVvrziPwI6Kw" name="base_Interface" association="_LE6zIDttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Interface"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqJjttEemVvrziPwI6Kw" name="SystemSoftware">
    <generalization xmi:id="_LBP0EDttEemVvrziPwI6Kw" general="_LBGqIDttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_LFA5wDttEemVvrziPwI6Kw" name="base_ExecutionEnvironment" association="_LFNHADttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#ExecutionEnvironment"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqJzttEemVvrziPwI6Kw" name="InfrastructureFunction">
    <generalization xmi:id="_LBQbIDttEemVvrziPwI6Kw" general="_LBGqIDttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_LFSmkDttEemVvrziPwI6Kw" name="base_Class" association="_LFYGIDttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqKDttEemVvrziPwI6Kw" name="InfrastructureService">
    <generalization xmi:id="_LBRCMDttEemVvrziPwI6Kw" general="_LBGqIDttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_LFeMwDttEemVvrziPwI6Kw" name="base_Collaboration" association="_LFqaADttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Collaboration"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqKTttEemVvrziPwI6Kw" name="Artifact">
    <generalization xmi:id="_LC5Z4DttEemVvrziPwI6Kw" general="_LBGqIDttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_LFyV0DttEemVvrziPwI6Kw" name="base_Artifact" association="_LF_xMDttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqKjttEemVvrziPwI6Kw" name="Grouping">
    <generalization xmi:id="_LC6A8DttEemVvrziPwI6Kw" general="_LBGqIDttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_LGF30DttEemVvrziPwI6Kw" name="base_Class" association="_LGQ28DttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqKzttEemVvrziPwI6Kw" name="Junction">
    <generalization xmi:id="_LC7PEDttEemVvrziPwI6Kw" general="_LBGqLDttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_LGYLsDttEemVvrziPwI6Kw" name="base_OpaqueBehavior" association="_LGp4gDttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#OpaqueBehavior"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqLDttEemVvrziPwI6Kw" name="Relationship" isAbstract="true">
    <ownedAttribute xmi:id="_LC72ITttEemVvrziPwI6Kw" name="source" type="_LBGqIDttEemVvrziPwI6Kw" association="_LC8dMTttEemVvrziPwI6Kw">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LC72IjttEemVvrziPwI6Kw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LC8dMDttEemVvrziPwI6Kw" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_LC9EQjttEemVvrziPwI6Kw" name="target" type="_LBGqIDttEemVvrziPwI6Kw" association="_LC9ERTttEemVvrziPwI6Kw">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LC9EQzttEemVvrziPwI6Kw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LC9ERDttEemVvrziPwI6Kw" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_LGx0UDttEemVvrziPwI6Kw" name="base_Class" association="_LG_PsDttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqLTttEemVvrziPwI6Kw" name="Association">
    <ownedRule xmi:id="_LHe-8jttEemVvrziPwI6Kw" name="CheckEndTypes" constrainedElement="_LBGqLTttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_LHe-8zttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_LHjQYjttEemVvrziPwI6Kw" name="CheckNavigability" constrainedElement="_LBGqLTttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_LHj3cDttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_LC-SYDttEemVvrziPwI6Kw" general="_LBGqLDttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_LHHLgDttEemVvrziPwI6Kw" name="base_Association" association="_LHUm4TttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqLjttEemVvrziPwI6Kw" name="Access">
    <ownedRule xmi:id="_LICYkjttEemVvrziPwI6Kw" name="CheckEndTypes" constrainedElement="_LBGqLjttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_LICYkzttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let source = self.base_Usage.endType->selectByKind(UML::Class), target = self.base_Usage.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_LIGC8DttEemVvrziPwI6Kw" name="CheckNavigability" constrainedElement="_LBGqLjttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_LIGC8TttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_LC_ggDttEemVvrziPwI6Kw" general="_LBGqLDttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_LHp-EDttEemVvrziPwI6Kw" name="base_Usage" association="_LH51sTttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqLzttEemVvrziPwI6Kw" name="UsedBy">
    <ownedRule xmi:id="_LIWhojttEemVvrziPwI6Kw" name="CheckEndTypes" constrainedElement="_LBGqLzttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_LIWhozttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let source = self.base_Usage.endType->selectByKind(UML::Class), target = self.base_Usage.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_LIazEjttEemVvrziPwI6Kw" name="CheckNavigability" constrainedElement="_LBGqLzttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_LIazEzttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_LDAuoDttEemVvrziPwI6Kw" general="_LBGqLDttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_LIJtUDttEemVvrziPwI6Kw" name="base_Usage" association="_LIOl0TttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqMDttEemVvrziPwI6Kw" name="Realization">
    <ownedRule xmi:id="_LIvjMDttEemVvrziPwI6Kw" name="CheckEndTypes" constrainedElement="_LBGqMDttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_LIvjMTttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let source = self.base_Realization.endType->selectByKind(UML::Class), target = self.base_Realization.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_LIx_cjttEemVvrziPwI6Kw" name="CheckNavigability" constrainedElement="_LBGqMDttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_LIx_czttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_LDCj0DttEemVvrziPwI6Kw" general="_LBGqLDttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_LIedcDttEemVvrziPwI6Kw" name="base_Realization" association="_LInAUTttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Realization"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqMTttEemVvrziPwI6Kw" name="Assignment">
    <ownedRule xmi:id="_LJH9sTttEemVvrziPwI6Kw" name="CheckEndTypes" constrainedElement="_LBGqMTttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_LJH9sjttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let source = self.base_Dependency.endType->selectByKind(UML::Class), target = self.base_Dependency.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_LJLBAjttEemVvrziPwI6Kw" name="CheckNavigability" constrainedElement="_LBGqMTttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_LJLBAzttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_LDDx8DttEemVvrziPwI6Kw" general="_LBGqLDttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_LI1p0DttEemVvrziPwI6Kw" name="base_Dependency" association="_LI_a0TttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Dependency"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqMjttEemVvrziPwI6Kw" name="Aggregation">
    <ownedRule xmi:id="_LJa4ojttEemVvrziPwI6Kw" name="CheckEndTypes" constrainedElement="_LBGqMjttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_LJa4ozttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_LJd78jttEemVvrziPwI6Kw" name="CheckNavigability" constrainedElement="_LBGqMjttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_LJd78zttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_LDFnIDttEemVvrziPwI6Kw" general="_LBGqLDttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_LJOrYDttEemVvrziPwI6Kw" name="base_Association" association="_LJTj4TttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqMzttEemVvrziPwI6Kw" name="Composition">
    <ownedRule xmi:id="_LJtzkTttEemVvrziPwI6Kw" name="CheckEndTypes" constrainedElement="_LBGqMzttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_LJtzkjttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_LJw24jttEemVvrziPwI6Kw" name="CheckNavigability" constrainedElement="_LBGqMzttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_LJw24zttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_LDG1QDttEemVvrziPwI6Kw" general="_LBGqLDttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_LJg_QDttEemVvrziPwI6Kw" name="base_Association" association="_LJl3wTttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqNDttEemVvrziPwI6Kw" name="Flow">
    <ownedRule xmi:id="_LKG1IjttEemVvrziPwI6Kw" name="CheckEndTypes" constrainedElement="_LBGqNDttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_LKG1IzttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let source = self.base_InformationFlow.endType->selectByKind(UML::Class), target = self.base_InformationFlow.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_LKJRYzttEemVvrziPwI6Kw" name="CheckNavigability" constrainedElement="_LBGqNDttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_LKJ4cDttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_LDJRgDttEemVvrziPwI6Kw" general="_LBGqLDttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_LJ1IUDttEemVvrziPwI6Kw" name="base_InformationFlow" association="_LKAHcTttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#InformationFlow"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqNTttEemVvrziPwI6Kw" name="Triggering">
    <ownedRule xmi:id="_LKa-MTttEemVvrziPwI6Kw" name="CheckEndTypes" constrainedElement="_LBGqNTttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_LKa-MjttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let source = self.base_InformationFlow.endType->selectByKind(UML::Class), target = self.base_InformationFlow.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_LKeokjttEemVvrziPwI6Kw" name="CheckNavigability" constrainedElement="_LBGqNTttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_LKeokzttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_LDKfoDttEemVvrziPwI6Kw" general="_LBGqLDttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_LKM7wDttEemVvrziPwI6Kw" name="base_InformationFlow" association="_LKSbUTttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#InformationFlow"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_LBGqNjttEemVvrziPwI6Kw" name="Specialization">
    <ownedRule xmi:id="_LKz_wTttEemVvrziPwI6Kw" name="CheckEndTypes" constrainedElement="_LBGqNjttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_LKz_wjttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let source = self.base_Generalization.endType->selectByKind(UML::Class), target = self.base_Generalization.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_LK3qITttEemVvrziPwI6Kw" name="CheckNavigability" constrainedElement="_LBGqNjttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_LK3qIjttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_LDLGsDttEemVvrziPwI6Kw" general="_LBGqLDttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_LKi6ADttEemVvrziPwI6Kw" name="base_Generalization" association="_LKsrADttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Generalization"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_LC8dMTttEemVvrziPwI6Kw" memberEnd="_LC8dMjttEemVvrziPwI6Kw _LC72ITttEemVvrziPwI6Kw">
    <eAnnotations xmi:id="_LC8dNTttEemVvrziPwI6Kw" source="org.eclipse.papyrus">
      <details xmi:id="_LC8dNjttEemVvrziPwI6Kw" key="nature" value="UML_Nature"/>
    </eAnnotations>
    <ownedEnd xmi:id="_LC8dMjttEemVvrziPwI6Kw" name="RelationshipEnd" type="_LBGqLDttEemVvrziPwI6Kw" association="_LC8dMTttEemVvrziPwI6Kw">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LC8dMzttEemVvrziPwI6Kw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LC8dNDttEemVvrziPwI6Kw" value="1"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_LC9ERTttEemVvrziPwI6Kw" memberEnd="_LC9ERjttEemVvrziPwI6Kw _LC9EQjttEemVvrziPwI6Kw">
    <eAnnotations xmi:id="_LC9rUDttEemVvrziPwI6Kw" source="org.eclipse.papyrus">
      <details xmi:id="_LC9rUTttEemVvrziPwI6Kw" key="nature" value="UML_Nature"/>
    </eAnnotations>
    <ownedEnd xmi:id="_LC9ERjttEemVvrziPwI6Kw" name="RelationshipEnd" type="_LBGqLDttEemVvrziPwI6Kw" association="_LC9ERTttEemVvrziPwI6Kw">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LC9ERzttEemVvrziPwI6Kw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LC9ESDttEemVvrziPwI6Kw" value="1"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LDblYDttEemVvrziPwI6Kw" name="E_NodeElement_Class1" memberEnd="_LDblYTttEemVvrziPwI6Kw _LDMU0DttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LDblYTttEemVvrziPwI6Kw" name="extension_NodeElement" type="_LBGqIDttEemVvrziPwI6Kw" aggregation="composite" association="_LDblYDttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LDvHYDttEemVvrziPwI6Kw" name="E_Node_Node1" memberEnd="_LDvHYTttEemVvrziPwI6Kw _LDhE8DttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LDvHYTttEemVvrziPwI6Kw" name="extension_Node" type="_LBGqITttEemVvrziPwI6Kw" aggregation="composite" association="_LDvHYDttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LEEekDttEemVvrziPwI6Kw" name="E_Device_Device1" memberEnd="_LEEekTttEemVvrziPwI6Kw _LD1OADttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LEEekTttEemVvrziPwI6Kw" name="extension_Device" type="_LBGqIjttEemVvrziPwI6Kw" aggregation="composite" association="_LEEekDttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LEZOsDttEemVvrziPwI6Kw" name="E_Network_CommunicationPath1" memberEnd="_LEZOsTttEemVvrziPwI6Kw _LELMQDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LEZOsTttEemVvrziPwI6Kw" name="extension_Network" type="_LBGqIzttEemVvrziPwI6Kw" aggregation="composite" association="_LEZOsDttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LEmDADttEemVvrziPwI6Kw" name="E_CommunicationPath_CommunicationPath1" memberEnd="_LEmDATttEemVvrziPwI6Kw _LEeHMDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LEmDATttEemVvrziPwI6Kw" name="extension_CommunicationPath" type="_LBGqJDttEemVvrziPwI6Kw" aggregation="composite" association="_LEmDADttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LE6zIDttEemVvrziPwI6Kw" name="E_InfrastructureInterface_Interface1" memberEnd="_LE6zITttEemVvrziPwI6Kw _LEsJoDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LE6zITttEemVvrziPwI6Kw" name="extension_InfrastructureInterface" type="_LBGqJTttEemVvrziPwI6Kw" aggregation="composite" association="_LE6zIDttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LFNHADttEemVvrziPwI6Kw" name="E_SystemSoftware_ExecutionEnvironment1" memberEnd="_LFNHATttEemVvrziPwI6Kw _LFA5wDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LFNHATttEemVvrziPwI6Kw" name="extension_SystemSoftware" type="_LBGqJjttEemVvrziPwI6Kw" aggregation="composite" association="_LFNHADttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LFYGIDttEemVvrziPwI6Kw" name="E_InfrastructureFunction_Class1" memberEnd="_LFYGITttEemVvrziPwI6Kw _LFSmkDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LFYGITttEemVvrziPwI6Kw" name="extension_InfrastructureFunction" type="_LBGqJzttEemVvrziPwI6Kw" aggregation="composite" association="_LFYGIDttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LFqaADttEemVvrziPwI6Kw" name="E_InfrastructureService_Collaboration1" memberEnd="_LFrBEDttEemVvrziPwI6Kw _LFeMwDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LFrBEDttEemVvrziPwI6Kw" name="extension_InfrastructureService" type="_LBGqKDttEemVvrziPwI6Kw" aggregation="composite" association="_LFqaADttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LF_xMDttEemVvrziPwI6Kw" name="E_Artifact_Artifact1" memberEnd="_LF_xMTttEemVvrziPwI6Kw _LFyV0DttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LF_xMTttEemVvrziPwI6Kw" name="extension_Artifact" type="_LBGqKTttEemVvrziPwI6Kw" aggregation="composite" association="_LF_xMDttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LGQ28DttEemVvrziPwI6Kw" name="E_Grouping_Class1" memberEnd="_LGReADttEemVvrziPwI6Kw _LGF30DttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LGReADttEemVvrziPwI6Kw" name="extension_Grouping" type="_LBGqKjttEemVvrziPwI6Kw" aggregation="composite" association="_LGQ28DttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LGp4gDttEemVvrziPwI6Kw" name="E_Junction_OpaqueBehavior1" memberEnd="_LGp4gTttEemVvrziPwI6Kw _LGYLsDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LGp4gTttEemVvrziPwI6Kw" name="extension_Junction" type="_LBGqKzttEemVvrziPwI6Kw" aggregation="composite" association="_LGp4gDttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LG_PsDttEemVvrziPwI6Kw" name="E_Relationship_Class1" memberEnd="_LG_PsTttEemVvrziPwI6Kw _LGx0UDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LG_PsTttEemVvrziPwI6Kw" name="extension_Relationship" type="_LBGqLDttEemVvrziPwI6Kw" aggregation="composite" association="_LG_PsDttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LHUm4TttEemVvrziPwI6Kw" name="E_Association_Association1" memberEnd="_LHUm4jttEemVvrziPwI6Kw _LHHLgDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LHUm4jttEemVvrziPwI6Kw" name="extension_Association" type="_LBGqLTttEemVvrziPwI6Kw" aggregation="composite" association="_LHUm4TttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LH51sTttEemVvrziPwI6Kw" name="E_Access_Usage1" memberEnd="_LH51sjttEemVvrziPwI6Kw _LHp-EDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LH51sjttEemVvrziPwI6Kw" name="extension_Access" type="_LBGqLjttEemVvrziPwI6Kw" aggregation="composite" association="_LH51sTttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LIOl0TttEemVvrziPwI6Kw" name="E_UsedBy_Usage1" memberEnd="_LIOl0jttEemVvrziPwI6Kw _LIJtUDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LIOl0jttEemVvrziPwI6Kw" name="extension_UsedBy" type="_LBGqLzttEemVvrziPwI6Kw" aggregation="composite" association="_LIOl0TttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LInAUTttEemVvrziPwI6Kw" name="E_Realization_Realization1" memberEnd="_LInAUjttEemVvrziPwI6Kw _LIedcDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LInAUjttEemVvrziPwI6Kw" name="extension_Realization" type="_LBGqMDttEemVvrziPwI6Kw" aggregation="composite" association="_LInAUTttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LI_a0TttEemVvrziPwI6Kw" name="E_Assignment_Dependency1" memberEnd="_LI_a0jttEemVvrziPwI6Kw _LI1p0DttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LI_a0jttEemVvrziPwI6Kw" name="extension_Assignment" type="_LBGqMTttEemVvrziPwI6Kw" aggregation="composite" association="_LI_a0TttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LJTj4TttEemVvrziPwI6Kw" name="E_Aggregation_Association1" memberEnd="_LJUK8DttEemVvrziPwI6Kw _LJOrYDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LJUK8DttEemVvrziPwI6Kw" name="extension_Aggregation" type="_LBGqMjttEemVvrziPwI6Kw" aggregation="composite" association="_LJTj4TttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LJl3wTttEemVvrziPwI6Kw" name="E_Composition_Association1" memberEnd="_LJl3wjttEemVvrziPwI6Kw _LJg_QDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LJl3wjttEemVvrziPwI6Kw" name="extension_Composition" type="_LBGqMzttEemVvrziPwI6Kw" aggregation="composite" association="_LJl3wTttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LKAHcTttEemVvrziPwI6Kw" name="E_Flow_InformationFlow1" memberEnd="_LKAHcjttEemVvrziPwI6Kw _LJ1IUDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LKAHcjttEemVvrziPwI6Kw" name="extension_Flow" type="_LBGqNDttEemVvrziPwI6Kw" aggregation="composite" association="_LKAHcTttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LKSbUTttEemVvrziPwI6Kw" name="E_Triggering_InformationFlow1" memberEnd="_LKSbUjttEemVvrziPwI6Kw _LKM7wDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LKSbUjttEemVvrziPwI6Kw" name="extension_Triggering" type="_LBGqNTttEemVvrziPwI6Kw" aggregation="composite" association="_LKSbUTttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_LKsrADttEemVvrziPwI6Kw" name="E_Specialization_Generalization1" memberEnd="_LKsrATttEemVvrziPwI6Kw _LKi6ADttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_LKsrATttEemVvrziPwI6Kw" name="extension_Specialization" type="_LBGqNjttEemVvrziPwI6Kw" aggregation="composite" association="_LKsrADttEemVvrziPwI6Kw"/>
  </packagedElement>
</uml:Profile>
