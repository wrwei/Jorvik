<?xml version="1.0" encoding="UTF-8"?>
<uml:Profile xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_sxgCsDawEemNRqQIo_cpGw" name="ArchimateMotivation" URI="archimate-motivation" metaclassReference="_sxpMoTawEemNRqQIo_cpGw _szwsgDawEemNRqQIo_cpGw _s0NYcTawEemNRqQIo_cpGw _s0cB8zawEemNRqQIo_cpGw">
  <eAnnotations xmi:id="_sxgCsjawEemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML">
    <contents xmi:type="ecore:EPackage" xmi:id="_sxgCsTawEemNRqQIo_cpGw" name="ArchimateMotivation" nsURI="http:///schemas/ArchimateMotivation/something/1" nsPrefix="ArchimateMotivation">
      <eAnnotations xmi:id="_sxgpwDawEemNRqQIo_cpGw" source="PapyrusVersion">
        <details xmi:id="_sxgpwTawEemNRqQIo_cpGw" key="Version" value="0.0.1"/>
        <details xmi:id="_sxgpwjawEemNRqQIo_cpGw" key="Comment" value=""/>
        <details xmi:id="_sxgpwzawEemNRqQIo_cpGw" key="Copyright" value=""/>
        <details xmi:id="_sxgpxDawEemNRqQIo_cpGw" key="Date" value="2017-02-01"/>
        <details xmi:id="_sxgpxTawEemNRqQIo_cpGw" key="Author" value=""/>
      </eAnnotations>
      <eAnnotations xmi:id="_sz8SsDawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_sz8SsTawEemNRqQIo_cpGw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_s0JHADawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_s0JHATawEemNRqQIo_cpGw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_s0YXkDawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_s0YXkTawEemNRqQIo_cpGw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_s0noIDawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_s0noITawEemNRqQIo_cpGw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_sxhQ0DawEemNRqQIo_cpGw" name="NodeElement">
        <eAnnotations xmi:id="_sxhQ0TawEemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_sxgpxjawEemNRqQIo_cpGw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_sxxvgDawEemNRqQIo_cpGw" name="base_Class" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Class"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_sxh34DawEemNRqQIo_cpGw" name="Stakeholder" eSuperTypes="_sxhQ0DawEemNRqQIo_cpGw">
        <eAnnotations xmi:id="_sxh34TawEemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_sxgpxzawEemNRqQIo_cpGw"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_sxh34jawEemNRqQIo_cpGw" name="Driver" eSuperTypes="_sxhQ0DawEemNRqQIo_cpGw">
        <eAnnotations xmi:id="_sxh34zawEemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_sxgpyDawEemNRqQIo_cpGw"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_sxh35DawEemNRqQIo_cpGw" name="Assessment" eSuperTypes="_sxhQ0DawEemNRqQIo_cpGw">
        <eAnnotations xmi:id="_sxh35TawEemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_sxgpyTawEemNRqQIo_cpGw"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_sxh35jawEemNRqQIo_cpGw" name="Goal" eSuperTypes="_sxhQ0DawEemNRqQIo_cpGw">
        <eAnnotations xmi:id="_sxh35zawEemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_sxgpyjawEemNRqQIo_cpGw"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_sxie8DawEemNRqQIo_cpGw" name="Requirement" eSuperTypes="_sxhQ0DawEemNRqQIo_cpGw">
        <eAnnotations xmi:id="_sxie8TawEemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_sxgpyzawEemNRqQIo_cpGw"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_sxie8jawEemNRqQIo_cpGw" name="Constraint" eSuperTypes="_sxhQ0DawEemNRqQIo_cpGw">
        <eAnnotations xmi:id="_sxie8zawEemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_sxgpzDawEemNRqQIo_cpGw"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_sxie9DawEemNRqQIo_cpGw" name="Principle" eSuperTypes="_sxhQ0DawEemNRqQIo_cpGw">
        <eAnnotations xmi:id="_sxie9TawEemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_sxgpzTawEemNRqQIo_cpGw"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_sxie9jawEemNRqQIo_cpGw" name="Relationship">
        <eAnnotations xmi:id="_sxie9zawEemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_sxgpzjawEemNRqQIo_cpGw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_sxmJVjawEemNRqQIo_cpGw" name="source" lowerBound="1" eType="_sxhQ0DawEemNRqQIo_cpGw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_sxmwZjawEemNRqQIo_cpGw" name="target" lowerBound="1" eType="_sxhQ0DawEemNRqQIo_cpGw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_szql4DawEemNRqQIo_cpGw" name="base_Class" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Class"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_sxjGADawEemNRqQIo_cpGw" name="Association" eSuperTypes="_sxie9jawEemNRqQIo_cpGw">
        <eAnnotations xmi:id="_sxjGATawEemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_sxgpzzawEemNRqQIo_cpGw"/>
        <eOperations xmi:id="_sz85wDawEemNRqQIo_cpGw" name="CheckEndTypes">
          <eAnnotations xmi:id="_sz-H4TawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_sz-H4jawEemNRqQIo_cpGw" key="body" value="let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_sz85wjawEemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_sz85wzawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_sz85xDawEemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_sz9g0TawEemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_sz9g0jawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_sz9g0zawEemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_sz9g1DawEemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_sz9g1TawEemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_sz-H4DawEemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_sz-u8jawEemNRqQIo_cpGw" name="CheckNavigability">
          <eAnnotations xmi:id="_sz_9ETawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_sz_9EjawEemNRqQIo_cpGw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_sz-u9DawEemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_sz-u9TawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_sz-u9jawEemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_sz_WATawEemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_sz_WAjawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_sz_WAzawEemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_sz_WBDawEemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_sz_WBTawEemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_sz_9EDawEemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_sz2zIDawEemNRqQIo_cpGw" name="base_Association" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Association"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_sxjGAjawEemNRqQIo_cpGw" name="Aggregation" eSuperTypes="_sxie9jawEemNRqQIo_cpGw">
        <eAnnotations xmi:id="_sxjGAzawEemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_sxgp0DawEemNRqQIo_cpGw"/>
        <eOperations xmi:id="_s0JuETawEemNRqQIo_cpGw" name="CheckEndTypes">
          <eAnnotations xmi:id="_s0K8MTawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_s0K8MjawEemNRqQIo_cpGw" key="body" value="let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_s0JuEzawEemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_s0JuFDawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_s0KVIDawEemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_s0KVIzawEemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_s0KVJDawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_s0KVJTawEemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_s0KVJjawEemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_s0KVJzawEemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_s0K8MDawEemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_s0LjQDawEemNRqQIo_cpGw" name="CheckNavigability">
          <eAnnotations xmi:id="_s0MxYDawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_s0MxYTawEemNRqQIo_cpGw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_s0LjQjawEemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_s0LjQzawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_s0LjRDawEemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_s0MKUDawEemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_s0MKUTawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_s0MKUjawEemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_s0MKUzawEemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_s0MKVDawEemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_s0MKVTawEemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_s0DncDawEemNRqQIo_cpGw" name="base_Association" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Association"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_sxjGBDawEemNRqQIo_cpGw" name="Realization" eSuperTypes="_sxie9jawEemNRqQIo_cpGw">
        <eAnnotations xmi:id="_sxjGBTawEemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_sxgp0TawEemNRqQIo_cpGw"/>
        <eOperations xmi:id="_s0Y-oDawEemNRqQIo_cpGw" name="CheckEndTypes">
          <eAnnotations xmi:id="_s0aMwTawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_s0aMwjawEemNRqQIo_cpGw" key="body" value="let source = self.base_Realization.endType->selectByKind(UML::Class), target = self.base_Realization.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_s0Y-ojawEemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_s0Y-ozawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_s0Y-pDawEemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_s0ZlsTawEemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_s0ZlsjawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_s0ZlszawEemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_s0ZltDawEemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_s0ZltTawEemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_s0aMwDawEemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_s0az0DawEemNRqQIo_cpGw" name="CheckNavigability">
          <eAnnotations xmi:id="_s0cB8DawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_s0cB8TawEemNRqQIo_cpGw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_s0az0jawEemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_s0az0zawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_s0az1DawEemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_s0az1zawEemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_s0az2DawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_s0az2TawEemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_s0az2jawEemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_s0ba4DawEemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_s0ba4TawEemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_s0TfEDawEemNRqQIo_cpGw" name="base_Realization" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Realization"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_sxjGBjawEemNRqQIo_cpGw" name="Influence" eSuperTypes="_sxie9jawEemNRqQIo_cpGw">
        <eAnnotations xmi:id="_sxjGBzawEemNRqQIo_cpGw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_sxgp0jawEemNRqQIo_cpGw"/>
        <eOperations xmi:id="_s0noJDawEemNRqQIo_cpGw" name="CheckEndTypes">
          <eAnnotations xmi:id="_s0pdUDawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_s0pdUTawEemNRqQIo_cpGw" key="body" value="let source = self.base_Dependency.endType->selectByKind(UML::Class), target = self.base_Dependency.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_s0oPMTawEemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_s0oPMjawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_s0oPMzawEemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_s0oPNjawEemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_s0oPNzawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_s0oPODawEemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_s0oPOTawEemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_s0o2QDawEemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_s0o2QTawEemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_s0pdVDawEemNRqQIo_cpGw" name="CheckNavigability">
          <eAnnotations xmi:id="_s0qrcTawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_s0qrcjawEemNRqQIo_cpGw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_s0pdVjawEemNRqQIo_cpGw" name="diagnostics">
            <eAnnotations xmi:id="_s0qEYDawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_s0qEYTawEemNRqQIo_cpGw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_s0qEZDawEemNRqQIo_cpGw" name="context">
            <eAnnotations xmi:id="_s0qEZTawEemNRqQIo_cpGw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_s0qEZjawEemNRqQIo_cpGw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_s0qEZzawEemNRqQIo_cpGw">
              <eTypeArguments xmi:id="_s0qEaDawEemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_s0qrcDawEemNRqQIo_cpGw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_s0iIkDawEemNRqQIo_cpGw" name="base_Dependency" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Dependency"/>
        </eStructuralFeatures>
      </eClassifiers>
    </contents>
  </eAnnotations>
  <elementImport xmi:id="_sxpMoTawEemNRqQIo_cpGw" alias="Class">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
  </elementImport>
  <elementImport xmi:id="_szwsgDawEemNRqQIo_cpGw" alias="Association">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
  </elementImport>
  <elementImport xmi:id="_s0NYcTawEemNRqQIo_cpGw" alias="Realization">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Realization"/>
  </elementImport>
  <elementImport xmi:id="_s0cB8zawEemNRqQIo_cpGw" alias="Dependency">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Dependency"/>
  </elementImport>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_sxgpxjawEemNRqQIo_cpGw" name="NodeElement">
    <ownedAttribute xmi:id="_sxpMoDawEemNRqQIo_cpGw" name="base_Class" association="_sx0LwDawEemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_sxgpxzawEemNRqQIo_cpGw" name="Stakeholder">
    <generalization xmi:id="_sxjtEDawEemNRqQIo_cpGw" general="_sxgpxjawEemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_sx4dMDawEemNRqQIo_cpGw" name="base_Class" association="_sx8HkDawEemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_sxgpyDawEemNRqQIo_cpGw" name="Driver">
    <generalization xmi:id="_sxjtEjawEemNRqQIo_cpGw" general="_sxgpxjawEemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_syBAEDawEemNRqQIo_cpGw" name="base_Class" association="_syEqcDawEemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_sxgpyTawEemNRqQIo_cpGw" name="Assessment">
    <generalization xmi:id="_sxkUITawEemNRqQIo_cpGw" general="_sxgpxjawEemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_szDh4DawEemNRqQIo_cpGw" name="base_Class" association="_szHMQDawEemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_sxgpyjawEemNRqQIo_cpGw" name="Goal">
    <generalization xmi:id="_sxkUIzawEemNRqQIo_cpGw" general="_sxgpxjawEemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_szLdsDawEemNRqQIo_cpGw" name="base_Class" association="_szPIEDawEemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_sxgpyzawEemNRqQIo_cpGw" name="Requirement">
    <generalization xmi:id="_sxk7MTawEemNRqQIo_cpGw" general="_sxgpxjawEemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_szSycDawEemNRqQIo_cpGw" name="base_Class" association="_szWc0DawEemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_sxgpzDawEemNRqQIo_cpGw" name="Constraint">
    <generalization xmi:id="_sxk7MzawEemNRqQIo_cpGw" general="_sxgpxjawEemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_szZgIDawEemNRqQIo_cpGw" name="base_Class" association="_szdKgDawEemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_sxgpzTawEemNRqQIo_cpGw" name="Principle">
    <generalization xmi:id="_sxliQDawEemNRqQIo_cpGw" general="_sxgpxjawEemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_szg04DawEemNRqQIo_cpGw" name="base_Class" association="_szj4MDawEemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_sxgpzjawEemNRqQIo_cpGw" name="Relationship">
    <ownedAttribute xmi:id="_sxliQjawEemNRqQIo_cpGw" name="source" type="_sxgpxjawEemNRqQIo_cpGw" association="_sxmJUDawEemNRqQIo_cpGw">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sxliQzawEemNRqQIo_cpGw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sxliRDawEemNRqQIo_cpGw" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_sxmJWDawEemNRqQIo_cpGw" name="target" type="_sxgpxjawEemNRqQIo_cpGw" association="_sxmwYDawEemNRqQIo_cpGw">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sxmJWTawEemNRqQIo_cpGw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sxmJWjawEemNRqQIo_cpGw" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_sznikDawEemNRqQIo_cpGw" name="base_Class" association="_szsbEDawEemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_sxgpzzawEemNRqQIo_cpGw" name="Association">
    <ownedRule xmi:id="_sz8SsjawEemNRqQIo_cpGw" name="CheckEndTypes" constrainedElement="_sxgpzzawEemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_sz8SszawEemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_sz-u8DawEemNRqQIo_cpGw" name="CheckNavigability" constrainedElement="_sxgpzzawEemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_sz-u8TawEemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_sxnXcDawEemNRqQIo_cpGw" general="_sxgpzjawEemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_szwFcDawEemNRqQIo_cpGw" name="base_Association" association="_sz2zITawEemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_sxgp0DawEemNRqQIo_cpGw" name="Aggregation">
    <ownedRule xmi:id="_s0JHAjawEemNRqQIo_cpGw" name="CheckEndTypes" constrainedElement="_sxgp0DawEemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_s0JuEDawEemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_s0K8MzawEemNRqQIo_cpGw" name="CheckNavigability" constrainedElement="_sxgp0DawEemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_s0K8NDawEemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_sxnXcjawEemNRqQIo_cpGw" general="_sxgpzjawEemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_s0AkIDawEemNRqQIo_cpGw" name="base_Association" association="_s0DncTawEemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_sxgp0TawEemNRqQIo_cpGw" name="Realization">
    <ownedRule xmi:id="_s0YXkjawEemNRqQIo_cpGw" name="CheckEndTypes" constrainedElement="_sxgp0TawEemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_s0YXkzawEemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let source = self.base_Realization.endType->selectByKind(UML::Class), target = self.base_Realization.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_s0aMwzawEemNRqQIo_cpGw" name="CheckNavigability" constrainedElement="_sxgp0TawEemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_s0aMxDawEemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_sxn-gTawEemNRqQIo_cpGw" general="_sxgpzjawEemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_s0NYcDawEemNRqQIo_cpGw" name="base_Realization" association="_s0TfETawEemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Realization"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_sxgp0jawEemNRqQIo_cpGw" name="Influence">
    <ownedRule xmi:id="_s0noIjawEemNRqQIo_cpGw" name="CheckEndTypes" constrainedElement="_sxgp0jawEemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_s0noIzawEemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let source = self.base_Dependency.endType->selectByKind(UML::Class), target = self.base_Dependency.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_s0pdUjawEemNRqQIo_cpGw" name="CheckNavigability" constrainedElement="_sxgp0jawEemNRqQIo_cpGw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_s0pdUzawEemNRqQIo_cpGw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_sxolkTawEemNRqQIo_cpGw" general="_sxgpzjawEemNRqQIo_cpGw"/>
    <ownedAttribute xmi:id="_s0cB8jawEemNRqQIo_cpGw" name="base_Dependency" association="_s0iIkTawEemNRqQIo_cpGw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Dependency"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_sxmJUDawEemNRqQIo_cpGw" memberEnd="_sxmJUTawEemNRqQIo_cpGw _sxliQjawEemNRqQIo_cpGw">
    <eAnnotations xmi:id="_sxmJVDawEemNRqQIo_cpGw" source="org.eclipse.papyrus">
      <details xmi:id="_sxmJVTawEemNRqQIo_cpGw" key="nature" value="UML_Nature"/>
    </eAnnotations>
    <ownedEnd xmi:id="_sxmJUTawEemNRqQIo_cpGw" name="RelationshipEnd" type="_sxgpzjawEemNRqQIo_cpGw" association="_sxmJUDawEemNRqQIo_cpGw">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sxmJUjawEemNRqQIo_cpGw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sxmJUzawEemNRqQIo_cpGw" value="1"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_sxmwYDawEemNRqQIo_cpGw" memberEnd="_sxmwYTawEemNRqQIo_cpGw _sxmJWDawEemNRqQIo_cpGw">
    <eAnnotations xmi:id="_sxmwZDawEemNRqQIo_cpGw" source="org.eclipse.papyrus">
      <details xmi:id="_sxmwZTawEemNRqQIo_cpGw" key="nature" value="UML_Nature"/>
    </eAnnotations>
    <ownedEnd xmi:id="_sxmwYTawEemNRqQIo_cpGw" name="RelationshipEnd" type="_sxgpzjawEemNRqQIo_cpGw" association="_sxmwYDawEemNRqQIo_cpGw">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sxmwYjawEemNRqQIo_cpGw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_sxmwYzawEemNRqQIo_cpGw" value="1"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_sx0LwDawEemNRqQIo_cpGw" name="E_NodeElement_Class1" memberEnd="_sx0LwTawEemNRqQIo_cpGw _sxpMoDawEemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_sx0LwTawEemNRqQIo_cpGw" name="extension_NodeElement" type="_sxgpxjawEemNRqQIo_cpGw" aggregation="composite" association="_sx0LwDawEemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_sx8HkDawEemNRqQIo_cpGw" name="E_Stakeholder_Class1" memberEnd="_sx8HkTawEemNRqQIo_cpGw _sx4dMDawEemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_sx8HkTawEemNRqQIo_cpGw" name="extension_Stakeholder" type="_sxgpxzawEemNRqQIo_cpGw" aggregation="composite" association="_sx8HkDawEemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_syEqcDawEemNRqQIo_cpGw" name="E_Driver_Class1" memberEnd="_syEqcTawEemNRqQIo_cpGw _syBAEDawEemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_syEqcTawEemNRqQIo_cpGw" name="extension_Driver" type="_sxgpyDawEemNRqQIo_cpGw" aggregation="composite" association="_syEqcDawEemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_szHMQDawEemNRqQIo_cpGw" name="E_Assessment_Class1" memberEnd="_szHMQTawEemNRqQIo_cpGw _szDh4DawEemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_szHMQTawEemNRqQIo_cpGw" name="extension_Assessment" type="_sxgpyTawEemNRqQIo_cpGw" aggregation="composite" association="_szHMQDawEemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_szPIEDawEemNRqQIo_cpGw" name="E_Goal_Class1" memberEnd="_szPIETawEemNRqQIo_cpGw _szLdsDawEemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_szPIETawEemNRqQIo_cpGw" name="extension_Goal" type="_sxgpyjawEemNRqQIo_cpGw" aggregation="composite" association="_szPIEDawEemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_szWc0DawEemNRqQIo_cpGw" name="E_Requirement_Class1" memberEnd="_szWc0TawEemNRqQIo_cpGw _szSycDawEemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_szWc0TawEemNRqQIo_cpGw" name="extension_Requirement" type="_sxgpyzawEemNRqQIo_cpGw" aggregation="composite" association="_szWc0DawEemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_szdKgDawEemNRqQIo_cpGw" name="E_Constraint_Class1" memberEnd="_szdKgTawEemNRqQIo_cpGw _szZgIDawEemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_szdKgTawEemNRqQIo_cpGw" name="extension_Constraint" type="_sxgpzDawEemNRqQIo_cpGw" aggregation="composite" association="_szdKgDawEemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_szj4MDawEemNRqQIo_cpGw" name="E_Principle_Class1" memberEnd="_szj4MTawEemNRqQIo_cpGw _szg04DawEemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_szj4MTawEemNRqQIo_cpGw" name="extension_Principle" type="_sxgpzTawEemNRqQIo_cpGw" aggregation="composite" association="_szj4MDawEemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_szsbEDawEemNRqQIo_cpGw" name="E_Relationship_Class1" memberEnd="_szsbETawEemNRqQIo_cpGw _sznikDawEemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_szsbETawEemNRqQIo_cpGw" name="extension_Relationship" type="_sxgpzjawEemNRqQIo_cpGw" aggregation="composite" association="_szsbEDawEemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_sz2zITawEemNRqQIo_cpGw" name="E_Association_Association1" memberEnd="_sz2zIjawEemNRqQIo_cpGw _szwFcDawEemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_sz2zIjawEemNRqQIo_cpGw" name="extension_Association" type="_sxgpzzawEemNRqQIo_cpGw" aggregation="composite" association="_sz2zITawEemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_s0DncTawEemNRqQIo_cpGw" name="E_Aggregation_Association1" memberEnd="_s0DncjawEemNRqQIo_cpGw _s0AkIDawEemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_s0DncjawEemNRqQIo_cpGw" name="extension_Aggregation" type="_sxgp0DawEemNRqQIo_cpGw" aggregation="composite" association="_s0DncTawEemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_s0TfETawEemNRqQIo_cpGw" name="E_Realization_Realization1" memberEnd="_s0TfEjawEemNRqQIo_cpGw _s0NYcDawEemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_s0TfEjawEemNRqQIo_cpGw" name="extension_Realization" type="_sxgp0TawEemNRqQIo_cpGw" aggregation="composite" association="_s0TfETawEemNRqQIo_cpGw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_s0iIkTawEemNRqQIo_cpGw" name="E_Influence_Dependency1" memberEnd="_s0iIkjawEemNRqQIo_cpGw _s0cB8jawEemNRqQIo_cpGw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_s0iIkjawEemNRqQIo_cpGw" name="extension_Influence" type="_sxgp0jawEemNRqQIo_cpGw" aggregation="composite" association="_s0iIkTawEemNRqQIo_cpGw"/>
  </packagedElement>
</uml:Profile>
