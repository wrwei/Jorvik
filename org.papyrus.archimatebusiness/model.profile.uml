<?xml version="1.0" encoding="UTF-8"?>
<uml:Profile xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_CoO6sDttEemVvrziPwI6Kw" name="ArchimateBusiness" URI="archimate-business" metaclassReference="_CpI5oTttEemVvrziPwI6Kw _CpthYDttEemVvrziPwI6Kw _CqK0YTttEemVvrziPwI6Kw _CsyDgTttEemVvrziPwI6Kw _CteAATttEemVvrziPwI6Kw _CusIATttEemVvrziPwI6Kw _Cvc9ADttEemVvrziPwI6Kw _CwsTITttEemVvrziPwI6Kw _CxgygDttEemVvrziPwI6Kw">
  <eAnnotations xmi:id="_CoO6sjttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML">
    <contents xmi:type="ecore:EPackage" xmi:id="_CoO6sTttEemVvrziPwI6Kw" name="ArchimateBusiness" nsURI="http:///schemas/ArchimateBusiness/something/1" nsPrefix="ArchimateBusiness">
      <eAnnotations xmi:id="_CoPhwDttEemVvrziPwI6Kw" source="PapyrusVersion">
        <details xmi:id="_CoPhwTttEemVvrziPwI6Kw" key="Version" value="0.0.1"/>
        <details xmi:id="_CoQI0DttEemVvrziPwI6Kw" key="Comment" value=""/>
        <details xmi:id="_CoQI0TttEemVvrziPwI6Kw" key="Copyright" value=""/>
        <details xmi:id="_CoQI0jttEemVvrziPwI6Kw" key="Date" value="2017-02-01"/>
        <details xmi:id="_CoQI0zttEemVvrziPwI6Kw" key="Author" value=""/>
      </eAnnotations>
      <eAnnotations xmi:id="_CtM6QDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_CtM6QTttEemVvrziPwI6Kw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_Ct42wDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_Ct42wTttEemVvrziPwI6Kw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_CucQYDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_CucQYTttEemVvrziPwI6Kw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_CvKCEDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_CvKCETttEemVvrziPwI6Kw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_Cv3MsDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_Cv3MsTttEemVvrziPwI6Kw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_CwSqgDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_CwSqgTttEemVvrziPwI6Kw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_CwmMgDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_CwmMgTttEemVvrziPwI6Kw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_Cw8x0DttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_Cw9Y4DttEemVvrziPwI6Kw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_CxUlQDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_CxUlQTttEemVvrziPwI6Kw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eAnnotations xmi:id="_Cx0UgDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore">
        <details xmi:id="_Cx07kDttEemVvrziPwI6Kw" key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL"/>
      </eAnnotations>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_CoR-ADttEemVvrziPwI6Kw" name="NodeElement">
        <eAnnotations xmi:id="_CoR-ATttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_CoRW8DttEemVvrziPwI6Kw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_CpYxQDttEemVvrziPwI6Kw" name="base_Class" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Class"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_CoSlEDttEemVvrziPwI6Kw" name="WorkPackage" eSuperTypes="_CoR-ADttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_CoSlETttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_CoRW8TttEemVvrziPwI6Kw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_Cp7j0DttEemVvrziPwI6Kw" name="base_OpaqueBehavior" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//OpaqueBehavior"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_CoSlEjttEemVvrziPwI6Kw" name="Deliverable" eSuperTypes="_CoR-ADttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_CoSlEzttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_CoRW8jttEemVvrziPwI6Kw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_CqY20DttEemVvrziPwI6Kw" name="base_Artifact" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Artifact"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_CoSlFDttEemVvrziPwI6Kw" name="Plateau" eSuperTypes="_CoR-ADttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_CoSlFTttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_CoRW8zttEemVvrziPwI6Kw"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_CoTMIDttEemVvrziPwI6Kw" name="Gap" eSuperTypes="_CoR-ADttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_CoTMITttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_CoRW9DttEemVvrziPwI6Kw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_CrAh4DttEemVvrziPwI6Kw" name="base_Artifact" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Artifact"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_CoTMIjttEemVvrziPwI6Kw" name="Grouping" eSuperTypes="_CoR-ADttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_CoTMIzttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_CoRW9TttEemVvrziPwI6Kw"/>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_CoTzMDttEemVvrziPwI6Kw" name="Junction" eSuperTypes="_CoTzMjttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_CoTzMTttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_CoRW9jttEemVvrziPwI6Kw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_CrqpMDttEemVvrziPwI6Kw" name="base_OpaqueBehavior" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//OpaqueBehavior"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_CoTzMjttEemVvrziPwI6Kw" name="Relationship">
        <eAnnotations xmi:id="_CoTzMzttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_CoRW9zttEemVvrziPwI6Kw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_Cok48DttEemVvrziPwI6Kw" name="source" lowerBound="1" eType="_CoR-ADttEemVvrziPwI6Kw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_ComHEDttEemVvrziPwI6Kw" name="target" lowerBound="1" eType="_CoR-ADttEemVvrziPwI6Kw"/>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_Cr_ZUDttEemVvrziPwI6Kw" name="base_Class" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Class"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_CoUaQDttEemVvrziPwI6Kw" name="Association" eSuperTypes="_CoTzMjttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_CoUaQTttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_CoRW-DttEemVvrziPwI6Kw"/>
        <eOperations xmi:id="_CtOvcDttEemVvrziPwI6Kw" name="CheckEndTypes">
          <eAnnotations xmi:id="_CtU2EDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_CtU2ETttEemVvrziPwI6Kw" key="body" value="let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_CtPWgTttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_CtPWgjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CtPWgzttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_CtP9kTttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_CtQkoDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CtQkoTttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_CtQkojttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_CtRywDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_CtTA4DttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_CtWEMDttEemVvrziPwI6Kw" name="CheckNavigability">
          <eAnnotations xmi:id="_Ctcx4DttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_Ctcx4TttEemVvrziPwI6Kw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_CtWEMjttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_CtWEMzttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CtWrQDttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_CtXSUTttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_CtXSUjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CtXSUzttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_CtXSVDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_CtZHgDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_Cta8sDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_Cs_e4DttEemVvrziPwI6Kw" name="base_Association" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Association"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_CoUaQjttEemVvrziPwI6Kw" name="Access" eSuperTypes="_CoTzMjttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_CoUaQzttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_CoRW-TttEemVvrziPwI6Kw"/>
        <eOperations xmi:id="_Ct6r8DttEemVvrziPwI6Kw" name="CheckEndTypes">
          <eAnnotations xmi:id="_CuCAsDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_CuCnwDttEemVvrziPwI6Kw" key="body" value="let source = self.base_Usage.endType->selectByKind(UML::Class), target = self.base_Usage.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_Ct76EDttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_Ct76ETttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_Ct76EjttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_Ct9IMTttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_Ct9IMjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_Ct9IMzttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_Ct9vQDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_Ct-9YDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_CuAykDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_CuDO0DttEemVvrziPwI6Kw" name="CheckNavigability">
          <eAnnotations xmi:id="_CuIHUDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_CuIHUTttEemVvrziPwI6Kw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_CuD14TttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_CuD14jttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CuD14zttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_CuFEATttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_CuFEAjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CuFEAzttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_CuFEBDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_CuGSIDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_CuHgQDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_Ctq0UDttEemVvrziPwI6Kw" name="base_Usage" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Usage"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_CoVBUDttEemVvrziPwI6Kw" name="UsedBy" eSuperTypes="_CoTzMjttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_CoVBUTttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_CoRW-jttEemVvrziPwI6Kw"/>
        <eOperations xmi:id="_CudegDttEemVvrziPwI6Kw" name="CheckEndTypes">
          <eAnnotations xmi:id="_CuiXADttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_CuiXATttEemVvrziPwI6Kw" key="body" value="let source = self.base_Usage.endType->selectByKind(UML::Class), target = self.base_Usage.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_CueFkTttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_CueFkjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CueFkzttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_CuesoTttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_CuesojttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CufTsDttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_CufTsTttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_Cugh0DttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_CuhI4DttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_CujlIDttEemVvrziPwI6Kw" name="CheckNavigability">
          <eAnnotations xmi:id="_CuprwDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_CuprwTttEemVvrziPwI6Kw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_CukMMTttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_CukzQDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CukzQTttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_CulaUTttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_CumBYDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CumBYTttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_CumBYjttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_CunPgDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_CuodoDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_CuQqMDttEemVvrziPwI6Kw" name="base_Usage" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Usage"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_CoVoYDttEemVvrziPwI6Kw" name="Realization" eSuperTypes="_CoTzMjttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_CoVoYTttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_CoRW-zttEemVvrziPwI6Kw"/>
        <eOperations xmi:id="_CvL3QDttEemVvrziPwI6Kw" name="CheckEndTypes">
          <eAnnotations xmi:id="_CvSk8DttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_CvSk8TttEemVvrziPwI6Kw" key="body" value="let source = self.base_Realization.endType->selectByKind(UML::Class), target = self.base_Realization.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_CvMeUTttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_CvMeUjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CvMeUzttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_CvNscTttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_CvNscjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CvNsczttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_CvOTgDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_CvPhoDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_CvQvwDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_CvTzEDttEemVvrziPwI6Kw" name="CheckNavigability">
          <eAnnotations xmi:id="_CvagwDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_CvagwTttEemVvrziPwI6Kw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_CvUaITttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_CvVBMDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CvVBMTttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_CvWPUTttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_CvWPUjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CvWPUzttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_CvWPVDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_CvYEgDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_CvZSoDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_Cu7_oDttEemVvrziPwI6Kw" name="base_Realization" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Realization"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_CoVoYjttEemVvrziPwI6Kw" name="Assignment" eSuperTypes="_CoTzMjttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_CoVoYzttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_CoRW_DttEemVvrziPwI6Kw"/>
        <eOperations xmi:id="_Cv4a0DttEemVvrziPwI6Kw" name="CheckEndTypes">
          <eAnnotations xmi:id="_Cv96YDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_Cv96YTttEemVvrziPwI6Kw" key="body" value="let source = self.base_Dependency.endType->selectByKind(UML::Class), target = self.base_Dependency.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_Cv5B4TttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_Cv5B4jttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_Cv5B4zttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_Cv5o8TttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_Cv6QADttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_Cv6QATttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_Cv6QAjttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_Cv7eIDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_Cv8sQDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_Cv_vkDttEemVvrziPwI6Kw" name="CheckNavigability">
          <eAnnotations xmi:id="_CwEBADttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_CwEBATttEemVvrziPwI6Kw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_CwAWoTttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_CwAWojttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CwAWozttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_CwBkwTttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_CwBkwjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CwBkwzttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_CwCL0DttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_CwCy4DttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_CwDZ8DttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_Cvq_cDttEemVvrziPwI6Kw" name="base_Dependency" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Dependency"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_CoWPcDttEemVvrziPwI6Kw" name="Aggregation" eSuperTypes="_CoTzMjttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_CoWPcTttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_CoRW_TttEemVvrziPwI6Kw"/>
        <eOperations xmi:id="_CwT4oDttEemVvrziPwI6Kw" name="CheckEndTypes">
          <eAnnotations xmi:id="_CwVt0DttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_CwVt0TttEemVvrziPwI6Kw" key="body" value="let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_CwT4ojttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_CwT4ozttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CwT4pDttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_CwUfsTttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_CwUfsjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CwUfszttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_CwUftDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_CwVGwDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_CwVGwTttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_CwWU4DttEemVvrziPwI6Kw" name="CheckNavigability">
          <eAnnotations xmi:id="_CwYxIDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_CwYxITttEemVvrziPwI6Kw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_CwWU4jttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_CwWU4zttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CwWU5DttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_CwW78jttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_CwW78zttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CwW79DttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_CwW79TttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_CwXjADttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_CwYKEDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_CwKusDttEemVvrziPwI6Kw" name="base_Association" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Association"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_CoWPcjttEemVvrziPwI6Kw" name="Composition" eSuperTypes="_CoTzMjttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_CoW2gDttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_CoRW_jttEemVvrziPwI6Kw"/>
        <eOperations xmi:id="_CwmzkDttEemVvrziPwI6Kw" name="CheckEndTypes">
          <eAnnotations xmi:id="_CwpP0DttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_CwpP0TttEemVvrziPwI6Kw" key="body" value="let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_CwnaoDttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_CwnaoTttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CwnaojttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_CwnapTttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_CwnapjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CwnapzttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_CwoBsDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_CwoBsTttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_CwoowDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_Cwp24DttEemVvrziPwI6Kw" name="CheckNavigability">
          <eAnnotations xmi:id="_CwrsEDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_CwrsETttEemVvrziPwI6Kw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_Cwp24jttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_Cwp24zttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_Cwqd8DttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_Cwqd8zttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_Cwqd9DttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_Cwqd9TttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_Cwqd9jttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_CwrFADttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_CwrFATttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_CweQsDttEemVvrziPwI6Kw" name="base_Association" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Association"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_CoW2gTttEemVvrziPwI6Kw" name="Flow" eSuperTypes="_CoTzMjttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_CoW2gjttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_CoRW_zttEemVvrziPwI6Kw"/>
        <eOperations xmi:id="_Cw9_8DttEemVvrziPwI6Kw" name="CheckEndTypes">
          <eAnnotations xmi:id="_CxAcMDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_CxAcMTttEemVvrziPwI6Kw" key="body" value="let source = self.base_InformationFlow.endType->selectByKind(UML::Class), target = self.base_InformationFlow.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_Cw-nATttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_Cw-nAjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_Cw-nAzttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_Cw_OETttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_Cw_OEjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_Cw_OEzttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_Cw_OFDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_Cw_1IDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_Cw_1ITttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_CxBDQDttEemVvrziPwI6Kw" name="CheckNavigability">
          <eAnnotations xmi:id="_CxC4cTttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_CxC4cjttEemVvrziPwI6Kw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_CxBDQjttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_CxBDQzttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CxBDRDttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_CxBqUTttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_CxBqUjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CxBqUzttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_CxBqVDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_CxCRYDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_CxC4cDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_Cw0O8DttEemVvrziPwI6Kw" name="base_InformationFlow" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//InformationFlow"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_CoXdkDttEemVvrziPwI6Kw" name="Triggering" eSuperTypes="_CoTzMjttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_CoXdkTttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_CoRXADttEemVvrziPwI6Kw"/>
        <eOperations xmi:id="_CxVzYDttEemVvrziPwI6Kw" name="CheckEndTypes">
          <eAnnotations xmi:id="_CxZdwDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_CxZdwTttEemVvrziPwI6Kw" key="body" value="let source = self.base_InformationFlow.endType->selectByKind(UML::Class), target = self.base_InformationFlow.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_CxWacTttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_CxWacjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CxWaczttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_CxXBgTttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_CxXBgjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CxXBgzttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_CxXBhDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_CxXokDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_CxY2sDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_Cxar4DttEemVvrziPwI6Kw" name="CheckNavigability">
          <eAnnotations xmi:id="_Cxe9UDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_Cxe9UTttEemVvrziPwI6Kw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_CxbS8DttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_CxbS8TttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CxbS8jttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_CxchETttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_CxchEjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_CxchEzttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_CxchFDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_CxdvMDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_CxeWQDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_CxKNMDttEemVvrziPwI6Kw" name="base_InformationFlow" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//InformationFlow"/>
        </eStructuralFeatures>
      </eClassifiers>
      <eClassifiers xmi:type="ecore:EClass" xmi:id="_CoXdkjttEemVvrziPwI6Kw" name="Specialization" eSuperTypes="_CoTzMjttEemVvrziPwI6Kw">
        <eAnnotations xmi:id="_CoXdkzttEemVvrziPwI6Kw" source="http://www.eclipse.org/uml2/2.0.0/UML" references="_CoRXATttEemVvrziPwI6Kw"/>
        <eOperations xmi:id="_Cx1ioDttEemVvrziPwI6Kw" name="CheckEndTypes">
          <eAnnotations xmi:id="_Cx3-4DttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_Cx3-4TttEemVvrziPwI6Kw" key="body" value="let source = self.base_Generalization.endType->selectByKind(UML::Class), target = self.base_Generalization.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_Cx2JsDttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_Cx2JsTttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_Cx2JsjttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_Cx2JtTttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_Cx2JtjttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_Cx2JtzttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_Cx2wwDttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_Cx2wwTttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_Cx3X0DttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eOperations xmi:id="_Cx5NADttEemVvrziPwI6Kw" name="CheckNavigability">
          <eAnnotations xmi:id="_Cx8QUDttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/Ecore/OCL">
            <details xmi:id="_Cx83YDttEemVvrziPwI6Kw" key="body" value="let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif"/>
          </eAnnotations>
          <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
          <eParameters xmi:id="_Cx5NAjttEemVvrziPwI6Kw" name="diagnostics">
            <eAnnotations xmi:id="_Cx5NAzttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_Cx5NBDttEemVvrziPwI6Kw" key="documentation" value="The chain of diagnostics to which problems are to be appended."/>
            </eAnnotations>
            <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EDiagnosticChain"/>
          </eParameters>
          <eParameters xmi:id="_Cx50EjttEemVvrziPwI6Kw" name="context">
            <eAnnotations xmi:id="_Cx50EzttEemVvrziPwI6Kw" source="http://www.eclipse.org/emf/2002/GenModel">
              <details xmi:id="_Cx6bIDttEemVvrziPwI6Kw" key="documentation" value="The cache of context-specific information."/>
            </eAnnotations>
            <eGenericType xmi:id="_Cx6bITttEemVvrziPwI6Kw">
              <eTypeArguments xmi:id="_Cx7CMDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eTypeArguments xmi:id="_Cx7pQDttEemVvrziPwI6Kw">
                <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
              </eTypeArguments>
              <eClassifier xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EMap"/>
            </eGenericType>
          </eParameters>
        </eOperations>
        <eStructuralFeatures xmi:type="ecore:EReference" xmi:id="_CxrxoDttEemVvrziPwI6Kw" name="base_Generalization" ordered="false" lowerBound="1">
          <eType xmi:type="ecore:EClass" href="http://www.eclipse.org/uml2/5.0.0/UML#//Generalization"/>
        </eStructuralFeatures>
      </eClassifiers>
    </contents>
  </eAnnotations>
  <elementImport xmi:id="_CpI5oTttEemVvrziPwI6Kw" alias="Class">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
  </elementImport>
  <elementImport xmi:id="_CpthYDttEemVvrziPwI6Kw" alias="OpaqueBehavior">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#OpaqueBehavior"/>
  </elementImport>
  <elementImport xmi:id="_CqK0YTttEemVvrziPwI6Kw" alias="Artifact">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
  </elementImport>
  <elementImport xmi:id="_CsyDgTttEemVvrziPwI6Kw" alias="Association">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
  </elementImport>
  <elementImport xmi:id="_CteAATttEemVvrziPwI6Kw" alias="Usage">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
  </elementImport>
  <elementImport xmi:id="_CusIATttEemVvrziPwI6Kw" alias="Realization">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Realization"/>
  </elementImport>
  <elementImport xmi:id="_Cvc9ADttEemVvrziPwI6Kw" alias="Dependency">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Dependency"/>
  </elementImport>
  <elementImport xmi:id="_CwsTITttEemVvrziPwI6Kw" alias="InformationFlow">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#InformationFlow"/>
  </elementImport>
  <elementImport xmi:id="_CxgygDttEemVvrziPwI6Kw" alias="Generalization">
    <importedElement xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Generalization"/>
  </elementImport>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_CoRW8DttEemVvrziPwI6Kw" name="NodeElement" isAbstract="true">
    <ownedAttribute xmi:id="_CpI5oDttEemVvrziPwI6Kw" name="base_Class" association="_CpkXcDttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_CoRW8TttEemVvrziPwI6Kw" name="WorkPackage">
    <generalization xmi:id="_CoZSwDttEemVvrziPwI6Kw" general="_CoRW8DttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_Cps6UDttEemVvrziPwI6Kw" name="base_OpaqueBehavior" association="_CqAcUDttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#OpaqueBehavior"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_CoRW8jttEemVvrziPwI6Kw" name="Deliverable">
    <generalization xmi:id="_Coag4DttEemVvrziPwI6Kw" general="_CoRW8DttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_CqK0YDttEemVvrziPwI6Kw" name="base_Artifact" association="_CqeWYDttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_CoRW8zttEemVvrziPwI6Kw" name="Plateau">
    <generalization xmi:id="_CobvADttEemVvrziPwI6Kw" general="_CoRW8DttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_CqoucDttEemVvrziPwI6Kw" name="base_Class" association="_CqwqQDttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_CoRW9DttEemVvrziPwI6Kw" name="Gap">
    <generalization xmi:id="_CodkMDttEemVvrziPwI6Kw" general="_CoRW8DttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_Cq50MDttEemVvrziPwI6Kw" name="base_Artifact" association="_CrEzUDttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Artifact"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_CoRW9TttEemVvrziPwI6Kw" name="Grouping">
    <generalization xmi:id="_CoeyUDttEemVvrziPwI6Kw" general="_CoRW8DttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_CrPLYDttEemVvrziPwI6Kw" name="base_Class" association="_CrY8YDttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_CoRW9jttEemVvrziPwI6Kw" name="Junction">
    <generalization xmi:id="_CogngDttEemVvrziPwI6Kw" general="_CoRW9zttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_CritYDttEemVvrziPwI6Kw" name="base_OpaqueBehavior" association="_CrwIwDttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#OpaqueBehavior"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_CoRW9zttEemVvrziPwI6Kw" name="Relationship" isAbstract="true">
    <ownedAttribute xmi:id="_Cojq0DttEemVvrziPwI6Kw" name="source" type="_CoRW8DttEemVvrziPwI6Kw" association="_CokR4DttEemVvrziPwI6Kw">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Cojq0TttEemVvrziPwI6Kw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cojq0jttEemVvrziPwI6Kw" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_Cok48jttEemVvrziPwI6Kw" name="target" type="_CoRW8DttEemVvrziPwI6Kw" association="_ColgADttEemVvrziPwI6Kw">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Cok48zttEemVvrziPwI6Kw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cok49DttEemVvrziPwI6Kw" value="1"/>
    </ownedAttribute>
    <ownedAttribute xmi:id="_Cr4roDttEemVvrziPwI6Kw" name="base_Class" association="_Cso5kDttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Class"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_CoRW-DttEemVvrziPwI6Kw" name="Association">
    <ownedRule xmi:id="_CtM6QjttEemVvrziPwI6Kw" name="CheckEndTypes" constrainedElement="_CoRW-DttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_CtM6QzttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_CtU2EjttEemVvrziPwI6Kw" name="CheckNavigability" constrainedElement="_CoRW-DttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_CtU2EzttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_CopKYDttEemVvrziPwI6Kw" general="_CoRW9zttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_CsyDgDttEemVvrziPwI6Kw" name="base_Association" association="_Cs_e4TttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_CoRW-TttEemVvrziPwI6Kw" name="Access">
    <ownedRule xmi:id="_Ct42wjttEemVvrziPwI6Kw" name="CheckEndTypes" constrainedElement="_CoRW-TttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_Ct42wzttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let source = self.base_Usage.endType->selectByKind(UML::Class), target = self.base_Usage.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_CuCnwTttEemVvrziPwI6Kw" name="CheckNavigability" constrainedElement="_CoRW-TttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_CuCnwjttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_CosNsDttEemVvrziPwI6Kw" general="_CoRW9zttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_CteAADttEemVvrziPwI6Kw" name="base_Usage" association="_Ctq0UTttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_CoRW-jttEemVvrziPwI6Kw" name="UsedBy">
    <ownedRule xmi:id="_CucQYjttEemVvrziPwI6Kw" name="CheckEndTypes" constrainedElement="_CoRW-jttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_CucQYzttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let source = self.base_Usage.endType->selectByKind(UML::Class), target = self.base_Usage.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_Cui-EDttEemVvrziPwI6Kw" name="CheckNavigability" constrainedElement="_CoRW-jttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_Cui-ETttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_CovRADttEemVvrziPwI6Kw" general="_CoRW9zttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_CuJ8gDttEemVvrziPwI6Kw" name="base_Usage" association="_CuQqMTttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Usage"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_CoRW-zttEemVvrziPwI6Kw" name="Realization">
    <ownedRule xmi:id="_CvKpIDttEemVvrziPwI6Kw" name="CheckEndTypes" constrainedElement="_CoRW-zttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_CvKpITttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let source = self.base_Realization.endType->selectByKind(UML::Class), target = self.base_Realization.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_CvTMADttEemVvrziPwI6Kw" name="CheckNavigability" constrainedElement="_CoRW-zttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_CvTMATttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_CoxtQDttEemVvrziPwI6Kw" general="_CoRW9zttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_CusIADttEemVvrziPwI6Kw" name="base_Realization" association="_Cu7_oTttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Realization"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_CoRW_DttEemVvrziPwI6Kw" name="Assignment">
    <ownedRule xmi:id="_Cv3MsjttEemVvrziPwI6Kw" name="CheckEndTypes" constrainedElement="_CoRW_DttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_Cv3zwDttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let source = self.base_Dependency.endType->selectByKind(UML::Class), target = self.base_Dependency.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_Cv-hcDttEemVvrziPwI6Kw" name="CheckNavigability" constrainedElement="_CoRW_DttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_Cv-hcTttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_Co0wkDttEemVvrziPwI6Kw" general="_CoRW9zttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_CvcV8DttEemVvrziPwI6Kw" name="base_Dependency" association="_Cvq_cTttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Dependency"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_CoRW_TttEemVvrziPwI6Kw" name="Aggregation">
    <ownedRule xmi:id="_CwSqgjttEemVvrziPwI6Kw" name="CheckEndTypes" constrainedElement="_CoRW_TttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_CwTRkDttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_CwVt0jttEemVvrziPwI6Kw" name="CheckNavigability" constrainedElement="_CoRW_TttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_CwVt0zttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_Co3z4DttEemVvrziPwI6Kw" general="_CoRW9zttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_CwEoEDttEemVvrziPwI6Kw" name="base_Association" association="_CwKusTttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_CoRW_jttEemVvrziPwI6Kw" name="Composition">
    <ownedRule xmi:id="_CwmMgjttEemVvrziPwI6Kw" name="CheckEndTypes" constrainedElement="_CoRW_jttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_CwmMgzttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let source = self.base_Association.endType->selectByKind(UML::Class), target = self.base_Association.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_CwpP0jttEemVvrziPwI6Kw" name="CheckNavigability" constrainedElement="_CoRW_jttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_CwpP0zttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_Co6QIDttEemVvrziPwI6Kw" general="_CoRW9zttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_CwZYMDttEemVvrziPwI6Kw" name="base_Association" association="_Cwe3wDttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Association"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_CoRW_zttEemVvrziPwI6Kw" name="Flow">
    <ownedRule xmi:id="_Cw9Y4TttEemVvrziPwI6Kw" name="CheckEndTypes" constrainedElement="_CoRW_zttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_Cw9Y4jttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let source = self.base_InformationFlow.endType->selectByKind(UML::Class), target = self.base_InformationFlow.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_CxAcMjttEemVvrziPwI6Kw" name="CheckNavigability" constrainedElement="_CoRW_zttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_CxAcMzttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_Co8FUDttEemVvrziPwI6Kw" general="_CoRW9zttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_CwsTIDttEemVvrziPwI6Kw" name="base_InformationFlow" association="_Cw02ADttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#InformationFlow"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_CoRXADttEemVvrziPwI6Kw" name="Triggering">
    <ownedRule xmi:id="_CxUlQjttEemVvrziPwI6Kw" name="CheckEndTypes" constrainedElement="_CoRXADttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_CxVMUDttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let source = self.base_InformationFlow.endType->selectByKind(UML::Class), target = self.base_InformationFlow.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_CxaE0DttEemVvrziPwI6Kw" name="CheckNavigability" constrainedElement="_CoRXADttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_CxaE0TttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_Co-hkDttEemVvrziPwI6Kw" general="_CoRW9zttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_CxEGkDttEemVvrziPwI6Kw" name="base_InformationFlow" association="_CxKNMTttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#InformationFlow"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Stereotype" xmi:id="_CoRXATttEemVvrziPwI6Kw" name="Specialization">
    <ownedRule xmi:id="_Cx07kTttEemVvrziPwI6Kw" name="CheckEndTypes" constrainedElement="_CoRXATttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_Cx07kjttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let source = self.base_Generalization.endType->selectByKind(UML::Class), target = self.base_Generalization.endType->selectByKind(UML::Class) in source->exists(c|c.extension_NodeElement->notEmpty()) and target->exists(c|c.extension_NodeElement -> notEmpty())</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:id="_Cx4l8DttEemVvrziPwI6Kw" name="CheckNavigability" constrainedElement="_CoRXATttEemVvrziPwI6Kw">
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_Cx4l8TttEemVvrziPwI6Kw">
        <language>OCL</language>
        <body>let memberEnds = self.base_Association.memberEnd in let NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty()), NodeElementEnd = memberEnds->select(type.oclIsKindOf(UML::Class) and type.oclAsType(UML::Class).extension_NodeElement->notEmpty())in if NodeElementEnd->notEmpty() and NodeElementEnd->notEmpty() then NodeElementEnd->first().isNavigable() = true and NodeElementEnd->first().isNavigable() = false else false endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:id="_CpF2UDttEemVvrziPwI6Kw" general="_CoRW9zttEemVvrziPwI6Kw"/>
    <ownedAttribute xmi:id="_CxgLcDttEemVvrziPwI6Kw" name="base_Generalization" association="_CxsYsDttEemVvrziPwI6Kw">
      <type xmi:type="uml:Class" href="pathmap://UML_METAMODELS/UML.metamodel.uml#Generalization"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_CokR4DttEemVvrziPwI6Kw" memberEnd="_CokR4TttEemVvrziPwI6Kw _Cojq0DttEemVvrziPwI6Kw">
    <eAnnotations xmi:id="_CokR5DttEemVvrziPwI6Kw" source="org.eclipse.papyrus">
      <details xmi:id="_CokR5TttEemVvrziPwI6Kw" key="nature" value="UML_Nature"/>
    </eAnnotations>
    <ownedEnd xmi:id="_CokR4TttEemVvrziPwI6Kw" name="RelationshipEnd" type="_CoRW9zttEemVvrziPwI6Kw" association="_CokR4DttEemVvrziPwI6Kw">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_CokR4jttEemVvrziPwI6Kw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CokR4zttEemVvrziPwI6Kw" value="1"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_ColgADttEemVvrziPwI6Kw" memberEnd="_ColgATttEemVvrziPwI6Kw _Cok48jttEemVvrziPwI6Kw">
    <eAnnotations xmi:id="_ColgBDttEemVvrziPwI6Kw" source="org.eclipse.papyrus">
      <details xmi:id="_ColgBTttEemVvrziPwI6Kw" key="nature" value="UML_Nature"/>
    </eAnnotations>
    <ownedEnd xmi:id="_ColgATttEemVvrziPwI6Kw" name="RelationshipEnd" type="_CoRW9zttEemVvrziPwI6Kw" association="_ColgADttEemVvrziPwI6Kw">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ColgAjttEemVvrziPwI6Kw" value="1"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ColgAzttEemVvrziPwI6Kw" value="1"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_CpkXcDttEemVvrziPwI6Kw" name="E_NodeElement_Class1" memberEnd="_CpkXcTttEemVvrziPwI6Kw _CpI5oDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_CpkXcTttEemVvrziPwI6Kw" name="extension_NodeElement" type="_CoRW8DttEemVvrziPwI6Kw" aggregation="composite" association="_CpkXcDttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_CqAcUDttEemVvrziPwI6Kw" name="E_WorkPackage_OpaqueBehavior1" memberEnd="_CqAcUTttEemVvrziPwI6Kw _Cps6UDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_CqAcUTttEemVvrziPwI6Kw" name="extension_WorkPackage" type="_CoRW8TttEemVvrziPwI6Kw" aggregation="composite" association="_CqAcUDttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_CqeWYDttEemVvrziPwI6Kw" name="E_Deliverable_Artifact1" memberEnd="_CqeWYTttEemVvrziPwI6Kw _CqK0YDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_CqeWYTttEemVvrziPwI6Kw" name="extension_Deliverable" type="_CoRW8jttEemVvrziPwI6Kw" aggregation="composite" association="_CqeWYDttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_CqwqQDttEemVvrziPwI6Kw" name="E_Plateau_Class1" memberEnd="_CqwqQTttEemVvrziPwI6Kw _CqoucDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_CqwqQTttEemVvrziPwI6Kw" name="extension_Plateau" type="_CoRW8zttEemVvrziPwI6Kw" aggregation="composite" association="_CqwqQDttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_CrEzUDttEemVvrziPwI6Kw" name="E_Gap_Artifact1" memberEnd="_CrEzUTttEemVvrziPwI6Kw _Cq50MDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_CrEzUTttEemVvrziPwI6Kw" name="extension_Gap" type="_CoRW9DttEemVvrziPwI6Kw" aggregation="composite" association="_CrEzUDttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_CrY8YDttEemVvrziPwI6Kw" name="E_Grouping_Class1" memberEnd="_CrY8YTttEemVvrziPwI6Kw _CrPLYDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_CrY8YTttEemVvrziPwI6Kw" name="extension_Grouping" type="_CoRW9TttEemVvrziPwI6Kw" aggregation="composite" association="_CrY8YDttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_CrwIwDttEemVvrziPwI6Kw" name="E_Junction_OpaqueBehavior1" memberEnd="_CrwIwTttEemVvrziPwI6Kw _CritYDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_CrwIwTttEemVvrziPwI6Kw" name="extension_Junction" type="_CoRW9jttEemVvrziPwI6Kw" aggregation="composite" association="_CrwIwDttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_Cso5kDttEemVvrziPwI6Kw" name="E_Relationship_Class1" memberEnd="_Cso5kTttEemVvrziPwI6Kw _Cr4roDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_Cso5kTttEemVvrziPwI6Kw" name="extension_Relationship" type="_CoRW9zttEemVvrziPwI6Kw" aggregation="composite" association="_Cso5kDttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_Cs_e4TttEemVvrziPwI6Kw" name="E_Association_Association1" memberEnd="_Cs_e4jttEemVvrziPwI6Kw _CsyDgDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_Cs_e4jttEemVvrziPwI6Kw" name="extension_Association" type="_CoRW-DttEemVvrziPwI6Kw" aggregation="composite" association="_Cs_e4TttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_Ctq0UTttEemVvrziPwI6Kw" name="E_Access_Usage1" memberEnd="_Ctq0UjttEemVvrziPwI6Kw _CteAADttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_Ctq0UjttEemVvrziPwI6Kw" name="extension_Access" type="_CoRW-TttEemVvrziPwI6Kw" aggregation="composite" association="_Ctq0UTttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_CuQqMTttEemVvrziPwI6Kw" name="E_UsedBy_Usage1" memberEnd="_CuQqMjttEemVvrziPwI6Kw _CuJ8gDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_CuQqMjttEemVvrziPwI6Kw" name="extension_UsedBy" type="_CoRW-jttEemVvrziPwI6Kw" aggregation="composite" association="_CuQqMTttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_Cu7_oTttEemVvrziPwI6Kw" name="E_Realization_Realization1" memberEnd="_Cu7_ojttEemVvrziPwI6Kw _CusIADttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_Cu7_ojttEemVvrziPwI6Kw" name="extension_Realization" type="_CoRW-zttEemVvrziPwI6Kw" aggregation="composite" association="_Cu7_oTttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_Cvq_cTttEemVvrziPwI6Kw" name="E_Assignment_Dependency1" memberEnd="_Cvq_cjttEemVvrziPwI6Kw _CvcV8DttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_Cvq_cjttEemVvrziPwI6Kw" name="extension_Assignment" type="_CoRW_DttEemVvrziPwI6Kw" aggregation="composite" association="_Cvq_cTttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_CwKusTttEemVvrziPwI6Kw" name="E_Aggregation_Association1" memberEnd="_CwKusjttEemVvrziPwI6Kw _CwEoEDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_CwKusjttEemVvrziPwI6Kw" name="extension_Aggregation" type="_CoRW_TttEemVvrziPwI6Kw" aggregation="composite" association="_CwKusTttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_Cwe3wDttEemVvrziPwI6Kw" name="E_Composition_Association1" memberEnd="_Cwe3wTttEemVvrziPwI6Kw _CwZYMDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_Cwe3wTttEemVvrziPwI6Kw" name="extension_Composition" type="_CoRW_jttEemVvrziPwI6Kw" aggregation="composite" association="_Cwe3wDttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_Cw02ADttEemVvrziPwI6Kw" name="E_Flow_InformationFlow1" memberEnd="_Cw02ATttEemVvrziPwI6Kw _CwsTIDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_Cw02ATttEemVvrziPwI6Kw" name="extension_Flow" type="_CoRW_zttEemVvrziPwI6Kw" aggregation="composite" association="_Cw02ADttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_CxKNMTttEemVvrziPwI6Kw" name="E_Triggering_InformationFlow1" memberEnd="_CxKNMjttEemVvrziPwI6Kw _CxEGkDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_CxKNMjttEemVvrziPwI6Kw" name="extension_Triggering" type="_CoRXADttEemVvrziPwI6Kw" aggregation="composite" association="_CxKNMTttEemVvrziPwI6Kw"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Extension" xmi:id="_CxsYsDttEemVvrziPwI6Kw" name="E_Specialization_Generalization1" memberEnd="_CxsYsTttEemVvrziPwI6Kw _CxgLcDttEemVvrziPwI6Kw">
    <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_CxsYsTttEemVvrziPwI6Kw" name="extension_Specialization" type="_CoRXATttEemVvrziPwI6Kw" aggregation="composite" association="_CxsYsDttEemVvrziPwI6Kw"/>
  </packagedElement>
</uml:Profile>
